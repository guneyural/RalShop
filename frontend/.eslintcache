[{"/home/guney/RalShop/frontend/src/index.js":"1","/home/guney/RalShop/frontend/src/app.js":"2","/home/guney/RalShop/frontend/src/redux/store.js":"3","/home/guney/RalShop/frontend/src/privateRoutes/changePasswordRoute.js":"4","/home/guney/RalShop/frontend/src/privateRoutes/privateLogin.js":"5","/home/guney/RalShop/frontend/src/privateRoutes/privateRoute.js":"6","/home/guney/RalShop/frontend/src/privateRoutes/sellerChangePasswordPage.js":"7","/home/guney/RalShop/frontend/src/pages/NotFound.js":"8","/home/guney/RalShop/frontend/src/privateRoutes/NormalRoute.js":"9","/home/guney/RalShop/frontend/src/pages/Home.js":"10","/home/guney/RalShop/frontend/src/pages/AuthPage.js":"11","/home/guney/RalShop/frontend/src/pages/ProfileSettings.js":"12","/home/guney/RalShop/frontend/src/pages/wishlistPage.js":"13","/home/guney/RalShop/frontend/src/pages/ProfilePage.js":"14","/home/guney/RalShop/frontend/src/pages/ForgotPasswordPage.js":"15","/home/guney/RalShop/frontend/src/pages/ForgotPasswordCodePage.js":"16","/home/guney/RalShop/frontend/src/pages/changePasswordPage.js":"17","/home/guney/RalShop/frontend/src/pages/ShoppingCartPage.js":"18","/home/guney/RalShop/frontend/src/pages/ProductPage.js":"19","/home/guney/RalShop/frontend/src/pages/Messaging.js":"20","/home/guney/RalShop/frontend/src/pages/CheckoutPage.js":"21","/home/guney/RalShop/frontend/src/components/footer.js":"22","/home/guney/RalShop/frontend/src/components/navbar.js":"23","/home/guney/RalShop/frontend/src/pages/Messenger.js":"24","/home/guney/RalShop/frontend/src/redux/actions/authActions.js":"25","/home/guney/RalShop/frontend/src/redux/actions/sellerActions.js":"26","/home/guney/RalShop/frontend/src/redux/actions/chatActions.js":"27","/home/guney/RalShop/frontend/src/redux/actions/wishlistAction.js":"28","/home/guney/RalShop/frontend/src/redux/actions/ShoppingCartActions.js":"29","/home/guney/RalShop/frontend/src/redux/actions/types.js":"30","/home/guney/RalShop/frontend/src/pages/seller/loginPage.js":"31","/home/guney/RalShop/frontend/src/pages/seller/sellerHomePage.js":"32","/home/guney/RalShop/frontend/src/pages/seller/ForgotPasswordSendEmailPage.js":"33","/home/guney/RalShop/frontend/src/pages/seller/changePasswordPage.js":"34","/home/guney/RalShop/frontend/src/pages/seller/SellerProfilePage.js":"35","/home/guney/RalShop/frontend/src/pages/seller/AddProductPage.js":"36","/home/guney/RalShop/frontend/src/pages/seller/registerPage.js":"37","/home/guney/RalShop/frontend/src/privateRoutes/sellerRoutes.js":"38","/home/guney/RalShop/frontend/src/privateRoutes/passwordResetRoutes.js":"39","/home/guney/RalShop/frontend/src/redux/reducers/index.js":"40","/home/guney/RalShop/frontend/src/redux/actions/productActions.js":"41","/home/guney/RalShop/frontend/src/components/passwordSettings.js":"42","/home/guney/RalShop/frontend/src/components/messageBox.js":"43","/home/guney/RalShop/frontend/src/components/AddressModal.js":"44","/home/guney/RalShop/frontend/src/components/checkoutPayment.js":"45","/home/guney/RalShop/frontend/src/components/checkoutAddress.js":"46","/home/guney/RalShop/frontend/src/components/profileSettings.js":"47","/home/guney/RalShop/frontend/src/components/sellerNavbar.js":"48","/home/guney/RalShop/frontend/src/utils/helpers.js":"49","/home/guney/RalShop/frontend/src/data/category.js":"50","/home/guney/RalShop/frontend/src/data/countries.js":"51","/home/guney/RalShop/frontend/src/components/fullscreenImage.js":"52","/home/guney/RalShop/frontend/src/redux/actions/productReviewActions.js":"53","/home/guney/RalShop/frontend/src/components/ProductDescription.js":"54","/home/guney/RalShop/frontend/src/components/ProductLocation.js":"55","/home/guney/RalShop/frontend/src/redux/reducers/addressReducer.js":"56","/home/guney/RalShop/frontend/src/components/stripeCheckoutForm.js":"57","/home/guney/RalShop/frontend/src/redux/actions/addressActions.js":"58","/home/guney/RalShop/frontend/src/redux/reducers/wishlistReducer.js":"59","/home/guney/RalShop/frontend/src/redux/reducers/CartReducer.js":"60","/home/guney/RalShop/frontend/src/redux/reducers/chatReducer.js":"61","/home/guney/RalShop/frontend/src/redux/reducers/productReducer.js":"62","/home/guney/RalShop/frontend/src/redux/reducers/errorReducer.js":"63","/home/guney/RalShop/frontend/src/redux/reducers/authReducer.js":"64","/home/guney/RalShop/frontend/src/redux/reducers/productReviewReducer.js":"65","/home/guney/RalShop/frontend/src/redux/reducers/sellerReducer.js":"66","/home/guney/RalShop/frontend/src/components/profilePageNavbar.js":"67","/home/guney/RalShop/frontend/src/components/profilePageReviewsSection.js":"68","/home/guney/RalShop/frontend/src/components/profilePageAddressSection.js":"69","/home/guney/RalShop/frontend/src/components/profilePageOrderSection.js":"70","/home/guney/RalShop/frontend/src/redux/reducers/orderReducer.js":"71","/home/guney/RalShop/frontend/src/redux/actions/orderActions.js":"72","/home/guney/RalShop/frontend/src/components/orderDetailsModal.js":"73","/home/guney/RalShop/frontend/src/components/sellerDetailsModal.js":"74","/home/guney/RalShop/frontend/src/components/ProfilePageRatedSellersSection.js":"75","/home/guney/RalShop/frontend/src/redux/reducers/rateSellerReducer.js":"76","/home/guney/RalShop/frontend/src/redux/actions/rateSellerActions.js":"77","/home/guney/RalShop/frontend/src/components/sellerProfileEdit.js":"78","/home/guney/RalShop/frontend/src/pages/seller/allOrdersPage.js":"79","/home/guney/RalShop/frontend/src/pages/seller/AllProductsPage.js":"80","/home/guney/RalShop/frontend/src/pages/seller/cancelledOrders.js":"81","/home/guney/RalShop/frontend/src/pages/seller/productActionsPage.js":"82","/home/guney/RalShop/frontend/src/components/seller/productActionsPageNavbar.js":"83","/home/guney/RalShop/frontend/src/components/seller/productActionsFilters.js":"84","/home/guney/RalShop/frontend/src/components/seller/productActionsProductList.js":"85","/home/guney/RalShop/frontend/src/components/seller/updateProductModal.js":"86","/home/guney/RalShop/frontend/src/pages/searchResultsPage.js":"87","/home/guney/RalShop/frontend/src/components/listProducts.js":"88","/home/guney/RalShop/frontend/src/components/ProductFilters.js":"89","/home/guney/RalShop/frontend/src/redux/actions/searchProduct.js":"90","/home/guney/RalShop/frontend/src/redux/reducers/searchReducer.js":"91","/home/guney/RalShop/frontend/src/pages/ProductsByCategory.js":"92","/home/guney/RalShop/frontend/src/pages/ProductsBySubCategory.js":"93","/home/guney/RalShop/frontend/src/components/seller/orderList.js":"94","/home/guney/RalShop/frontend/src/pages/seller/cancelRequestOrders.js":"95","/home/guney/RalShop/frontend/src/components/HomePageCategoriesBox.js":"96","/home/guney/RalShop/frontend/src/components/HomePageOnlyLoggedInUsers.js":"97","/home/guney/RalShop/frontend/src/components/HomePageSection.js":"98","/home/guney/RalShop/frontend/src/components/seller/sellerHomePageSection.js":"99","/home/guney/RalShop/frontend/src/components/seller/totalRevenueChart.js":"100","/home/guney/RalShop/frontend/src/components/seller/revenueByMonth.js":"101","/home/guney/RalShop/frontend/src/components/seller/OrdersByMonth.js":"102","/home/guney/RalShop/frontend/src/components/seller/StatusesOfOrders.js":"103"},{"size":686,"mtime":1620909983733,"results":"104","hashOfConfig":"105"},{"size":10049,"mtime":1622310554782,"results":"106","hashOfConfig":"105"},{"size":1867,"mtime":1622995270567,"results":"107","hashOfConfig":"105"},{"size":849,"mtime":1620909983737,"results":"108","hashOfConfig":"105"},{"size":704,"mtime":1620909983737,"results":"109","hashOfConfig":"105"},{"size":679,"mtime":1620909983737,"results":"110","hashOfConfig":"105"},{"size":711,"mtime":1620909983737,"results":"111","hashOfConfig":"105"},{"size":310,"mtime":1620909983733,"results":"112","hashOfConfig":"105"},{"size":457,"mtime":1620909983737,"results":"113","hashOfConfig":"105"},{"size":5691,"mtime":1622476569944,"results":"114","hashOfConfig":"105"},{"size":6209,"mtime":1620909983733,"results":"115","hashOfConfig":"105"},{"size":1144,"mtime":1620909983733,"results":"116","hashOfConfig":"105"},{"size":8181,"mtime":1621089643691,"results":"117","hashOfConfig":"105"},{"size":6814,"mtime":1621489999585,"results":"118","hashOfConfig":"105"},{"size":3706,"mtime":1620909983733,"results":"119","hashOfConfig":"105"},{"size":4066,"mtime":1620909983733,"results":"120","hashOfConfig":"105"},{"size":5050,"mtime":1620909983733,"results":"121","hashOfConfig":"105"},{"size":13333,"mtime":1620909983733,"results":"122","hashOfConfig":"105"},{"size":49965,"mtime":1622474754951,"results":"123","hashOfConfig":"105"},{"size":13072,"mtime":1620909983733,"results":"124","hashOfConfig":"105"},{"size":6624,"mtime":1622403237475,"results":"125","hashOfConfig":"105"},{"size":1214,"mtime":1622474811775,"results":"126","hashOfConfig":"105"},{"size":18738,"mtime":1622238706131,"results":"127","hashOfConfig":"105"},{"size":5052,"mtime":1620909983733,"results":"128","hashOfConfig":"105"},{"size":6966,"mtime":1621017673657,"results":"129","hashOfConfig":"105"},{"size":8513,"mtime":1622817549361,"results":"130","hashOfConfig":"105"},{"size":3606,"mtime":1620909983737,"results":"131","hashOfConfig":"105"},{"size":1446,"mtime":1620909983737,"results":"132","hashOfConfig":"105"},{"size":2204,"mtime":1621694247981,"results":"133","hashOfConfig":"105"},{"size":5760,"mtime":1622817495905,"results":"134","hashOfConfig":"105"},{"size":4002,"mtime":1620909983737,"results":"135","hashOfConfig":"105"},{"size":4227,"mtime":1622832863754,"results":"136","hashOfConfig":"105"},{"size":3750,"mtime":1620909983733,"results":"137","hashOfConfig":"105"},{"size":5158,"mtime":1620909983733,"results":"138","hashOfConfig":"105"},{"size":8026,"mtime":1621521986622,"results":"139","hashOfConfig":"105"},{"size":13586,"mtime":1621810288286,"results":"140","hashOfConfig":"105"},{"size":13508,"mtime":1620912121377,"results":"141","hashOfConfig":"105"},{"size":633,"mtime":1620909983737,"results":"142","hashOfConfig":"105"},{"size":690,"mtime":1620909983737,"results":"143","hashOfConfig":"105"},{"size":835,"mtime":1622215052455,"results":"144","hashOfConfig":"105"},{"size":1612,"mtime":1620909983737,"results":"145","hashOfConfig":"105"},{"size":4117,"mtime":1620909983733,"results":"146","hashOfConfig":"105"},{"size":1424,"mtime":1621670505242,"results":"147","hashOfConfig":"105"},{"size":8947,"mtime":1621005741299,"results":"148","hashOfConfig":"105"},{"size":427,"mtime":1620909983733,"results":"149","hashOfConfig":"105"},{"size":8733,"mtime":1620909983733,"results":"150","hashOfConfig":"105"},{"size":7198,"mtime":1620909983733,"results":"151","hashOfConfig":"105"},{"size":9953,"mtime":1622541095836,"results":"152","hashOfConfig":"105"},{"size":216,"mtime":1620909983741,"results":"153","hashOfConfig":"105"},{"size":1035,"mtime":1620909983733,"results":"154","hashOfConfig":"105"},{"size":9540,"mtime":1620909983733,"results":"155","hashOfConfig":"105"},{"size":3351,"mtime":1620909983733,"results":"156","hashOfConfig":"105"},{"size":2611,"mtime":1620909983737,"results":"157","hashOfConfig":"105"},{"size":530,"mtime":1620909983733,"results":"158","hashOfConfig":"105"},{"size":1152,"mtime":1620909983733,"results":"159","hashOfConfig":"105"},{"size":3085,"mtime":1621006930650,"results":"160","hashOfConfig":"105"},{"size":8011,"mtime":1621267252904,"results":"161","hashOfConfig":"105"},{"size":3042,"mtime":1620909983737,"results":"162","hashOfConfig":"105"},{"size":1758,"mtime":1620909983737,"results":"163","hashOfConfig":"105"},{"size":4296,"mtime":1621776715888,"results":"164","hashOfConfig":"105"},{"size":2454,"mtime":1620909983737,"results":"165","hashOfConfig":"105"},{"size":1167,"mtime":1621092558586,"results":"166","hashOfConfig":"105"},{"size":453,"mtime":1620909983737,"results":"167","hashOfConfig":"105"},{"size":7304,"mtime":1621017734713,"results":"168","hashOfConfig":"105"},{"size":1859,"mtime":1620909983737,"results":"169","hashOfConfig":"105"},{"size":6841,"mtime":1622817608394,"results":"170","hashOfConfig":"105"},{"size":1906,"mtime":1621342093103,"results":"171","hashOfConfig":"105"},{"size":3697,"mtime":1621249406441,"results":"172","hashOfConfig":"105"},{"size":6911,"mtime":1621162436778,"results":"173","hashOfConfig":"105"},{"size":21657,"mtime":1622370206401,"results":"174","hashOfConfig":"105"},{"size":1356,"mtime":1621492051904,"results":"175","hashOfConfig":"105"},{"size":2127,"mtime":1621490355032,"results":"176","hashOfConfig":"105"},{"size":15379,"mtime":1622369939586,"results":"177","hashOfConfig":"105"},{"size":8878,"mtime":1621340599184,"results":"178","hashOfConfig":"105"},{"size":7038,"mtime":1621381743818,"results":"179","hashOfConfig":"105"},{"size":1879,"mtime":1621364340989,"results":"180","hashOfConfig":"105"},{"size":2694,"mtime":1621364306380,"results":"181","hashOfConfig":"105"},{"size":13172,"mtime":1621528695952,"results":"182","hashOfConfig":"105"},{"size":1290,"mtime":1622330168275,"results":"183","hashOfConfig":"105"},{"size":1023,"mtime":1621811838809,"results":"184","hashOfConfig":"105"},{"size":1187,"mtime":1622333073061,"results":"185","hashOfConfig":"105"},{"size":1025,"mtime":1621808228414,"results":"186","hashOfConfig":"105"},{"size":3776,"mtime":1622315601639,"results":"187","hashOfConfig":"105"},{"size":10499,"mtime":1622333061561,"results":"188","hashOfConfig":"105"},{"size":8713,"mtime":1622305166177,"results":"189","hashOfConfig":"105"},{"size":18623,"mtime":1621776497110,"results":"190","hashOfConfig":"105"},{"size":7599,"mtime":1622282159758,"results":"191","hashOfConfig":"105"},{"size":6862,"mtime":1622241142088,"results":"192","hashOfConfig":"105"},{"size":8875,"mtime":1622282437733,"results":"193","hashOfConfig":"105"},{"size":2348,"mtime":1622243070561,"results":"194","hashOfConfig":"105"},{"size":1189,"mtime":1622243741312,"results":"195","hashOfConfig":"105"},{"size":7521,"mtime":1622282029173,"results":"196","hashOfConfig":"105"},{"size":196,"mtime":1622243721499,"results":"197","hashOfConfig":"105"},{"size":11627,"mtime":1622371483679,"results":"198","hashOfConfig":"105"},{"size":1214,"mtime":1622314694742,"results":"199","hashOfConfig":"105"},{"size":3456,"mtime":1622391355284,"results":"200","hashOfConfig":"105"},{"size":24549,"mtime":1622476820070,"results":"201","hashOfConfig":"105"},{"size":3888,"mtime":1622476033419,"results":"202","hashOfConfig":"105"},{"size":10644,"mtime":1622719594973,"results":"203","hashOfConfig":"105"},{"size":989,"mtime":1622826999148,"results":"204","hashOfConfig":"105"},{"size":836,"mtime":1622833319246,"results":"205","hashOfConfig":"105"},{"size":974,"mtime":1622828726980,"results":"206","hashOfConfig":"105"},{"size":1937,"mtime":1622762572618,"results":"207","hashOfConfig":"105"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},"1plhhb9",{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"210"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"210"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"210"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"210"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"210"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"210"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"210"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"210"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"210"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"210"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"210"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"210"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"210"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"210"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"210"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"210"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"210"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"210"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"210"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"210"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"210"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"210"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"210"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"210"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"210"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"210"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"210"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"210"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"210"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"210"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"210"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"210"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"210"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"210"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"210"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"210"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"210"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"210"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"210"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"210"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"210"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"210"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"210"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"210"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"210"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"210"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"210"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"210"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"210"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"210"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"210"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},"/home/guney/RalShop/frontend/src/index.js",[],["467","468"],"/home/guney/RalShop/frontend/src/app.js",["469","470"],"import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport PrivateRoute from \"./privateRoutes/privateRoute\";\nimport Home from \"./pages/Home\";\nimport NotFound from \"./pages/NotFound\";\nimport AuthPage from \"./pages/AuthPage\";\nimport WishlistPage from \"./pages/wishlistPage\";\nimport Navbar from \"./components/navbar\";\nimport Footer from \"./components/footer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUser } from \"./redux/actions/authActions\";\nimport {\n  getCurrentSeller,\n  notSellerRoute,\n} from \"./redux/actions/sellerActions\";\nimport { getNotifications } from \"./redux/actions/chatActions\";\nimport { getWishlist } from \"./redux/actions/wishlistAction\";\nimport { getCart } from \"./redux/actions/ShoppingCartActions\";\nimport PrivateLogin from \"./privateRoutes/privateLogin\";\nimport ProfilePage from \"./pages/ProfilePage\";\nimport ProfileSettingsPage from \"./pages/ProfileSettings\";\nimport ForgotPasswordPage from \"./pages/ForgotPasswordPage\";\nimport PasswordCodeConfirmationPage from \"./pages/ForgotPasswordCodePage\";\nimport PasswordResetRoute from \"./privateRoutes/passwordResetRoutes\";\nimport ChangePasswordRoute from \"./privateRoutes/changePasswordRoute\";\nimport ChangePasswordPage from \"./pages/changePasswordPage\";\nimport SellerRegisterPage from \"./pages/seller/registerPage\";\nimport SellerLoginPage from \"./pages/seller/loginPage\";\nimport SellerHome from \"./pages/seller/sellerHomePage\";\nimport SellerForgotPasswordSendEmailPage from \"./pages/seller/ForgotPasswordSendEmailPage\";\nimport SellerChangePasswordPage from \"./pages/seller/changePasswordPage\";\nimport ProtectSellerChangePasswordPage from \"./privateRoutes/sellerChangePasswordPage\";\nimport mapboxgl from \"mapbox-gl\";\nimport SellerRoute from \"./privateRoutes/sellerRoutes\";\nimport NormalRoute from \"./privateRoutes/NormalRoute\";\nimport SellerProfile from \"./pages/seller/SellerProfilePage\";\nimport AddProductPage from \"./pages/seller/AddProductPage\";\nimport ProductPage from \"./pages/ProductPage\";\nimport ShoppingCartPage from \"./pages/ShoppingCartPage\";\nimport Messenger from \"./pages/Messenger\";\nimport Messaging from \"./pages/Messaging\";\nimport CheckoutPage from \"./pages/CheckoutPage\";\nimport AllOrdersPage from \"./pages/seller/allOrdersPage\";\nimport AllProductsPage from \"./pages/seller/AllProductsPage\";\nimport CancelledOrdersPage from \"./pages/seller/cancelledOrders\";\nimport CancelRequestedOrders from \"./pages/seller/cancelRequestOrders\";\nimport ProductActionsPage from \"./pages/seller/productActionsPage\";\nimport SearchResultsPage from \"./pages/searchResultsPage\";\nimport ProductsByCategory from \"./pages/ProductsByCategory\";\nimport ProductsBySubCategory from \"./pages/ProductsBySubCategory\";\n\nrequire(\"dotenv\").config();\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const User = useSelector((state) => state.Auth);\n  const Seller = useSelector((state) => state.Seller);\n  const Cart = useSelector((state) => state.Cart);\n  const [intervalId, setIntervalId] = useState();\n\n  useEffect(() => {\n    dispatch(notSellerRoute());\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(getUser());\n    dispatch(getWishlist());\n    dispatch(getCart(User.isAuthenticated, Cart.products));\n\n    if (User.isAuthenticated) {\n      dispatch(getNotifications(false));\n      startInterval(false);\n    } else {\n      clearInterval(intervalId);\n    }\n  }, [dispatch, User.isAuthenticated]);\n  useEffect(() => {\n    dispatch(getCurrentSeller());\n\n    if (Seller.isAuthenticated) {\n      dispatch(getNotifications(true));\n      startInterval(true);\n    } else {\n      clearInterval(intervalId);\n    }\n  }, [dispatch, Seller.isAuthenticated]);\n\n  function startInterval(isShop) {\n    setIntervalId(\n      setInterval(() => {\n        dispatch(getNotifications(isShop));\n      }, 30000)\n    );\n  }\n\n  mapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN;\n\n  return (\n    <Router>\n      <Navbar />\n      <div\n        className=\"container main-container\"\n        style={{ paddingTop: Seller.inSellerRoute ? \"90px\" : \"120px\" }}\n      >\n        <Switch>\n          <NormalRoute path=\"/\" exact component={Home} />\n          <PrivateLogin\n            path=\"/auth\"\n            exact\n            component={AuthPage}\n            auth={User.isAuthenticated}\n          />\n          <PrivateLogin\n            path=\"/account/forgot_password\"\n            exact\n            component={ForgotPasswordPage}\n            auth={User.isAuthenticated}\n          />\n          <PrivateLogin\n            path=\"/seller/forgot_password\"\n            exact\n            component={SellerForgotPasswordSendEmailPage}\n            isSeller={true}\n            auth={Seller.isAuthenticated}\n          />\n          <ProtectSellerChangePasswordPage\n            path=\"/seller/forgot_password/reset_password/:token\"\n            isResetPasswordSuccess={Seller.forgotPassword.resetPasswordError}\n            exact\n            component={SellerChangePasswordPage}\n          />\n          <SellerRoute\n            path=\"/seller/profile\"\n            exact\n            component={SellerProfile}\n            isSellerAuthenticated={Seller.isAuthenticated}\n          />\n          <SellerRoute\n            path=\"/seller/orders/list\"\n            exact\n            component={AllOrdersPage}\n            isSellerAuthenticated={Seller.isAuthenticated}\n          />\n          <SellerRoute\n            path=\"/seller/products/all\"\n            exact\n            component={AllProductsPage}\n            isSellerAuthenticated={Seller.isAuthenticated}\n          />\n          <SellerRoute\n            path=\"/seller/products/actions\"\n            exact\n            component={ProductActionsPage}\n            isSellerAuthenticated={Seller.isAuthenticated}\n          />\n          <SellerRoute\n            path=\"/seller/orders/list\"\n            exact\n            component={AllOrdersPage}\n            isSellerAuthenticated={Seller.isAuthenticated}\n          />\n          <SellerRoute\n            path=\"/seller/orders/cancelled\"\n            exact\n            component={CancelledOrdersPage}\n            isSellerAuthenticated={Seller.isAuthenticated}\n          />\n          <SellerRoute\n            path=\"/seller/orders/cancel_request\"\n            exact\n            component={CancelRequestedOrders}\n            isSellerAuthenticated={Seller.isAuthenticated}\n          />\n          <SellerRoute\n            path=\"/seller/products/add\"\n            exact\n            component={AddProductPage}\n            isSellerAuthenticated={Seller.isAuthenticated}\n          />\n          <SellerRoute\n            path=\"/seller/home\"\n            exact\n            component={SellerHome}\n            isSellerAuthenticated={Seller.isAuthenticated}\n          />\n          <PrivateRoute\n            path=\"/wishlist\"\n            exact\n            component={WishlistPage}\n            auth={User.isAuthenticated}\n          />\n          <PrivateLogin\n            path=\"/seller/register\"\n            exact\n            isSeller={true}\n            auth={Seller.isAuthenticated}\n            component={SellerRegisterPage}\n          />\n          <PrivateLogin\n            path=\"/seller/login\"\n            exact\n            auth={Seller.isAuthenticated}\n            isSeller={true}\n            component={SellerLoginPage}\n          />\n          <NormalRoute path=\"/user/\" exact component={ProfilePage} />\n          <PrivateRoute\n            path=\"/user/:param\"\n            exact\n            component={ProfilePage}\n            auth={User.isAuthenticated}\n          />\n          <NormalRoute path=\"/product/:id\" exact component={ProductPage} />\n          <NormalRoute\n            path=\"/search/:query/:brand\"\n            exact\n            component={SearchResultsPage}\n          />\n          <NormalRoute\n            path=\"/category/:category/:subCategory\"\n            exact\n            component={ProductsBySubCategory}\n          />\n          <NormalRoute\n            path=\"/category/:category\"\n            exact\n            component={ProductsByCategory}\n          />\n          <NormalRoute path=\"/cart\" exact component={ShoppingCartPage} />\n          <PrivateRoute\n            path=\"/checkout\"\n            exact\n            component={CheckoutPage}\n            auth={User.isAuthenticated}\n          />\n          <PrivateRoute\n            path=\"/account/settings\"\n            exact\n            component={ProfileSettingsPage}\n            auth={User.isAuthenticated}\n          />\n          <SellerRoute\n            path=\"/chat/seller\"\n            exact\n            component={Messenger}\n            isSellerAuthenticated={Seller.isAuthenticated}\n          />\n          <PrivateRoute\n            path=\"/chat\"\n            exact\n            component={Messenger}\n            auth={User.isAuthenticated}\n          />\n          <SellerRoute\n            path=\"/chat/seller/message/:roomId\"\n            exact\n            component={Messaging}\n            isSellerAuthenticated={Seller.isAuthenticated}\n          />\n          <PrivateRoute\n            path=\"/chat/message/:roomId\"\n            exact\n            component={Messaging}\n            auth={User.isAuthenticated}\n          />\n          <PasswordResetRoute\n            path=\"/account/forgot_password/confirmation\"\n            component={PasswordCodeConfirmationPage}\n            auth={User.isAuthenticated}\n            isPasswordReset={User.forgotPassword.isPasswordReset}\n            exact\n          />\n          <ChangePasswordRoute\n            isPasswordReset={User.forgotPassword.isPasswordReset}\n            confirmationCode={User.forgotPassword.confirmationCode}\n            confirmationSuccess={User.forgotPassword.confirmationCodeSuccess}\n            isAuthenticated={User.isAuthenticated}\n            emailOrUsername={User.forgotPassword.emailOrUsername}\n            path=\"/account/forgot_password/change_password\"\n            component={ChangePasswordPage}\n            exact\n          />\n          <NormalRoute component={NotFound} />\n        </Switch>\n      </div>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","/home/guney/RalShop/frontend/src/redux/store.js",[],"/home/guney/RalShop/frontend/src/privateRoutes/changePasswordRoute.js",["471"],"import React, { useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { notSellerRoute } from \"../redux/actions/sellerActions\";\n\nconst ChangePasswordRoute = ({\n  component: Component,\n  isPasswordReset,\n  confirmationCode,\n  confirmationSuccess,\n  emailOrUsername,\n  isAuthenticated,\n  ...rest\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(notSellerRoute());\n  }, []);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !isPasswordReset ||\n        !confirmationSuccess ||\n        isAuthenticated ||\n        emailOrUsername === null ||\n        confirmationCode === null ? (\n          <Redirect to=\"/auth\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default ChangePasswordRoute;\n","/home/guney/RalShop/frontend/src/privateRoutes/privateLogin.js",["472"],"import React, { useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { notSellerRoute } from \"../redux/actions/sellerActions\";\n\nconst PrivateLogin = ({ component: Component, auth, isSeller, ...rest }) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(notSellerRoute());\n  }, []);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth === true ? (\n          isSeller ? (\n            <Redirect to=\"/seller/home\" />\n          ) : (\n            <Redirect to=\"/\" />\n          )\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateLogin;\n","/home/guney/RalShop/frontend/src/privateRoutes/privateRoute.js",["473"],"import React, { useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { notSellerRoute } from \"../redux/actions/sellerActions\";\n\nconst PrivateRoute = ({ component: Component, auth, isSeller, ...rest }) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(notSellerRoute());\n  }, []);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth === true ? (\n          <Component {...props} />\n        ) : isSeller ? (\n          <Redirect to=\"/seller/login\" />\n        ) : (\n          <Redirect to=\"/auth\" />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","/home/guney/RalShop/frontend/src/privateRoutes/sellerChangePasswordPage.js",["474"],"import React, { useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { notSellerRoute } from \"../redux/actions/sellerActions\";\n\nconst SellerChangePasswordPage = ({\n  component: Component,\n  isResetPasswordSuccess,\n  ...rest\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(notSellerRoute());\n  }, []);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isResetPasswordSuccess === true || isResetPasswordSuccess === null ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/seller/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default SellerChangePasswordPage;\n","/home/guney/RalShop/frontend/src/pages/NotFound.js",[],"/home/guney/RalShop/frontend/src/privateRoutes/NormalRoute.js",["475"],"import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { notSellerRoute } from \"../redux/actions/sellerActions\";\n\nconst SellerRoute = ({ component: Component, ...rest }) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(notSellerRoute());\n  }, []);\n  return <Route {...rest} render={(props) => <Component {...props} />} />;\n};\n\nexport default SellerRoute;\n","/home/guney/RalShop/frontend/src/pages/Home.js",["476","477"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport CategoriesBox from \"../components/HomePageCategoriesBox\";\nimport OnlyLoggedInUsers from \"../components/HomePageOnlyLoggedInUsers\";\nimport HomePageSection from \"../components/HomePageSection\";\nimport HomeCategory from \"../assets/home.jpeg\";\nimport ElectronicCategory from \"../assets/electronic.jpeg\";\nimport styled from \"styled-components\";\nimport Kid from \"../assets/kid2.jpeg\";\nimport Cosmetic from \"../assets/cosmetic2.jpeg\";\nimport WatchAndAccessories from \"../assets/watchAndAccessories2.jpeg\";\nimport Vehicle from \"../assets/Vehicle.jpeg\";\nimport ShoeAndBag from \"../assets/shoebag.jpeg\";\nimport Woman from \"../assets/women2.jpeg\";\nimport Man from \"../assets/man2.jpeg\";\nimport StartShopping from \"../assets/startShopping.jpeg\";\nimport Logo from \"../assets/logo.png\";\n\nconst CategoriesSection = styled.div`\n  margin-top: 20px;\n`;\nconst CategoryImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 10px;\n  transition: 0.4s;\n`;\nconst CategoryText = styled.h1`\n  position: absolute;\n  color: white;\n  opacity: 0;\n  transition: 0.4s;\n  font-weight: bold;\n`;\nconst BlackBackground = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background: black;\n  border-radius: 12px;\n  opacity: 0;\n  transition: 0.4s;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`;\nconst CategoryItem = styled.div`\n  height: 200px;\n  border-radius: 12px;\n  cursor: pointer;\n  background: black;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 1;\n  position: relative;\n\n  &:hover {\n    ${CategoryText} {\n      opacity: 1;\n    }\n    ${BlackBackground} {\n      opacity: 0.5;\n    }\n  }\n`;\nconst LoginSection = styled.div`\n  background: white;\n  border-radius: 16px;\n  display: flex;\n  margin: auto;\n  justify-content: space-between;\n  width: 50%;\n  align-items: center;\n  padding: 8px 30px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n\n  @media (max-width: 912px) {\n    width: 60%;\n  }\n  @media (max-width: 768px) {\n    width: 75%;\n  }\n  @media (max-width: 720px) {\n    padding: 4px 12px;\n  }\n  @media (max-width: 560px) {\n    width: 85%;\n  }\n  @media (max-width: 560px) {\n    width: 100%;\n  }\n  @media (max-width: 430px) {\n    padding: 8px 8px;\n  }\n`;\nconst LogoImage = styled.img`\n  @media (max-width: 430px) {\n    width: 65px;\n    height: 65px;\n  }\n  @media (max-width: 340px) {\n    width: 60px;\n    height: 60px;\n    margin-top: -5px;\n  }\n`;\nconst LoginText = styled.h4`\n  font-weight: bolder;\n  text-align: center;\n\n  @media (max-width: 400px) {\n    font-size: 18px;\n  }\n  @media (max-width: 340px) {\n    font-size: 17px;\n  }\n`;\nconst LoginButton = styled.button`\n  width: 25%;\n  border-radius: 22px;\n\n  &:focus {\n    outline: 0;\n  }\n\n  @media (max-width: 376px) {\n    width: 20%;\n  }\n`;\n\nconst HomePage = () => {\n  const history = useHistory();\n  const { isAuthenticated } = useSelector((state) => state.Auth);\n  const [Categories, setCategories] = useState([\n    { img: Woman, link: \"/category/Woman\", text: \"Woman\" },\n    { img: Man, link: \"/category/Man\", text: \"Man\" },\n    { img: Kid, link: \"/category/Kid\", text: \"Kid\" },\n    { img: Cosmetic, link: \"/category/Cosmetic\", text: \"Cosmetic\" },\n    {\n      img: WatchAndAccessories,\n      link: \"category/watch%20&%20accessories\",\n      text: \"Watch & Accessories\",\n    },\n    {\n      img: ShoeAndBag,\n      link: \"/category/Shoes%20&%20Bag\",\n      text: \"Shoes & Bags\",\n    },\n    { img: HomeCategory, link: \"/category/Home\", text: \"Home\" },\n    {\n      img: ElectronicCategory,\n      link: \"/category/Electronic\",\n      text: \"Electronic\",\n    },\n    { img: Vehicle, link: \"/category/Vehicle\", text: \"Vehicle\" },\n    { img: StartShopping, link: \"/\", text: \"Start Shopping\" },\n  ]);\n\n  return (\n    <div>\n      <CategoriesBox />\n      {isAuthenticated ? (\n        <OnlyLoggedInUsers />\n      ) : (\n        <LoginSection>\n          <div>\n            <LogoImage src={Logo} alt=\"logo\" height=\"80\" />\n          </div>\n          <div>\n            <LoginText>Login To See More</LoginText>\n            <p style={{ margin: \"0\", marginTop: \"-5px\", fontSize: \"15px\" }}>\n              Ural Shop\n            </p>\n            <p\n              style={{\n                fontSize: \"12px\",\n                color: \"var(--text-muted)\",\n                marginTop: \"-5px\",\n              }}\n            >\n              Guney Ural @ 2021\n            </p>\n          </div>\n          <LoginButton\n            className=\"default-btn\"\n            style={{ width: \"25%\" }}\n            onClick={() => history.push(\"/auth\")}\n          >\n            Login\n          </LoginButton>\n        </LoginSection>\n      )}\n      <HomePageSection />\n      <CategoriesSection>\n        <h4 style={{ fontWeight: \"bolder\", textAlign: \"center\" }}>\n          Shop By Category\n        </h4>\n        <div className=\"row\">\n          {Categories.map((item, index) => {\n            return (\n              <div\n                className=\"col-6 mt-3\"\n                onClick={() => history.push(item.link)}\n                key={index}\n              >\n                <CategoryItem\n                  className=\"w-100\"\n                  onClick={() => history.push(item.link)}\n                >\n                  <BlackBackground />\n                  <CategoryText>{item.text}</CategoryText>\n                  <CategoryImg src={item.img} alt=\"category item\" />\n                </CategoryItem>\n              </div>\n            );\n          })}\n        </div>\n      </CategoriesSection>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/home/guney/RalShop/frontend/src/pages/AuthPage.js",[],"/home/guney/RalShop/frontend/src/pages/ProfileSettings.js",[],"/home/guney/RalShop/frontend/src/pages/wishlistPage.js",["478"],"import React, { useState, useEffect } from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { FiHeart } from \"react-icons/fi\";\nimport Styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { removeAllItems } from \"../redux/actions/wishlistAction\";\nimport { BsStarFill, BsStarHalf, BsStar } from \"react-icons/bs\";\nimport { priceConverter } from \"../utils/helpers\";\nimport { removeItem } from \"../redux/actions/wishlistAction\";\nimport { addItem as addCartItem } from \"../redux/actions/ShoppingCartActions\";\n\nconst ItemCount = Styled.span`\n  padding-left: 10px;\n  padding-top: 5px;\n`;\n\nconst WishlistItem = Styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px\n`;\n\nconst WishlistPage = () => {\n  const Wishlist = useSelector((state) => state.Wishlist);\n  const dispatch = useDispatch();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [wishlistItems, setWishlistItems] = useState([]);\n\n  function escapeRegex(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n  }\n\n  useEffect(() => {\n    setWishlistItems(Wishlist.products);\n  }, [Wishlist]);\n\n  useEffect(() => {\n    const regex = new RegExp(escapeRegex(searchQuery), \"gi\");\n    if (searchQuery.length < 1) {\n      setWishlistItems(Wishlist.products);\n    } else {\n      setWishlistItems(\n        Wishlist.products.filter((item) => item.title.match(regex))\n      );\n    }\n  }, [searchQuery]);\n\n  const moveToCart = (product) => {\n    dispatch(\n      addCartItem({\n        product: product._id,\n        seller: product.shop,\n        price: product.price,\n        stock: product.stock,\n        title: product.title,\n        image: product.images[0].url,\n        color: product.colors[0].split(\",\")[0].substring(1),\n        stripeProductId: product.stripeProductId,\n        stripePriceId: product.stripePriceId,\n        qty: 1,\n        selected: true,\n      })\n    );\n    dispatch(removeItem(product._id));\n  };\n\n  return (\n    <>\n      <div className=\"wishlist-top\">\n        <section className=\"left\">\n          <h3>My Wishlist</h3>\n          <ItemCount>({Wishlist.products.length} Items)</ItemCount>\n        </section>\n        <section\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            flexWrap: \"nowrap\",\n          }}\n        >\n          <section className=\"navbar-middle\">\n            <input\n              type=\"text\"\n              name=\"searchQuery\"\n              id=\"search-bar\"\n              aria-label={\"search\"}\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              placeholder=\"Find Product\"\n              className=\"search-bar\"\n              style={{ width: \"250px\" }}\n            />\n            <button className=\"navbar-search-icon\" aria-label=\"search-icon\">\n              <FaSearch />\n            </button>\n          </section>\n        </section>\n      </div>\n      {Wishlist.products.length > 0 && (\n        <button\n          onClick={() => dispatch(removeAllItems())}\n          style={{\n            color: \"#0d6efd\",\n            fontSize: \"15px\",\n            marginTop: \"5px\",\n            background: \"transparent\",\n            border: \"transparent\",\n            padding: \"0\",\n          }}\n        >\n          Remove All\n        </button>\n      )}\n      <div className=\"wishlist-container\">\n        {wishlistItems.length < 1 ? (\n          <div className=\"no-item\">\n            <FiHeart style={{ fontSize: \"4rem\" }} />\n            <h1 style={{ fontWeight: \"300\" }}>Wishlist Is Empty</h1>\n            <p>\n              Click \"Start Shopping\" button to add products to your wishlist.\n            </p>\n            <Link to=\"/\">\n              <button className=\"default-btn\">Start Shopping</button>\n            </Link>\n          </div>\n        ) : (\n          wishlistItems.map((item, idx) => {\n            return (\n              <WishlistItem key={idx}>\n                <section style={{ display: \"flex\" }}>\n                  <Link to={`/product/${item._id}`}>\n                    <img\n                      className=\"wishlist-img\"\n                      src={item.images[0].url}\n                      alt=\"product\"\n                      style={{\n                        objectFit: \"cover\",\n                        width: \"180px\",\n                        height: \"170px\",\n                        borderRadius: \"3px\",\n                      }}\n                    />\n                  </Link>\n                  <section style={{ marginLeft: \"10px\" }}>\n                    <Link\n                      to={`/product/${item._id}`}\n                      style={{\n                        color: \"var(--primary-color)\",\n                        textDecoration: \"none\",\n                      }}\n                    >\n                      <h6>{item.title}</h6>\n                      <section\n                        style={{\n                          fontWeight: \"bold\",\n                          fontSize: \"15px\",\n                          marginTop: \"-8px\",\n                        }}\n                      >\n                        {item.stock < 1 ? (\n                          <span className=\"text-danger\">Out Of Stock</span>\n                        ) : (\n                          <span className=\"text-success\">In Stock</span>\n                        )}\n                      </section>\n                      <p style={{ marginTop: \"-3px\" }}>\n                        {Array.from({ length: 5 }, (_, index) => {\n                          const number = index + 0.5;\n                          return (\n                            <span key={index} style={{ fontSize: \"18px\" }}>\n                              {item.rating > number ? (\n                                <BsStarFill\n                                  style={{ color: \"rgb(240, 204, 0)\" }}\n                                />\n                              ) : item.rating > index ? (\n                                <BsStarHalf\n                                  style={{ color: \"rgb(240, 204, 0)\" }}\n                                />\n                              ) : (\n                                <BsStar style={{ color: \"rgb(240, 204, 0)\" }} />\n                              )}\n                            </span>\n                          );\n                        })}\n                      </p>\n                      <p\n                        style={{\n                          marginTop: \"-15px\",\n                          fontSize: \"15px\",\n                        }}\n                        className=\"text-muted\"\n                      >\n                        {item.rating.toFixed(1)} Out Of 5\n                      </p>\n                      <p\n                        style={{\n                          marginTop: \"-10px\",\n                          fontWeight: \"500\",\n                        }}\n                      >\n                        {priceConverter(item.price)}\n                      </p>\n                    </Link>\n                    <section\n                      style={{ fontSize: \"15px\", color: \"#0d6efd\" }}\n                      className=\"wishlist-options\"\n                    >\n                      <span\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() => dispatch(removeItem(item._id))}\n                      >\n                        Delete\n                      </span>\n                      {item.stock > 0 && (\n                        <span\n                          style={{\n                            display: \"inline-block\",\n                            marginLeft: \"8px\",\n                            cursor: \"pointer\",\n                          }}\n                          className=\"option-2\"\n                          onClick={() => moveToCart(item)}\n                        >\n                          Move To Cart\n                        </span>\n                      )}\n                    </section>\n                  </section>\n                </section>\n              </WishlistItem>\n            );\n          })\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default WishlistPage;\n","/home/guney/RalShop/frontend/src/pages/ProfilePage.js",["479","480","481","482","483"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutUser, getUserReviews } from \"../redux/actions/authActions\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport noPicture from \"../assets/noProfilePic.jpg\";\nimport LoadingIcon from \"../assets/loading.gif\";\nimport { MdSettings } from \"react-icons/md\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport { BiLogOut } from \"react-icons/bi\";\nimport MessageBox from \"../components/messageBox\";\nimport { Link } from \"react-router-dom\";\nimport { getOrders } from \"../redux/actions/orderActions\";\nimport { getRatedSellersForUser } from \"../redux/actions/rateSellerActions\";\nimport ProfilePageNavbar from \"../components/profilePageNavbar\";\nimport ProfilePageReviewsSection from \"../components/profilePageReviewsSection\";\nimport ProfilePageAddressSection from \"../components/profilePageAddressSection\";\nimport ProfilePageOrderSection from \"../components/profilePageOrderSection\";\nimport ProfilePageRatedSellersSection from \"../components/ProfilePageRatedSellersSection\";\n\nconst TextMuted = styled.p`\n  color: var(--text-muted);\n  margin-top: -10px;\n`;\nconst ProfileSection = styled.section`\n  display: flex;\n  align-items: center;\n`;\nconst NavbarItemContanier = styled.div`\n  background: white;\n  width: 100%;\n  min-height: 230px;\n  border: 1px solid #dedede;\n  border-radius: 3px;\n  padding: 10px 15px;\n  position: relative;\n  overflow: hidden;\n  overflow-y: auto;\n  max-height: 500px;\n  &::-webkit-scrollbar {\n    width: 5px;\n  }\n  &::-webkit-scrollbar-track {\n    background: #dddddd;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: #acaaaa;\n  }\n  &::-webkit-scrollbar-thumb:hover {\n    background: #c2c2c2;\n  }\n`;\n\nconst ProfilePage = () => {\n  const dispatch = useDispatch();\n  const { user, profile, loading, error } = useSelector((state) => state.Auth);\n  const { param } = useParams();\n  const history = useHistory();\n  const [message, setMessage] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalHeader, setModalHeader] = useState(\"\");\n  const [btnText, setBtnText] = useState(\"\");\n  const [isEmpty, setIsEmpty] = useState(false);\n\n  useEffect(() => {\n    dispatch(getOrders());\n    dispatch(getUserReviews());\n    dispatch(getRatedSellersForUser());\n  }, []);\n\n  useEffect(() => {\n    if (!param) {\n      history.push(\"/user/orders\");\n    }\n  }, [param]);\n\n  useEffect(() => {\n    if (isModalOpen) {\n      document.querySelector(\"body\").style.overflow = \"hidden\";\n    } else {\n      document.querySelector(\"body\").style.overflow = \"auto\";\n    }\n  }, [isModalOpen]);\n\n  const clickLogout = () => {\n    setMessage(\"Do You Want To Logout?\");\n    setIsModalOpen(true);\n    setModalHeader(\"Logout ?\");\n    setBtnText(\"Logout\");\n  };\n\n  if (error.msg !== null && error.msg === \"User Not Found\") {\n    return (\n      <div>\n        <h1 className=\"text-danger\">{error.msg}</h1>\n      </div>\n    );\n  }\n  if (\n    error.msg !== null &&\n    error.msg !== \"User Not Found\" &&\n    error.msg !== \"Login To See The Content.\"\n  ) {\n    return (\n      <div>\n        <h1 className=\"text-danger\">Reload The Page</h1>\n      </div>\n    );\n  }\n  if (!loading) {\n    return (\n      <div>\n        {isModalOpen && (\n          <MessageBox\n            action={logoutUser}\n            message={message}\n            header={modalHeader}\n            setIsModalOpen={setIsModalOpen}\n            btnText={btnText}\n            isModalOpen={isModalOpen}\n            isRedux={true}\n          />\n        )}\n        {user !== null && (\n          <>\n            <section className=\"profile-section\">\n              <div className=\"profile-pic-section\">\n                <img\n                  src={user.hasPhoto ? user.profilePhoto.url : noPicture}\n                  alt=\"profile\"\n                  className=\"profile-picture\"\n                />\n              </div>\n              <div className=\"profile-body\">\n                <section>\n                  <ProfileSection>\n                    <h3 className=\"profile-username\">{user.username}</h3>\n                    {user !== null && user._id === user._id && (\n                      <button\n                        className=\"default-btn\"\n                        onClick={() => clickLogout()}\n                      >\n                        <BiLogOut /> Logout\n                      </button>\n                    )}\n                  </ProfileSection>\n                  <TextMuted>\n                    Member since: {moment(user.createdAt).format(\"ll\")}\n                  </TextMuted>\n                </section>\n                {user !== null && user._id === user._id && (\n                  <Link to=\"/account/settings\">\n                    <button className=\"default-btn settings-btn\">\n                      <MdSettings />\n                      Settings\n                    </button>\n                  </Link>\n                )}\n              </div>\n            </section>\n            <div className=\"profile-center mt-5\">\n              <div className=\"row\">\n                <div className=\"col-md-2\">\n                  <ProfilePageNavbar />\n                </div>\n                <div className=\"col-md-10\">\n                  <NavbarItemContanier\n                    className={isEmpty ? \"navbar-item-container-empty\" : \"\"}\n                  >\n                    {param === \"orders\" && (\n                      <ProfilePageOrderSection\n                        setIsEmpty={setIsEmpty}\n                        isEmpty={isEmpty}\n                      />\n                    )}\n                    {param === \"addresses\" && (\n                      <ProfilePageAddressSection\n                        setIsEmpty={setIsEmpty}\n                        isEmpty={isEmpty}\n                      />\n                    )}\n                    {param === \"reviews\" && (\n                      <ProfilePageReviewsSection\n                        setIsEmpty={setIsEmpty}\n                        isEmpty={isEmpty}\n                      />\n                    )}\n                    {param === \"ratedsellers\" && (\n                      <ProfilePageRatedSellersSection\n                        setIsEmpty={setIsEmpty}\n                        isEmpty={isEmpty}\n                      />\n                    )}\n                  </NavbarItemContanier>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  } else {\n    return (\n      <div style={{ display: \"block\", margin: \"auto\", textAlign: \"center\" }}>\n        {loading && (\n          <>\n            <img src={LoadingIcon} alt=\"loading gif\" height=\"100\" width=\"100\" />\n            <h2 style={{ fontWeight: \"lighter\" }}>Loading...</h2>\n          </>\n        )}\n      </div>\n    );\n  }\n};\n\nexport default ProfilePage;\n","/home/guney/RalShop/frontend/src/pages/ForgotPasswordPage.js",["484"],"import React, { useState, useEffect } from \"react\";\nimport { AiOutlineLock } from \"react-icons/ai\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { sendForgotPasswordEmail } from \"../redux/actions/authActions\";\nimport { Link } from \"react-router-dom\";\n\nconst CenterDiv = styled.div`\n  margin-top: 30px;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst CenterBox = styled.div`\n  border: 1px solid #c2c2c2;\n  background: white;\n  margin: auto;\n  padding: 10px 40px;\n  width: 400px;\n  box-shadow: 2px 2px 10px #dedede;\n  position: relative;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst InputField = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #fafafa;\n  border: 1px solid #c2c2c2;\n  width: 100%;\n`;\n\nconst SectionBottom = styled.section`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background: #efefef;\n  border-top: 1px solid #c2c2c2;\n  font-weight: 500;\n  text-align: center;\n  padding: 7px;\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst ForgotPassword = () => {\n  const [emailOrUsername, setEmailOrUsername] = useState(\"\");\n  const User = useSelector((state) => state.Auth);\n  const dispatch = useDispatch();\n\n  const sendCode = (e) => {\n    e.preventDefault();\n    dispatch(sendForgotPasswordEmail(emailOrUsername));\n  };\n\n  useEffect(() => {\n    if (User.forgotPassword.isPasswordReset) {\n      window.location.href = `${window.origin}/account/forgot_password/confirmation`;\n      localStorage.setItem(\"password_reset\", true);\n      if (emailOrUsername !== \"\")\n        localStorage.setItem(\"emailOrUsername\", emailOrUsername);\n    }\n  }, [User, dispatch]);\n\n  return (\n    <CenterDiv>\n      <CenterBox>\n        <AiOutlineLock\n          style={{ display: \"grid\", margin: \"auto\", fontSize: \"5rem\" }}\n        />\n        <h2 style={{ textAlign: \"center\" }}>Forgot Password?</h2>\n        <p\n          style={{\n            color: \"var(--text-muted)\",\n            textAlign: \"center\",\n            fontSize: \"15px\",\n          }}\n        >\n          Enter your email or username and we'll send you a code to get your\n          account back.\n        </p>\n        <form style={{ margin: \"auto\" }} onSubmit={(e) => sendCode(e)}>\n          <InputField\n            type=\"text\"\n            name=\"emailOrUsername\"\n            id=\"emailOrUsername\"\n            aria-label=\"email or username input\"\n            value={emailOrUsername}\n            placeholder=\"Email or Username\"\n            onChange={(e) => setEmailOrUsername(e.target.value)}\n          />\n          <button\n            className=\"default-btn mt-3 w-100\"\n            disabled={emailOrUsername.length < 1 || User.loading ? true : false}\n          >\n            {User.loading ? \"Loading...\" : \"Send Login Code\"}\n          </button>\n          {User.forgotPassword.sendEmailSuccess === false && (\n            <span className=\"text-danger\">Account Does Not Exist.</span>\n          )}\n          {User.forgotPassword.sendEmailSuccess && (\n            <span className=\"text-success\">Email Has Been Sent.</span>\n          )}\n        </form>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"var(--text-muted)\",\n            fontSize: \"14px\",\n            fontWeight: \"500\",\n            paddingTop: \"30px\",\n            paddingBottom: \"40px\",\n          }}\n        >\n          OR\n        </p>\n        <SectionBottom>\n          <Link\n            to=\"/auth\"\n            style={{ color: \"var(--primary-text)\", textDecoration: \"none\" }}\n          >\n            Back To Login Page\n          </Link>\n        </SectionBottom>\n      </CenterBox>\n    </CenterDiv>\n  );\n};\n\nexport default ForgotPassword;\n","/home/guney/RalShop/frontend/src/pages/ForgotPasswordCodePage.js",["485"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  cancelForgotPassword,\n  confirmPasswordResetCode,\n} from \"../redux/actions/authActions\";\nimport { AiOutlineMail } from \"react-icons/ai\";\n\nconst CenterDiv = styled.div`\n  margin-top: 30px;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst CenterBox = styled.div`\n  border: 1px solid #c2c2c2;\n  background: white;\n  margin: auto;\n  padding: 10px 40px;\n  width: 400px;\n  box-shadow: 2px 2px 10px #dedede;\n  position: relative;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst InputField = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #fafafa;\n  border: 1px solid #c2c2c2;\n  width: 100%;\n`;\n\nconst SectionBottom = styled.section`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background: #efefef;\n  border-top: 1px solid #c2c2c2;\n  font-weight: 500;\n  text-align: center;\n  padding: 7px;\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst PasswordConfirmation = () => {\n  const [passwordCode, setPasswordCode] = useState(\"\");\n  const dispatch = useDispatch();\n  const User = useSelector((state) => state.Auth);\n\n  useEffect(() => {\n    if (User.forgotPassword.confirmationCodeTries === 0) {\n      dispatch(cancelForgotPassword());\n      window.location.href = `${window.origin}/auth`;\n    }\n    if (User.forgotPassword.confirmationCodeSuccess) {\n      window.location.href = `${window.origin}/account/forgot_password/change_password`;\n    }\n  }, [User]);\n\n  const confirmCode = (e) => {\n    e.preventDefault();\n    dispatch(confirmPasswordResetCode(passwordCode));\n  };\n\n  const cancelProcess = () => {\n    dispatch(cancelForgotPassword());\n    window.location.href = `${window.origin}/auth`;\n  };\n\n  return (\n    <CenterDiv>\n      <CenterBox>\n        <AiOutlineMail\n          style={{ display: \"grid\", margin: \"auto\", fontSize: \"5rem\" }}\n        />\n        <h2 style={{ textAlign: \"center\" }}>Confirmation Code</h2>\n        <p\n          style={{\n            color: \"var(--text-muted)\",\n            textAlign: \"center\",\n            fontSize: \"15px\",\n          }}\n        >\n          Enter the confirmation code we sent to your mail. If you didn't get\n          mail click cancel.\n        </p>\n        <form style={{ margin: \"auto\" }} onSubmit={(e) => confirmCode(e)}>\n          <InputField\n            type=\"text\"\n            name=\"passwordCode\"\n            id=\"passwordCode\"\n            aria-label=\"confirmation code input\"\n            value={passwordCode}\n            placeholder=\"Confirmation Code\"\n            onChange={(e) => setPasswordCode(e.target.value)}\n          />\n          <button\n            className=\"default-btn mt-3 w-100\"\n            disabled={\n              passwordCode.length < 8 || User.loading || passwordCode.length > 8\n                ? true\n                : false\n            }\n          >\n            {User.loading ? \"Loading...\" : \"Confirm Code\"}\n          </button>\n          {User.forgotPassword.confirmationCodeSuccess === false && (\n            <span className=\"text-danger\">\n              Codes don't match or time expired. Click cancel to take the code\n              or try again.\n            </span>\n          )}\n          {User.forgotPassword.confirmationCodeSuccess && (\n            <span className=\"text-success\">Codes matched. Proceeding...</span>\n          )}\n        </form>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"var(--text-muted)\",\n            fontSize: \"14px\",\n            fontWeight: \"500\",\n            paddingTop: \"30px\",\n            paddingBottom: \"40px\",\n          }}\n        >\n          OR\n        </p>\n        <SectionBottom>\n          <span\n            to=\"/auth\"\n            style={{ color: \"var(--primary-text)\", textDecoration: \"none\" }}\n            onClick={() => cancelProcess()}\n          >\n            Cancel\n          </span>\n        </SectionBottom>\n      </CenterBox>\n    </CenterDiv>\n  );\n};\n\nexport default PasswordConfirmation;\n","/home/guney/RalShop/frontend/src/pages/changePasswordPage.js",["486"],"import React, { useState, useEffect } from \"react\";\nimport { CgPassword } from \"react-icons/cg\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  changePassword,\n  confirmPasswordResetCode,\n} from \"../redux/actions/authActions\";\n\nconst CenterDiv = styled.div`\n  margin-top: 30px;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst CenterBox = styled.div`\n  border: 1px solid #c2c2c2;\n  background: white;\n  margin: auto;\n  padding: 10px 40px;\n  width: 400px;\n  box-shadow: 2px 2px 10px #dedede;\n  position: relative;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst InputField = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #fafafa;\n  border: 1px solid #c2c2c2;\n  width: 100%;\n`;\n\nconst SectionBottom = styled.section`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background: #efefef;\n  border-top: 1px solid #c2c2c2;\n  font-weight: 500;\n  text-align: center;\n  padding: 7px;\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst ChangePassword = () => {\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [err, setErr] = useState(false);\n  const User = useSelector((state) => state.Auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      confirmPasswordResetCode(User.forgotPassword.confirmationCode, true)\n    );\n  }, []);\n\n  useEffect(() => {\n    if (User.forgotPassword.confirmationCodeSuccess === false) {\n      window.location.href = `${window.origin}/auth`;\n    }\n    if (User.forgotPassword.changePasswordSuccess === false) {\n      setTimeout(() => {\n        window.location.href = `${window.origin}`;\n      }, 1000);\n    }\n  }, [User]);\n\n  useEffect(() => {\n    if (newPassword.length > 6 && confirmPassword.length > 6) {\n      if (newPassword !== confirmPassword) {\n        setErr(\"Passwords don't match.\");\n      } else {\n        setErr(false);\n      }\n    } else {\n      if (newPassword.length > 0 && confirmPassword.length > 0) {\n        setErr(\"Password must be at least 6 characters.\");\n      } else {\n        setErr(false);\n      }\n    }\n  }, [newPassword, confirmPassword]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    dispatch(\n      changePassword(\n        User.forgotPassword.emailOrUsername,\n        User.forgotPassword.confirmationCode,\n        newPassword,\n        confirmPassword\n      )\n    );\n  };\n\n  const cancelForgotPassword = () => {\n    dispatch(cancelForgotPassword());\n    window.location.href = `${window.origin}/auth`;\n  };\n\n  return (\n    <CenterDiv>\n      <CenterBox>\n        <CgPassword\n          style={{ display: \"grid\", margin: \"auto\", fontSize: \"5rem\" }}\n        />\n        <h2 style={{ textAlign: \"center\" }}>New Password</h2>\n        <p\n          style={{\n            color: \"var(--text-muted)\",\n            textAlign: \"center\",\n            fontSize: \"15px\",\n          }}\n        >\n          Enter your new password and confirm it. Passwor must be more than 6\n          characters.\n        </p>\n        <form style={{ margin: \"auto\" }} onSubmit={(e) => handleSubmit(e)}>\n          <InputField\n            type=\"password\"\n            name=\"newPassword\"\n            id=\"newPassword\"\n            value={newPassword}\n            aria-label=\"New password input\"\n            placeholder=\"Enter your new password\"\n            onChange={(e) => setNewPassword(e.target.value)}\n          />\n          <InputField\n            type=\"password\"\n            name=\"confirmPassword\"\n            id=\"confirmPassword\"\n            value={confirmPassword}\n            aria-label=\"Confirm new password input\"\n            className=\"mt-3\"\n            placeholder=\"Confirm your new password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n          <button\n            className=\"default-btn mt-5 w-100\"\n            disabled={\n              newPassword.length < 6 || newPassword.length < 6 || User.loading\n                ? true\n                : false\n            }\n          >\n            {User.loading ? \"Loading...\" : \"Change Password\"}\n          </button>\n          {err && <span className=\"text-danger\">{err}</span>}\n          {User.forgotPassword.changePasswordSuccess === true && (\n            <span className=\"text-success\">\n              Password Changed. Now You Can Login.\n            </span>\n          )}\n        </form>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"var(--text-muted)\",\n            fontSize: \"14px\",\n            fontWeight: \"500\",\n            paddingTop: \"30px\",\n            paddingBottom: \"40px\",\n          }}\n        >\n          OR\n        </p>\n        <SectionBottom>\n          <span\n            to=\"/auth\"\n            style={{ color: \"var(--primary-text)\", textDecoration: \"none\" }}\n            onClick={() => cancelForgotPassword()}\n          >\n            Cancel\n          </span>\n        </SectionBottom>\n      </CenterBox>\n    </CenterDiv>\n  );\n};\n\nexport default ChangePassword;\n","/home/guney/RalShop/frontend/src/pages/ShoppingCartPage.js",["487"],"import React, { useState, useEffect } from \"react\";\nimport Styled from \"styled-components\";\nimport { FaSearch, FaShoppingCart } from \"react-icons/fa\";\nimport { AiOutlineMinus, AiOutlinePlus } from \"react-icons/ai\";\nimport { priceConverter } from \"../utils/helpers\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  removeCartItem,\n  removeAllCart,\n  increaseCartItem,\n  decreaseCartItem,\n  selectCartItem,\n  dontSelectCartItem,\n} from \"../redux/actions/ShoppingCartActions\";\nimport { addItem } from \"../redux/actions/wishlistAction\";\nimport axios from \"axios\";\n\nconst ItemCount = Styled.span`\n  padding-left: 10px;\n  padding-top: 3px;\n`;\nconst CartItem = Styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 15px\n`;\nconst StockText = Styled.p`\n  font-size:12px;\n  font-weight:300px;\n  margin-top:-12px;\n`;\nconst QuantitySection = Styled.section`\n  display:flex;\n  align-items:center;\n`;\nconst QtyButton = Styled.button`\n  background:transparent;\n  border:transparent;\n  padding:2px;\n  font-weight:bold;\n  font-size:18px;\n  &:focus{\n    outline: none;\n  }\n`;\nconst QtyNumber = Styled.span`\n  font-size:15px;\n`;\nconst ColorPreview = Styled.span`\n  height: 14px;\n  width: 14px;\n  border-radius: 50%;\n  cursor: pointer;\n  display: inline-block;\n  border: 1px solid black;\n  position: relative;\n  margin-left: 3px;\n  top: 3px;\n`;\nconst SelectProduct = Styled.div`\n  margin: 0;\n  padding: 0;\n`;\nconst SelectProductInput = Styled.input`\n  margin: 0;\n  height: 20px;\n  width: 20px;\n  cursor: pointer;\n`;\n\nconst ShoppingCartPage = () => {\n  const Cart = useSelector((state) => state.Cart);\n  const Wishlist = useSelector((state) => state.Wishlist);\n  const User = useSelector((state) => state.Auth);\n  const dispatch = useDispatch();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [cartItems, setCartItems] = useState([]);\n  const [cartTotal, setCartTotal] = useState(0);\n  const [cartItemsLength, setCartItemsLength] = useState(0);\n  const [cartItemsToBuyLength, setCartItemsToBuyLength] = useState(0);\n  const [noItemToBuyError, setNoItemToBuyError] = useState(\"\");\n  const history = useHistory();\n\n  function escapeRegex(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n  }\n  useEffect(() => {\n    setCartItems(Cart.products);\n    let sum = 0;\n    let itemSum = 0;\n    let itemSumToBuy = 0;\n    Cart.products.forEach((item) => {\n      if (item.selected) {\n        sum += item.price * item.qty;\n        itemSumToBuy += item.qty;\n      }\n      itemSum += item.qty;\n    });\n    setCartTotal(sum);\n    setCartItemsLength(itemSum);\n    setCartItemsToBuyLength(itemSumToBuy);\n  }, [Cart]);\n  useEffect(() => {\n    const regex = new RegExp(escapeRegex(searchQuery), \"gi\");\n    if (searchQuery.length < 1) {\n      setCartItems(Cart.products);\n    } else {\n      setCartItems(Cart.products.filter((item) => item.title.match(regex)));\n    }\n  }, [searchQuery]);\n\n  const moveToWishlist = (product) => {\n    let tempWishlist = [];\n    const wishlistProducts = Wishlist.products;\n    let isInWishlist = false;\n    if (wishlistProducts.length < 1) {\n      isInWishlist = false;\n    } else {\n      wishlistProducts.some((item) =>\n        item._id === product.product\n          ? (isInWishlist = true)\n          : (isInWishlist = false)\n      );\n    }\n    if (!isInWishlist) {\n      tempWishlist = [{ _id: product.product }, ...wishlistProducts];\n      axios\n        .post(\"/api/wishlist/update\", { products: tempWishlist }, tokenConfig())\n        .then((res) => res.data)\n        .then((data) => {\n          dispatch(addItem(data.products[0]));\n        });\n      dispatch(removeCartItem(product.product, product.color));\n    }\n  };\n  const tokenConfig = () => {\n    const token = localStorage.getItem(\"user-token\");\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    if (token) config.headers[\"user-token\"] = token;\n    return config;\n  };\n  const selectProduct = (id, color) => {\n    dispatch(selectCartItem(id, color));\n  };\n  const dontSelectProduct = (id, color) => {\n    dispatch(dontSelectCartItem(id, color));\n  };\n  const proceedToCheckout = () => {\n    if (cartItemsToBuyLength > 0) {\n      history.push(\"/checkout\");\n    } else {\n      setNoItemToBuyError(\"Select product for checkout\");\n      setTimeout(() => setNoItemToBuyError(\"\"), 5000);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"wishlist-top\">\n        <section className=\"left\">\n          <h4>Shopping Cart</h4>\n          <ItemCount>({cartItemsLength} Items)</ItemCount>\n        </section>\n        <section\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            flexWrap: \"nowrap\",\n          }}\n        >\n          <section className=\"navbar-middle\">\n            <input\n              type=\"text\"\n              name=\"searchQuery\"\n              id=\"search-bar\"\n              aria-label={\"search\"}\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              placeholder=\"Find Product\"\n              className=\"search-bar\"\n              style={{ width: \"250px\" }}\n            />\n            <button className=\"navbar-search-icon\" aria-label=\"search-icon\">\n              <FaSearch />\n            </button>\n          </section>\n        </section>\n      </div>\n      {Cart.products.length > 0 && (\n        <section\n          className=\"proceed-to-checkout\"\n          style={{ marginBottom: \"-10px\" }}\n        >\n          <section>\n            <p style={{ fontWeight: \"500\" }}>\n              Subtotal ({cartItemsToBuyLength} items): <br />\n              <span style={{ fontWeight: \"bold\" }}>\n                {priceConverter(cartTotal)}\n              </span>\n            </p>\n            <span\n              style={{\n                cursor: \"pointer\",\n                color: \"rgb(13, 110, 253)\",\n                fontSize: \"14px\",\n              }}\n              onClick={() => dispatch(removeAllCart())}\n            >\n              Remove All\n            </span>\n            {Cart.loading && <p>Loading...</p>}\n            {noItemToBuyError && (\n              <p className=\"text-danger\">{noItemToBuyError}</p>\n            )}\n          </section>\n          {User.isAuthenticated ? (\n            <button className=\"default-btn\" onClick={() => proceedToCheckout()}>\n              Proceed To Checkout\n            </button>\n          ) : (\n            <Link to=\"/auth\">\n              <button className=\"default-btn\">Proceed To Checkout</button>\n            </Link>\n          )}\n        </section>\n      )}\n      {cartItems.length > 0 && (\n        <div className=\"mt-2\" style={{ position: \"relative\" }}>\n          <span\n            style={{\n              textAlign: \"left\",\n              color: \"var(--text-muted)\",\n              fontSize: \"14px\",\n            }}\n          >\n            Product\n          </span>\n          <span\n            style={{\n              position: \"absolute\",\n              right: \"0\",\n              color: \"var(--text-muted)\",\n              fontSize: \"14px\",\n            }}\n          >\n            Price\n          </span>\n          <hr style={{ marginTop: \"-0px\", marginBottom: \"-15px\" }} />\n        </div>\n      )}\n      <div className=\"cart-container\">\n        {cartItems.length < 1 ? (\n          <div className=\"no-item\">\n            <FaShoppingCart style={{ fontSize: \"4rem\" }} />\n            <h1 style={{ fontWeight: \"300\" }}>Shopping Cart Is Empty</h1>\n            <p>\n              Click \"Start Shopping\" button to add products to your shopping\n              cart.\n            </p>\n            <Link to=\"/\">\n              <button className=\"default-btn\">Start Shopping</button>\n            </Link>\n          </div>\n        ) : (\n          cartItems.map((item, idx) => {\n            return (\n              <>\n                <SelectProduct>\n                  <SelectProductInput\n                    type=\"checkbox\"\n                    id=\"selectedProduct\"\n                    name=\"productSelect\"\n                    value=\"select\"\n                    checked={item.selected}\n                    onChange={() =>\n                      item.selected\n                        ? dontSelectProduct(item.product, item.color)\n                        : selectProduct(item.product, item.color)\n                    }\n                  />\n                </SelectProduct>\n                <CartItem key={idx} id=\"shopping-cart-section\">\n                  <section className=\"d-flex\" style={{ marginTop: \"3px\" }}>\n                    <Link to={`/product/${item.product}`}>\n                      <img\n                        className=\"wishlist-img\"\n                        id=\"shopping-cart-img\"\n                        src={item.image}\n                        alt=\"product\"\n                        style={{\n                          objectFit: \"cover\",\n                          width: \"180px\",\n                          height: \"170px\",\n                          borderRadius: \"3px\",\n                        }}\n                      />\n                    </Link>\n                    <section style={{ marginLeft: \"10px\" }}>\n                      <Link\n                        to={`/product/${item.product}`}\n                        style={{\n                          color: \"var(--primary-color)\",\n                          textDecoration: \"none\",\n                        }}\n                      >\n                        <p id=\"shopping-cart-title\">{item.title}</p>\n                      </Link>\n                      <StockText\n                        className={\n                          item.stock < 1 ? \"text-danger\" : \"text-success\"\n                        }\n                      >\n                        {item.stock < 1 ? \"Out Of Stock\" : \"In Stock\"}\n                      </StockText>\n                      <section\n                        className=\"d-flex\"\n                        style={{\n                          padding: \"0\",\n                          marginTop: \"-35px\",\n                        }}\n                      >\n                        <p style={{ paddingTop: \"23px\", fontSize: \"14px\" }}>\n                          qty:{\" \"}\n                        </p>\n                        <QuantitySection style={{ paddingTop: \"3px\" }}>\n                          <QtyButton\n                            onClick={() =>\n                              dispatch(\n                                increaseCartItem(item.product, item.color)\n                              )\n                            }\n                          >\n                            <AiOutlinePlus />\n                          </QtyButton>\n                          <QtyNumber>{item.qty}</QtyNumber>\n                          <QtyButton\n                            onClick={() =>\n                              dispatch(\n                                decreaseCartItem(item.product, item.color)\n                              )\n                            }\n                          >\n                            <AiOutlineMinus />\n                          </QtyButton>\n                        </QuantitySection>\n                      </section>\n                      <section style={{ marginTop: \"-10px\" }}>\n                        <span\n                          style={{\n                            display: \"inline-block\",\n                            fontSize: \"13px\",\n                          }}\n                        >\n                          Color:\n                        </span>\n                        <ColorPreview\n                          style={{ background: `#${item.color}` }}\n                        ></ColorPreview>\n                      </section>\n                      <section\n                        style={{\n                          fontSize: \"14px\",\n                          color: \"#0d6efd\",\n                          marginTop: \"5px\",\n                        }}\n                        className=\"wishlist-options\"\n                      >\n                        <span\n                          style={{ cursor: \"pointer\" }}\n                          onClick={() =>\n                            dispatch(removeCartItem(item.product, item.color))\n                          }\n                        >\n                          Delete\n                        </span>\n                        {User.isAuthenticated && (\n                          <span\n                            style={{\n                              display: \"inline-block\",\n                              marginLeft: \"8px\",\n                              cursor: \"pointer\",\n                            }}\n                            className=\"option-2\"\n                            onClick={() => moveToWishlist(item)}\n                          >\n                            Move To Wishlist\n                          </span>\n                        )}\n                      </section>\n                    </section>\n                  </section>\n                  <section>\n                    <p style={{ fontWeight: \"600\" }}>\n                      {priceConverter(item.price)}\n                    </p>\n                  </section>\n                </CartItem>\n                <hr />\n              </>\n            );\n          })\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ShoppingCartPage;\n","/home/guney/RalShop/frontend/src/pages/ProductPage.js",["488","489","490"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProductById } from \"../redux/actions/productActions\";\nimport NotFound from \"./NotFound\";\nimport LoadingIcon from \"../assets/loading.gif\";\nimport Styled from \"styled-components\";\nimport {\n  AiFillCaretLeft,\n  AiFillCaretRight,\n  AiOutlineMinus,\n  AiOutlinePlus,\n  AiFillEdit,\n  AiFillHeart,\n} from \"react-icons/ai\";\nimport { HiDotsVertical } from \"react-icons/hi\";\nimport { FiHeart } from \"react-icons/fi\";\nimport FullscreenImage from \"./../components/fullscreenImage\";\nimport { priceConverter } from \"../utils/helpers\";\nimport ReactStars from \"react-rating-stars-component\";\nimport ProductLocation from \"../components/ProductLocation\";\nimport ProductDescription from \"../components/ProductDescription\";\nimport {\n  addReview,\n  getReviews,\n  deleteReview,\n  updateReview,\n} from \"../redux/actions/productReviewActions\";\nimport NoPhoto from \"../assets/noProfilePic.jpg\";\nimport moment from \"moment\";\nimport { BsStarFill, BsStarHalf, BsStar, BsTrashFill } from \"react-icons/bs\";\nimport MessageBox from \"../components/messageBox\";\nimport ReactMarkdown from \"react-markdown\";\nimport { addItem, removeItem } from \"../redux/actions/wishlistAction\";\nimport { addItem as addCartItem } from \"../redux/actions/ShoppingCartActions\";\nimport { createChatroom } from \"../redux/actions/chatActions\";\n\nconst NavDivider = Styled.span`\n  font-weight:bold;\n  padding-left:5px;\n`;\nconst ProductImages = Styled.div`\n  height: 100%;\n  width: 100%;\n  position: relative;\n  height: 400px;\n  user-select: none;\n  cursor: pointer;\n`;\nconst ImageBottomSection = Styled.section`\n  display:flex;\n  justify-content:space-between;\n  align-items:center;\n`;\nconst InfoRow = Styled.div`\n  display: flex;\n  justify-content: space-between;\n  width:300px;\n  padding:8px;\n  padding-left:0;\n`;\nconst TickIcon = Styled.span`\n  color: white;\n  font-size: 20px;\n  font-weight: bold;\n  position: absolute;\n  bottom: -6.3px;\n  left: 1px;\n  text-shadow: -1px -1px black;\n  visibility: hidden;\n`;\nconst ColorPreview = Styled.span`\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  cursor: pointer;\n  display: inline-block;\n  margin: 1px;\n  border: 1px solid black;\n  position: relative;\n  &:hover {\n    ${TickIcon} {\n      visibility: visible;\n    }\n  }\n`;\nconst QuantitySection = Styled.section`\n  display:flex;\n  align-items:center;\n`;\nconst QtyButton = Styled.button`\n  background:transparent;\n  border:transparent;\n  padding:2px;\n  font-weight:bold;\n  font-size:20px;\n  &:focus{\n    outline: none;\n  }\n`;\nconst QtyNumber = Styled.span`\n  font-size:20px;\n`;\nconst AddButtons = Styled.div`\n  display:flex;\n  align-items:center;\n`;\nconst TabNav = Styled.nav`\n  display:flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst TabList = Styled.li`\n  display: inline-block;\n  width:100%;\n  text-align:center;\n  font-weight:500;\n  font-size:1.5rem;\n  padding:5px;\n  transition:0.3s;\n  cursor:pointer;\n\n  &:hover{\n    background:#efefef;\n    box-shadow: inset 0 -2px 0 var(--primary-color);\n  }\n`;\nconst StarCount = Styled.p`\n  font-size: 15px;\n  margin-top:15px;\n  color: var(--text-muted);\n  text-decoration:underline;\n`;\nconst StarCountSection = Styled.section`\n  display:flex;\n  position:relative;\n  justify-content:space-between;\n  align-items:center;\n  margin-bottom:-10px;\n  width:80%;\n   @media (max-width: 900px) {\n    width: 100%;\n  }\n`;\nconst TextField = Styled.textarea`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n`;\nconst ProfilePicture = Styled.img`\n  height:50px;\n  width:50px;\n  object-fit:cover;\n  border-radius:50%;\n`;\nconst UserInfo = Styled.section`\n  display:flex;\n  flex-direction: column;\n  margin-left: 5px;\n`;\nconst UserSection = Styled.section`\n  display:flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst RatingBar = Styled.div`\n  position:absolute;\n  border-radius: 4px;\n  left: 22%;\n  width: 60%;\n  height: 25px;\n  background: #d9d9d9;\n  transition: 0.3s;\n`;\nconst RatingBarYellow = Styled.section`\n  background: rgb(255, 215, 0);\n  border: 1px solid #b39700;\n  border-radius: 4px;\n  height: 25px;\n  transition: 0.3s;\n`;\n\nconst ProductPage = () => {\n  const { id } = useParams();\n  let history = useHistory();\n  const { error, loading, wishlistCount } = useSelector(\n    (state) => state.Product\n  );\n  const Product = useSelector((state) => state.Product.product);\n  const Review = useSelector((state) => state.ProductReview);\n  const User = useSelector((state) => state.Auth);\n  const Wishlist = useSelector((state) => state.Wishlist);\n  const { inSellerRoute } = useSelector((state) => state.Seller);\n  const dispatch = useDispatch();\n  const [index, setIndex] = useState(0);\n  const [tab, setTab] = useState(\"description\");\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [qty, setQty] = useState(1);\n  const [color, setColor] = useState(\"\");\n  const [review, setReview] = useState(\"\");\n  const [rating, setRating] = useState(1);\n  const [reviews, setReviews] = useState([]);\n  const [sort, setSort] = useState(\"default\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [reviewId, setReviewId] = useState(\"\");\n  const [average, setAverage] = useState(0);\n  const [isInWishlist, setIsInWishlist] = useState(false);\n  const [isReviewEdit, setIsReviewEdit] = useState({\n    isEdit: false,\n    productId: null,\n    reviewRating: null,\n    reviewText: null,\n  });\n  const starRating = {\n    size: 27,\n    count: 5,\n    isHalf: false,\n    value: rating,\n    onChange: (newRating) => {\n      setRating(newRating);\n    },\n  };\n\n  useEffect(() => {\n    const lastVisited = JSON.parse(localStorage.getItem(\"lastVisited\")) || [];\n    if (Object.keys(Product).length > 0) {\n      const isInList = lastVisited.some((value) => {\n        console.log(value._id === Product._id);\n        return value._id === Product._id;\n      });\n\n      if (lastVisited.length > 5) {\n        lastVisited.pop();\n      }\n\n      if (!isInList) {\n        localStorage.setItem(\n          \"lastVisited\",\n          JSON.stringify([\n            { _id: Product._id, img: Product.images[0].url },\n            ...lastVisited,\n          ])\n        );\n      }\n    }\n  }, [Product]);\n\n  useEffect(() => {\n    if (window.location.hash) {\n      let reviewElement = document.getElementById(\n        window.location.hash.slice(1)\n      );\n      if (reviewElement !== null) {\n        window.scroll(0, reviewElement.offsetTop);\n      }\n    }\n  }, [Product, reviews]);\n\n  useEffect(() => {\n    dispatch(getProductById(id));\n    dispatch(getReviews(id));\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    let temp = false;\n    if (Wishlist.products.length < 1) {\n      setIsInWishlist(temp);\n    } else {\n      Wishlist.products.some((item) =>\n        item._id === id ? (temp = true) : (temp = false)\n      );\n    }\n    setIsInWishlist(temp);\n  }, [Wishlist, isInWishlist, id]);\n\n  useEffect(() => {\n    const getImage = document.querySelector(\n      `.product-images-section img[data-idx=\"${index}\"]`\n    );\n    document.querySelectorAll(\".product-images-section img\").forEach((item) => {\n      item.classList.remove(\"product-img-active\");\n    });\n    if (getImage) getImage.classList.add(\"product-img-active\");\n  }, [index]);\n\n  useEffect(() => {\n    const getColor = document.querySelector(\".color-circle\");\n    const getColorCircle = document.querySelector(\".color-circle span\");\n    if (getColorCircle) getColorCircle.style.visibility = \"visible\";\n    if (getColor) setColor(getColor.getAttribute(\"id\").substring(3));\n\n    const x = document.querySelector(\".description\");\n    if (x) {\n      x.innerHTML = Product.description;\n      let images = document.querySelectorAll(\".description img\");\n      if (images) {\n        images.forEach((item) => {\n          item.style.width = \"100%\";\n        });\n      }\n    }\n  }, [Product]);\n\n  useEffect(() => {\n    setReviews(Review.productReviews);\n    setAverage(Review.average);\n  }, [Review, average]);\n\n  const tempStars = Array.from({ length: 5 }, (_, index) => {\n    const number = index + 0.5;\n    return (\n      <span key={index} style={{ fontSize: \"24px\" }}>\n        {average > number ? (\n          <BsStarFill style={{ color: \"rgb(255, 215, 0)\" }} />\n        ) : average > index ? (\n          <BsStarHalf style={{ color: \"rgb(255, 215, 0)\" }} />\n        ) : (\n          <BsStar style={{ color: \"rgb(255, 215, 0)\" }} />\n        )}\n      </span>\n    );\n  });\n\n  const setProductColor = (id) => {\n    const getColor = document.querySelectorAll(\".color-circle span\");\n    getColor.forEach((item) => {\n      item.style.visibility = \"hidden\";\n    });\n    const getCircle = document.querySelector(`#${id} span`);\n    if (getCircle) getCircle.style.visibility = \"visible\";\n    setColor(id.substring(3));\n  };\n\n  const next = () => {\n    if (index >= Product.images.length - 1) {\n      setIndex(0);\n    } else {\n      setIndex(index + 1);\n    }\n  };\n  const prev = () => {\n    if (index <= 0) {\n      setIndex(Product.images.length - 1);\n    } else {\n      setIndex(index - 1);\n    }\n  };\n\n  const createReview = (e) => {\n    e.preventDefault();\n    setSort(\"default\");\n    document.querySelector(\"select[name='sort']\").value = \"default\";\n    dispatch(addReview(rating, review, Product._id));\n  };\n\n  const showFullscreen = () => {\n    setIsFullscreen(true);\n    window.scrollTo(0, 0);\n  };\n\n  const increaseQty = () => {\n    if (Product.stock > qty) {\n      setQty(qty + 1);\n    }\n  };\n\n  const decreaseQty = () => {\n    if (qty > 1) {\n      setQty(qty - 1);\n    }\n  };\n\n  useEffect(() => {\n    const listenKeyboard = (e) => {\n      if (e.code === \"ArrowLeft\") {\n        prev();\n      }\n      if (e.code === \"ArrowRight\") {\n        next();\n      }\n    };\n    document.addEventListener(\"keydown\", listenKeyboard);\n    return function removeListener() {\n      document.removeEventListener(\"keydown\", listenKeyboard);\n    };\n  }, [next, prev]);\n\n  useEffect(() => {\n    if (isFullscreen) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"auto\";\n    }\n  }, [isFullscreen]);\n\n  useEffect(() => {\n    const getTab = document.querySelector(`.tab-nav-item[data-tab=\"${tab}\"]`);\n    const getTabs = document.querySelectorAll(\".tab-nav-item\");\n    if (getTabs)\n      getTabs.forEach((item) => item.classList.remove(\"tab-nav-item-active\"));\n    if (getTab) getTab.classList.add(\"tab-nav-item-active\");\n  }, [tab]);\n\n  useEffect(() => {\n    const body = document.querySelector(\"body\");\n    if (isModalOpen) {\n      body.style.overflow = \"hidden\";\n    } else {\n      body.style.overflow = \"auto\";\n    }\n  }, [isModalOpen]);\n\n  useEffect(() => {\n    if (sort === \"default\") {\n      let sortedReviews = [...reviews].sort(\n        (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\n      );\n      setReviews(sortedReviews);\n    }\n    if (sort === \"DATE_OLD\") {\n      let sortedReviews = [...reviews].sort(\n        (a, b) => new Date(a.createdAt) - new Date(b.createdAt)\n      );\n      setReviews(sortedReviews);\n    }\n    if (sort === \"RATING_HIGH\") {\n      let sortedReviews = [...reviews].sort((a, b) => b.rating - a.rating);\n      setReviews(sortedReviews);\n    }\n    if (sort === \"RATING_LOW\") {\n      let sortedReviews = [...reviews].sort((a, b) => a.rating - b.rating);\n      setReviews(sortedReviews);\n    }\n  }, [sort]);\n\n  const editReview = (item) => {\n    dispatch(\n      updateReview(item._id, isReviewEdit.reviewRating, isReviewEdit.reviewText)\n    );\n    setIsReviewEdit({\n      isEdit: false,\n      productId: null,\n      reviewRating: null,\n      reviewText: null,\n    });\n  };\n\n  const removeReview = (reviewId) => {\n    setReviewId(reviewId);\n    setIsModalOpen(true);\n  };\n\n  const communicateSeller = () => {\n    dispatch(createChatroom(Product.shop._id, inSellerRoute));\n    history.push(\"/chat\");\n  };\n\n  if (loading) {\n    return (\n      <img\n        src={LoadingIcon}\n        alt=\"Loading Icon\"\n        height=\"100px\"\n        style={{ display: \"grid\", margin: \"auto\" }}\n      />\n    );\n  }\n  if (error.msg === \"Product Not Found\" || error.msg === \"Enter Valid Id.\") {\n    return <NotFound />;\n  }\n  if (Object.keys(Product).length > 0) {\n    return (\n      <div>\n        {isModalOpen && (\n          <MessageBox\n            isRedux={true}\n            action={deleteReview}\n            message={\"Do You Want To Delete Your Review ?\"}\n            setIsModalOpen={setIsModalOpen}\n            header={\"Delete Review\"}\n            btnText={\"Delete\"}\n            param={reviewId}\n          />\n        )}\n\n        {isFullscreen && (\n          <FullscreenImage\n            setIsFullscreen={setIsFullscreen}\n            images={Product.images && Product.images}\n            index={index}\n            prev={prev}\n            next={next}\n            setIndex={setIndex}\n          />\n        )}\n\n        <nav className=\"breadcrumb\" style={{ fontSize: \"14px\" }}>\n          <ul style={{ listStyleType: \"none\", padding: \"0\" }}>\n            <li style={{ display: \"inline\", textTransform: \"capitalize\" }}>\n              <Link\n                id=\"product-link\"\n                to={`/category/${\n                  Product.category && Product.category.toLowerCase()\n                }`}\n              >\n                {Product.category}\n              </Link>\n            </li>\n            <NavDivider>></NavDivider>\n            <li\n              style={{\n                display: \"inline\",\n                paddingLeft: \"10px\",\n                textTransform: \"capitalize\",\n              }}\n            >\n              <Link\n                id=\"product-link\"\n                to={`/category/${\n                  Product.category &&\n                  Product.subCategory &&\n                  Product.category.toLowerCase()\n                }/${Product.subCategory}`}\n              >\n                {Product.subCategory}\n              </Link>\n            </li>\n            <NavDivider>></NavDivider>\n            <li\n              style={{\n                display: \"inline\",\n                paddingLeft: \"10px\",\n                cursor: \"pointer\",\n                color: \"#0d6efd\",\n              }}\n            >\n              {Product.brand}\n            </li>\n          </ul>\n        </nav>\n        <div className=\"row\" style={{ marginTop: \"-20px\" }}>\n          <h2>{Product.title}</h2>\n          <div className=\"col-md-6\">\n            {Product.images && (\n              <ProductImages\n                id=\"big-product-img\"\n                onDoubleClick={() => setIsFullscreen(true)}\n              >\n                <img\n                  src={Product.images[index].url}\n                  alt=\"product\"\n                  className=\"product-img\"\n                />\n                <AiFillCaretRight\n                  className=\"img-arrows right\"\n                  onClick={() => next()}\n                />\n                <AiFillCaretLeft\n                  className=\"img-arrows left\"\n                  onClick={() => prev()}\n                />\n              </ProductImages>\n            )}\n            <ImageBottomSection>\n              <span className=\"img-index\" style={{ fontSize: \"14px\" }}>\n                {`${index + 1}/${Product.images && Product.images.length}`}{\" \"}\n                Photo\n              </span>\n              <button className=\"btn p-1\" onClick={() => showFullscreen()}>\n                Fullscreen\n              </button>\n            </ImageBottomSection>\n            <section className=\"product-images-section\">\n              {Product.images &&\n                Product.images.map((item, idx) => {\n                  return (\n                    <img\n                      data-idx={idx}\n                      key={idx}\n                      src={item.url}\n                      style={{ userSelect: \"none\" }}\n                      onClick={() => setIndex(idx)}\n                      className={idx === 0 && \"product-img-active\"}\n                      alt=\"product\"\n                    />\n                  );\n                })}\n            </section>\n          </div>\n          <div className=\"col-md-6 mb-5\">\n            <section\n              style={{ display: \"flex\", justifyContent: \"space-between\" }}\n            >\n              <section>\n                <p className=\"lead\" style={{ fontSize: \"30px\" }}>\n                  <strong>{priceConverter(Product.price)}</strong>\n                </p>\n                <p\n                  className={`${\n                    Product.stock < 1 ? \"text-danger\" : \"text-success\"\n                  }`}\n                  style={{ marginTop: \"-15px\" }}\n                >\n                  <b>{`${Product.stock < 1 ? \"Out Of Stock\" : \"In Stock\"}`}</b>\n                </p>\n                <p\n                  className=\"text-muted\"\n                  style={{ marginTop: \"-15px\", fontSize: \"14px\" }}\n                >\n                  {`${\n                    Product.location.length >= 30\n                      ? `${Product.location.substring(0, 30)}...`\n                      : Product.location\n                  }`}\n                </p>\n              </section>\n              <section>\n                <section className=\"product-star\">\n                  {tempStars}\n                  <section className=\"rating-small\">\n                    <section style={{ padding: \"15px\" }}>\n                      <section className=\"d-flex\">\n                        {tempStars}\n                        <h4 style={{ marginTop: \"7px\", marginLeft: \"5px\" }}>\n                          {average.toFixed(1)}{\" \"}\n                          <span style={{ fontSize: \"22px\" }}>out of 5</span>\n                        </h4>\n                      </section>\n                      <StarCountSection>\n                        <StarCount>5 Star</StarCount>\n                        <RatingBar>\n                          <RatingBarYellow\n                            style={{\n                              width:\n                                reviews.length > 0\n                                  ? Math.round(\n                                      ([\n                                        ...reviews.filter(\n                                          (item) => item.rating === 5\n                                        ),\n                                      ].length *\n                                        100) /\n                                        reviews.length\n                                    ) + \"%\"\n                                  : \"0%\",\n                            }}\n                          />\n                        </RatingBar>\n                        <StarCount>\n                          %\n                          {reviews.length > 0\n                            ? Math.round(\n                                ([\n                                  ...reviews.filter(\n                                    (item) => item.rating === 5\n                                  ),\n                                ].length *\n                                  100) /\n                                  reviews.length\n                              )\n                            : \"0\"}{\" \"}\n                        </StarCount>\n                      </StarCountSection>\n                      <StarCountSection>\n                        <StarCount>4 Star</StarCount>\n                        <RatingBar>\n                          {\" \"}\n                          <RatingBarYellow\n                            style={{\n                              width:\n                                reviews.length > 0\n                                  ? Math.round(\n                                      ([\n                                        ...reviews.filter(\n                                          (item) => item.rating === 4\n                                        ),\n                                      ].length *\n                                        100) /\n                                        reviews.length\n                                    ) + \"%\"\n                                  : \"0%\",\n                            }}\n                          />\n                        </RatingBar>\n                        <StarCount>\n                          %\n                          {reviews.length > 0\n                            ? Math.round(\n                                ([\n                                  ...reviews.filter(\n                                    (item) => item.rating === 4\n                                  ),\n                                ].length *\n                                  100) /\n                                  reviews.length\n                              )\n                            : \"0\"}{\" \"}\n                        </StarCount>\n                      </StarCountSection>\n                      <StarCountSection>\n                        <StarCount>3 Star</StarCount>\n                        <RatingBar>\n                          {\" \"}\n                          <RatingBarYellow\n                            style={{\n                              width:\n                                reviews.length > 0\n                                  ? Math.round(\n                                      ([\n                                        ...reviews.filter(\n                                          (item) => item.rating === 3\n                                        ),\n                                      ].length *\n                                        100) /\n                                        reviews.length\n                                    ) + \"%\"\n                                  : \"0%\",\n                            }}\n                          />\n                        </RatingBar>\n                        <StarCount>\n                          %\n                          {reviews.length > 0\n                            ? Math.round(\n                                ([\n                                  ...reviews.filter(\n                                    (item) => item.rating === 3\n                                  ),\n                                ].length *\n                                  100) /\n                                  reviews.length\n                              )\n                            : \"0\"}{\" \"}\n                        </StarCount>\n                      </StarCountSection>\n                      <StarCountSection>\n                        <StarCount>2 Star</StarCount>\n                        <RatingBar>\n                          {\" \"}\n                          <RatingBarYellow\n                            style={{\n                              width:\n                                reviews.length > 0\n                                  ? Math.round(\n                                      ([\n                                        ...reviews.filter(\n                                          (item) => item.rating === 2\n                                        ),\n                                      ].length *\n                                        100) /\n                                        reviews.length\n                                    ) + \"%\"\n                                  : \"0%\",\n                            }}\n                          />\n                        </RatingBar>\n                        <StarCount>\n                          %\n                          {reviews.length > 0\n                            ? Math.round(\n                                ([\n                                  ...reviews.filter(\n                                    (item) => item.rating === 2\n                                  ),\n                                ].length *\n                                  100) /\n                                  reviews.length\n                              )\n                            : \"0\"}{\" \"}\n                        </StarCount>\n                      </StarCountSection>\n                      <StarCountSection>\n                        <StarCount>1 Star</StarCount>\n                        <RatingBar>\n                          {\" \"}\n                          <RatingBarYellow\n                            style={{\n                              width:\n                                reviews.length > 0\n                                  ? Math.round(\n                                      ([\n                                        ...reviews.filter(\n                                          (item) => item.rating === 1\n                                        ),\n                                      ].length *\n                                        100) /\n                                        reviews.length\n                                    ) + \"%\"\n                                  : \"0%\",\n                            }}\n                          />\n                        </RatingBar>\n                        <StarCount>\n                          %\n                          {reviews.length > 0\n                            ? Math.round(\n                                ([\n                                  ...reviews.filter(\n                                    (item) => item.rating === 1\n                                  ),\n                                ].length *\n                                  100) /\n                                  reviews.length\n                              )\n                            : \"0\"}{\" \"}\n                        </StarCount>\n                      </StarCountSection>\n                    </section>\n                    <hr style={{ marginTop: \"-5px\" }} />\n                    <section\n                      style={{ textAlign: \"center\", paddingBottom: \"15px\" }}\n                    >\n                      <span\n                        className=\"text-muted\"\n                        style={{\n                          textDecoration: \"underline\",\n                          fontSize: \"14px\",\n                          marginTop: \"-15px\",\n                          cursor: \"pointer\",\n                        }}\n                      >\n                        <a href=\"#reviews\">See All Reviews</a>\n                      </span>\n                    </section>\n                  </section>\n                </section>\n                <span\n                  className=\"text-muted\"\n                  style={{\n                    textDecoration: \"underline\",\n                    fontSize: \"14px\",\n                    marginTop: \"-15px\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  <a href=\"#reviews\">{reviews.length} Ratings</a>\n                </span>\n              </section>\n            </section>\n            <hr />\n            <div className=\"seller-section\">\n              <section\n                style={{\n                  background: \"#efefef\",\n                  padding: \"15px\",\n                  paddingBottom: \"5px\",\n                }}\n              >\n                <section\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Link id=\"product-link\">\n                    <h6 style={{ fontSize: \"18px\" }}>\n                      {Product.shop.companyName}{\" \"}\n                      <div className=\"badge bg-primary\">\n                        {Product.shop.rating}\n                      </div>\n                    </h6>\n                  </Link>\n                </section>\n                <p style={{ marginTop: \"-8px\" }}>{Product.shop.fullname}</p>\n                <p style={{ marginTop: \"-10px\" }}>{Product.shop.phoneNumber}</p>\n                <p style={{ marginTop: \"-10px\", marginBottom: \"0px\" }}>\n                  <span\n                    style={{ color: \"#0d6efd\", cursor: \"pointer\" }}\n                    id=\"product-link\"\n                    onClick={() => communicateSeller()}\n                  >\n                    Send Message About This Product\n                  </span>\n                </p>\n              </section>\n            </div>\n            <div className=\"product-info\">\n              <InfoRow>\n                <span>\n                  <b>Brand</b>\n                </span>\n                <span>{Product.brand}</span>\n              </InfoRow>\n              <InfoRow>\n                <b>Color</b>\n                <div style={{ dislay: \"flex\" }}>\n                  {Product.colors.length > 0 &&\n                    Product.colors[0].split(\",\").map((clr, idx) => {\n                      return (\n                        <ColorPreview\n                          className=\"color-circle\"\n                          style={{ background: clr }}\n                          onClick={() =>\n                            setProductColor(\n                              `clr${clr.substring(1, clr.length)}`\n                            )\n                          }\n                          key={idx}\n                          id={`clr${clr.substring(1, clr.length)}`}\n                        >\n                          <TickIcon>&#10003;</TickIcon>\n                        </ColorPreview>\n                      );\n                    })}\n                </div>\n              </InfoRow>\n              <InfoRow>\n                <b>Quantity</b>\n                <QuantitySection>\n                  <QtyButton onClick={() => increaseQty()}>\n                    <AiOutlinePlus />\n                  </QtyButton>\n                  <QtyNumber>{qty}</QtyNumber>\n                  <QtyButton onClick={() => decreaseQty()}>\n                    <AiOutlineMinus />\n                  </QtyButton>\n                </QuantitySection>\n              </InfoRow>\n              <AddButtons>\n                <button\n                  className=\"default-btn w-100 pt-1 pb-1\"\n                  style={{ fontSize: \"18px\" }}\n                  onClick={() =>\n                    dispatch(\n                      addCartItem({\n                        product: Product._id,\n                        seller: Product.shop._id,\n                        price: Product.price,\n                        stock: Product.stock,\n                        title: Product.title,\n                        image: Product.images[0].url,\n                        stripeProductId: Product.stripeProductId,\n                        stripePriceId: Product.stripePriceId,\n                        color,\n                        qty,\n                        selected: true,\n                      })\n                    )\n                  }\n                  disabled={Product.stock < 1 ? true : false}\n                >\n                  Add To Cart\n                </button>\n                {User.isAuthenticated ? (\n                  <button\n                    className=\"default-btn pt-1 pb-1\"\n                    style={{\n                      fontSize: \"18px\",\n                      borderLeft: \"0\",\n                      fontWeight: \"600\",\n                    }}\n                    onClick={() =>\n                      isInWishlist\n                        ? dispatch(removeItem(id))\n                        : dispatch(addItem(Product))\n                    }\n                  >\n                    {isInWishlist ? <AiFillHeart /> : <FiHeart />}\n                  </button>\n                ) : (\n                  <Link to=\"/auth\">\n                    <button\n                      className=\"default-btn pt-1 pb-1\"\n                      style={{\n                        fontSize: \"18px\",\n                        borderLeft: \"0\",\n                        fontWeight: \"600\",\n                      }}\n                    >\n                      <FiHeart />\n                    </button>\n                  </Link>\n                )}\n              </AddButtons>\n              <div className=\"w-100\" style={{ position: \"relative\" }}>\n                <p\n                  style={{ position: \"absolute\", right: \"0\" }}\n                  className=\"text-muted\"\n                >\n                  In {wishlistCount} People's Wishlist\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"product-details mt-5\">\n          <TabNav>\n            <ul\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                padding: \"0\",\n                width: \"100%\",\n              }}\n            >\n              <TabList\n                data-tab=\"description\"\n                className=\"tab-nav-item tab-nav-item-active\"\n                onClick={() => setTab(\"description\")}\n              >\n                Description\n              </TabList>\n              <TabList\n                data-tab=\"location-tab\"\n                className=\"tab-nav-item\"\n                onClick={() => setTab(\"location-tab\")}\n              >\n                Location\n              </TabList>\n            </ul>\n          </TabNav>\n          {Product && (\n            <section\n              style={{\n                background: \"white\",\n                wordWrap: \"break-word\",\n                whiteSpace: \"pre-wrap\",\n              }}\n            >\n              {tab === \"description\" && (\n                <ProductDescription Product={Product} />\n              )}\n              {tab === \"location-tab\" && (\n                <ProductLocation coordinate={Product.coordinate} />\n              )}\n            </section>\n          )}\n        </div>\n        <div className=\"review-section mt-5\" id=\"reviews\">\n          <div className=\"row\">\n            <div className=\"col-md-4 mb-4\">\n              <h4>Customer Reviews</h4>\n              <div\n                style={{\n                  marginTop: \"-15px\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                }}\n              >\n                {tempStars}\n                <p\n                  style={{\n                    textDecoration: \"underline\",\n                    marginTop: \"15px\",\n                    marginLeft: \"5px\",\n                  }}\n                >\n                  {reviews.length} Ratings\n                </p>\n              </div>\n              <h3>\n                {average.toFixed(1)}{\" \"}\n                <span style={{ fontSize: \"22px\" }}>out of 5</span>\n              </h3>\n              <StarCountSection>\n                <StarCount>5 Star</StarCount>\n                <RatingBar>\n                  <RatingBarYellow\n                    style={{\n                      width:\n                        reviews.length > 0\n                          ? Math.round(\n                              ([...reviews.filter((item) => item.rating === 5)]\n                                .length *\n                                100) /\n                                reviews.length\n                            ) + \"%\"\n                          : \"0%\",\n                    }}\n                  />\n                </RatingBar>\n                <StarCount>\n                  %\n                  {reviews.length > 0\n                    ? Math.round(\n                        ([...reviews.filter((item) => item.rating === 5)]\n                          .length *\n                          100) /\n                          reviews.length\n                      )\n                    : \"0\"}{\" \"}\n                </StarCount>\n              </StarCountSection>\n              <StarCountSection>\n                <StarCount>4 Star</StarCount>\n                <RatingBar>\n                  {\" \"}\n                  <RatingBarYellow\n                    style={{\n                      width:\n                        reviews.length > 0\n                          ? Math.round(\n                              ([...reviews.filter((item) => item.rating === 4)]\n                                .length *\n                                100) /\n                                reviews.length\n                            ) + \"%\"\n                          : \"0%\",\n                    }}\n                  />\n                </RatingBar>\n                <StarCount>\n                  %\n                  {reviews.length > 0\n                    ? Math.round(\n                        ([...reviews.filter((item) => item.rating === 4)]\n                          .length *\n                          100) /\n                          reviews.length\n                      )\n                    : \"0\"}{\" \"}\n                </StarCount>\n              </StarCountSection>\n              <StarCountSection>\n                <StarCount>3 Star</StarCount>\n                <RatingBar>\n                  {\" \"}\n                  <RatingBarYellow\n                    style={{\n                      width:\n                        reviews.length > 0\n                          ? Math.round(\n                              ([...reviews.filter((item) => item.rating === 3)]\n                                .length *\n                                100) /\n                                reviews.length\n                            ) + \"%\"\n                          : \"0%\",\n                    }}\n                  />\n                </RatingBar>\n                <StarCount>\n                  %\n                  {reviews.length > 0\n                    ? Math.round(\n                        ([...reviews.filter((item) => item.rating === 3)]\n                          .length *\n                          100) /\n                          reviews.length\n                      )\n                    : \"0\"}{\" \"}\n                </StarCount>\n              </StarCountSection>\n              <StarCountSection>\n                <StarCount>2 Star</StarCount>\n                <RatingBar>\n                  {\" \"}\n                  <RatingBarYellow\n                    style={{\n                      width:\n                        reviews.length > 0\n                          ? Math.round(\n                              ([...reviews.filter((item) => item.rating === 2)]\n                                .length *\n                                100) /\n                                reviews.length\n                            ) + \"%\"\n                          : \"0%\",\n                    }}\n                  />\n                </RatingBar>\n                <StarCount>\n                  %\n                  {reviews.length > 0\n                    ? Math.round(\n                        ([...reviews.filter((item) => item.rating === 2)]\n                          .length *\n                          100) /\n                          reviews.length\n                      )\n                    : \"0\"}{\" \"}\n                </StarCount>\n              </StarCountSection>\n              <StarCountSection>\n                <StarCount>1 Star</StarCount>\n                <RatingBar>\n                  {\" \"}\n                  <RatingBarYellow\n                    style={{\n                      width:\n                        reviews.length > 0\n                          ? Math.round(\n                              ([...reviews.filter((item) => item.rating === 1)]\n                                .length *\n                                100) /\n                                reviews.length\n                            ) + \"%\"\n                          : \"0%\",\n                    }}\n                  />\n                </RatingBar>\n                <StarCount>\n                  %\n                  {reviews.length > 0\n                    ? Math.round(\n                        ([...reviews.filter((item) => item.rating === 1)]\n                          .length *\n                          100) /\n                          reviews.length\n                      )\n                    : \"0\"}{\" \"}\n                </StarCount>\n              </StarCountSection>\n            </div>\n            <div className=\"col-md-8\">\n              <section\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <h1>Reviews</h1>\n                <section>\n                  <label htmlFor=\"sort\">Sort By:</label>{\" \"}\n                  <select\n                    name=\"sort\"\n                    id=\"sort\"\n                    onChange={(e) => setSort(e.target.value)}\n                    className=\"default-btn p-1 sort-dropdown\"\n                    style={{\n                      background: \"#e9e9e9\",\n                      color: \"var(--primary-color)\",\n                      cursor: \"pointer\",\n                    }}\n                    required\n                  >\n                    <option value=\"default\">Default (newest first)</option>\n                    <option value=\"DATE_OLD\">Date (oldest first)</option>\n                    <option value=\"RATING_LOW\">\n                      Rating (lowest rating first)\n                    </option>\n                    <option value=\"RATING_HIGH\">\n                      Rating (highest rating first)\n                    </option>\n                  </select>\n                </section>\n              </section>\n              {User.isAuthenticated && (\n                <section>\n                  <h5>Add Review</h5>\n                  <form\n                    onSubmit={(e) => createReview(e)}\n                    style={{ marginTop: \"-12px\" }}\n                  >\n                    <ReactStars {...starRating} />\n                    <div className=\"update-review-section\">\n                      <TextField\n                        placeholder=\"Write at least 10 characters long reviews. Good reviews are usually 100 characters or more.\"\n                        tabIndex={1}\n                        rows=\"4\"\n                        cols=\"50\"\n                        style={{ width: \"100%\" }}\n                        name=\"review\"\n                        value={review}\n                        onChange={(e) => setReview(e.target.value)}\n                      />\n                    </div>\n                    <button className=\"default-btn mt-1\">Add Review</button>\n                  </form>\n                </section>\n              )}\n              <hr />\n              {Review.error.message && (\n                <span className=\"text-danger mb-3\">{Review.error.message}</span>\n              )}\n              {Review.error.status === 429 && (\n                <span className=\"text-danger mb-3\">\n                  Try again later. You reached your limits.\n                </span>\n              )}\n              {Review.loading && (\n                <img\n                  src={LoadingIcon}\n                  alt=\"Loading Icon\"\n                  height=\"80px\"\n                  style={{ display: \"grid\", margin: \"auto\" }}\n                />\n              )}\n              <div className=\"reviews\">\n                {reviews.length < 1 && <p>No review added.</p>}\n                {reviews.map((item, id) => {\n                  return (\n                    <div className=\"review-item mb-4\" key={id} id={item._id}>\n                      <UserSection>\n                        <div className=\"d-flex\">\n                          <ProfilePicture\n                            src={\n                              item.user.hasPhoto\n                                ? item.user.profilePhoto.url\n                                : NoPhoto\n                            }\n                            alt=\"profile\"\n                          />\n                          <UserInfo>\n                            <span\n                              className=\"username\"\n                              style={{ fontWeight: \"500\" }}\n                            >\n                              {item.user.username}\n                            </span>\n                            <span\n                              className=\"text-muted\"\n                              style={{ fontSize: \"14px\" }}\n                            >\n                              {moment(item.createdAt).format(\"ll\")}\n                            </span>\n                          </UserInfo>\n                        </div>\n                        {User.user &&\n                          item.user &&\n                          User.user._id === item.user._id && (\n                            <div className=\"review-settings\" tabIndex=\"2\">\n                              <button\n                                style={{\n                                  fontSize: \"20px\",\n                                  background: \"transparent\",\n                                  border: \"transparent\",\n                                }}\n                                className=\"review-settings-btn\"\n                              >\n                                <HiDotsVertical />\n                              </button>\n                              <div className=\"review-settings-list\">\n                                <button\n                                  onMouseDown={() => {\n                                    setIsReviewEdit({\n                                      isEdit: true,\n                                      productId: item._id,\n                                      reviewRating: item.rating,\n                                      reviewText: item.text,\n                                    });\n                                  }}\n                                >\n                                  <AiFillEdit style={{ color: \"gray\" }} /> Edit\n                                </button>\n                                <button\n                                  onMouseDown={() => removeReview(item._id)}\n                                >\n                                  <BsTrashFill\n                                    style={{\n                                      color: \"gray\",\n                                      marginRight: \"3px\",\n                                    }}\n                                  />\n                                  Delete\n                                </button>\n                              </div>\n                            </div>\n                          )}\n                      </UserSection>\n                      {isReviewEdit.productId !== item._id ? (\n                        <>\n                          <span>\n                            {[...Array(item.rating)].map((item, index) => {\n                              return (\n                                <BsStarFill\n                                  key={index}\n                                  style={{\n                                    color: \"rgb(255, 215, 0)\",\n                                    margin: \"1px\",\n                                  }}\n                                />\n                              );\n                            })}\n                            {[...Array(5 - item.rating)].map((item, index) => {\n                              return (\n                                <BsStarFill\n                                  key={index}\n                                  style={{ margin: \"1px\", color: \"gray\" }}\n                                />\n                              );\n                            })}\n                          </span>\n                          <section className=\"mt-2 review-text\">\n                            <ReactMarkdown>{item.text}</ReactMarkdown>\n                          </section>\n                        </>\n                      ) : (\n                        item._id === isReviewEdit.productId && (\n                          <section>\n                            <form\n                              onSubmit={(e) => e.preventDefault()}\n                              style={{ marginTop: \"-12px\" }}\n                            >\n                              <ReactStars\n                                {...starRating}\n                                value={isReviewEdit.reviewRating}\n                                onChange={(rating) =>\n                                  setIsReviewEdit({\n                                    ...isReviewEdit,\n                                    reviewRating: rating,\n                                  })\n                                }\n                              />\n                              <div className=\"update-review-section\">\n                                <TextField\n                                  tabIndex={1}\n                                  rows=\"4\"\n                                  cols=\"50\"\n                                  style={{ width: \"100%\" }}\n                                  name=\"review\"\n                                  value={isReviewEdit.reviewText}\n                                  onChange={(e) =>\n                                    setIsReviewEdit({\n                                      ...isReviewEdit,\n                                      reviewText: e.target.value,\n                                    })\n                                  }\n                                />\n                              </div>\n                              <button\n                                className=\"default-btn mt-1\"\n                                onClick={() => editReview(item)}\n                              >\n                                Edit\n                              </button>\n                              <span\n                                className=\"btn\"\n                                onClick={() =>\n                                  setIsReviewEdit({\n                                    isEdit: false,\n                                    productId: null,\n                                    reviewRating: null,\n                                    reviewText: null,\n                                  })\n                                }\n                              >\n                                Cancel\n                              </span>\n                            </form>\n                          </section>\n                        )\n                      )}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return <></>;\n};\n\nexport default ProductPage;\n","/home/guney/RalShop/frontend/src/pages/Messaging.js",["491","492","493","494"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  forbiddenRoom,\n  receiveMessage,\n  getChatroomMessages,\n  shopConfig,\n  userConfig,\n} from \"../redux/actions/chatActions\";\nimport { AiFillEye } from \"react-icons/ai\";\nimport { BiLeftArrowAlt, BiMessageDetail, BiSend } from \"react-icons/bi\";\nimport { MdPhotoCamera } from \"react-icons/md\";\nimport { HiDotsVertical } from \"react-icons/hi\";\nimport Styled from \"styled-components\";\nimport io from \"socket.io-client\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nconst CompanyName = Styled.p`\n  font-weight: 500;\n`;\nconst FullName = Styled.p`\n  margin-top: -20px;\n  color: var(--text-muted);\n  font-size: 15px;\n  font-weight:500;\n`;\nconst ActiveIndicator = Styled.div`\n  padding: 0 !important;\n  margin: 0 !important;  \n  height: 10px;\n  width: 10px;\n  border-radius:50%;\n  margin-left: 3px !important;\n`;\nconst TypingInformation = Styled.p`\n  font-size: 15px;\n  color: var(--text-muted);\n  position: absolute;\n  top: 20px;\n`;\nconst IsPhotoSending = Styled.p`\n  text-align: right;\n  font-size: 15px;\n  color: var(--text-muted);\n`;\n\nconst Messaging = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { Seller, Auth } = useSelector((state) => state);\n  const Chat = useSelector((state) => state.Chat);\n  const { inSellerRoute } = useSelector((state) => state.Seller);\n  const socketRef = useRef();\n  const [message, setMessage] = useState(\"\");\n  const [isOnline, setIsOnline] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [isParticipantLoaded, setIsParticipantLoaded] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [isPhotoLoading, setIsPhotoLoading] = useState(false);\n  const [isTextareaDisabled, setIsTextAreaDisabled] = useState(true);\n  const [isUnreadMessage, setIsUnreadMessage] = useState(false);\n  const [unreadMessageLength, setUnreadMessageLength] = useState(0);\n  let { roomId } = useParams();\n\n  useEffect(() => {\n    return history.listen((location) => {\n      socketRef.current.emit(\"left room\", roomId);\n    });\n  }, [history]);\n  useEffect(() => {\n    if (Chat.activeChat.participant !== null) setIsParticipantLoaded(true);\n  }, [Chat.activeChat.participant]);\n  useEffect(() => {\n    if (isParticipantLoaded) {\n      socketRef.current = io.connect(\"/\");\n      socketRef.current.emit(\n        \"user connected\",\n        inSellerRoute ? Seller.shop.id : Auth.user._id\n      );\n      socketRef.current.emit(\"join room\", roomId);\n\n      socketRef.current.on(\"get chat messages\", () => {\n        dispatch(getChatroomMessages(roomId, inSellerRoute));\n      });\n\n      setIsTextAreaDisabled(false);\n\n      socketRef.current.on(\"message sent\", (receivedMessage) => {\n        setIsPhotoLoading(false);\n        dispatch(receiveMessage(receivedMessage));\n\n        // Scroll to bottom when message received\n        let messageContainer = document.querySelector(\n          \".message-section-center\"\n        );\n        messageContainer.scrollTop = messageContainer.scrollHeight;\n      });\n\n      // Check if the participant is online\n      receiveUserData();\n\n      socketRef.current.on(\"typing\", (isTyping) =>\n        isTyping ? setIsTyping(true) : setIsTyping(false)\n      );\n\n      window.onbeforeunload = function () {\n        socketRef.current.emit(\"left room\", roomId);\n      };\n\n      socketRef.current.on(\"error\", (errorMsg) => setErrorMessage(errorMsg));\n    }\n  }, [isParticipantLoaded]);\n  useEffect(() => {\n    Chat.activeChat.messages.forEach((message) => {\n      if (inSellerRoute) {\n        if (message.receiver === Seller.shop.id && !message.seen) {\n          setIsUnreadMessage(true);\n        }\n      } else {\n        if (message.receiver === Auth.user._id && !message.seen) {\n          setIsUnreadMessage(true);\n        }\n      }\n    });\n  }, [Chat.activeChat.messages]);\n  useEffect(() => {\n    if (isUnreadMessage === true) {\n      const getUnreadMessages = document.querySelectorAll(\".unread-message\");\n      const getUnreadMessageNotificationText = document.querySelector(\n        \".unread-message\"\n      );\n      const getFirstUnreadMessage = document.querySelector(\".unread-wrapper\");\n      getFirstUnreadMessage.classList.add(\"show\");\n      setUnreadMessageLength(getUnreadMessages.length);\n      let messageContainer = document.querySelector(\".message-section-center\");\n      messageContainer.scroll(0, getUnreadMessageNotificationText.offsetTop);\n\n      setTimeout(() => {\n        socketRef.current.emit(\"message seen\");\n        setIsUnreadMessage(false);\n        setUnreadMessageLength(0);\n        getFirstUnreadMessage.classList.remove(\"show\");\n      }, 5000);\n    }\n  }, [isUnreadMessage]);\n  useEffect(() => {\n    // When messages loaded on startup scroll to bottom\n    let messageContainer = document.querySelector(\".message-section-center\");\n    messageContainer.scrollTop = messageContainer.scrollHeight;\n  }, [Chat.activeChat.messages, isPhotoLoading]);\n  useEffect(() => {\n    if (Chat.error.status === 403) {\n      dispatch(forbiddenRoom());\n      history.push(\"/chat\");\n    }\n  }, [Chat.error]);\n  function receiveUserData() {\n    socketRef.current.on(\"user data\", (users) => {\n      if (Chat.activeChat.participant !== null) {\n        if (users[Chat.activeChat.participant._id]) {\n          setIsOnline(true);\n        } else {\n          setIsOnline(false);\n        }\n      }\n    });\n  }\n  const sendMessage = (e) => {\n    setIsPhotoLoading(true);\n    e.preventDefault();\n    if (Chat.activeChat.participant !== null) {\n      const messageObject = {\n        sender: inSellerRoute ? Seller.shop.id : Auth.user._id,\n        receiver: Chat.activeChat.participant._id,\n        chatroom: roomId,\n        createdAt: Date.now(),\n        body: message,\n      };\n\n      // Clear message input\n      setMessage(\"\");\n\n      if (message.length > 0) {\n        // Send message\n        socketRef.current.emit(\"send message\", messageObject);\n        stopTyping(e);\n      }\n    }\n  };\n  const leftRoomButton = () => {\n    socketRef.current.emit(\"left room\", roomId);\n    history.push(inSellerRoute ? \"/chat/seller\" : \"/chat\");\n  };\n  const keyDownListener = (e) => {\n    socketRef.current.emit(\"start typing\");\n    if (e.keyCode === 13 && !e.shiftKey) {\n      sendMessage(e);\n    }\n  };\n  function stopTyping(e) {\n    socketRef.current.emit(\"stop typing\");\n  }\n  function selectFile(e) {\n    if (e.target.files[0]) {\n      setIsPhotoLoading(true);\n      setMessage(e.target.files[0].name);\n      let formData = new FormData();\n      formData.append(\"sender\", inSellerRoute ? Seller.shop.id : Auth.user._id);\n      formData.append(\"receiver\", Chat.activeChat.participant._id);\n      formData.append(\"chatroom\", roomId);\n      formData.append(\"image\", e.target.files[0]);\n\n      axios\n        .post(\n          \"/api/chat/sendImage\",\n          formData,\n          inSellerRoute ? shopConfig() : userConfig()\n        )\n        .then((res) => res.data)\n        .then((data) => {\n          socketRef.current.emit(\"send message\", data);\n        })\n        .catch((err) => setIsPhotoLoading(false));\n    }\n  }\n\n  return (\n    <div className=\"message-section\">\n      <div className={`message-section-top ${!inSellerRoute && \"not-seller\"}`}>\n        <section style={{ display: \"flex\", alignItems: \"center\" }}>\n          <BiLeftArrowAlt\n            onClick={() => leftRoomButton()}\n            style={{ fontSize: \"30px\", cursor: \"pointer\" }}\n            className=\"chat-back-button\"\n          />\n          <BiMessageDetail style={{ fontSize: \"25px\", marginLeft: \"10px\" }} />\n          {Chat.activeChat.participant !== null ? (\n            <>\n              <ActiveIndicator\n                style={\n                  isOnline ? { background: \"green\" } : { background: \"gray\" }\n                }\n              ></ActiveIndicator>\n              <section\n                style={{ marginLeft: \"8px\", position: \"relative\", top: \"8px\" }}\n              >\n                <CompanyName>\n                  {inSellerRoute\n                    ? Chat.activeChat.participant.username\n                    : Chat.activeChat.participant.companyName}\n                </CompanyName>\n                {!inSellerRoute && (\n                  <FullName>{Chat.activeChat.participant.fullname}</FullName>\n                )}\n                {isTyping && (\n                  <TypingInformation className=\"typing-status\">\n                    typing...\n                  </TypingInformation>\n                )}\n              </section>\n            </>\n          ) : (\n            \"Loading...\"\n          )}\n        </section>\n        <section>\n          <div className=\"chat-settings\">\n            <button className=\"chat-settings-btn\">\n              <HiDotsVertical style={{ fontSize: \"20px\" }} />\n            </button>\n            <div className=\"chat-settings-list\">\n              <button>Edit</button>\n              <button>Delete</button>\n            </div>\n          </div>\n        </section>\n      </div>\n      <div className=\"message-section-center\">\n        {Chat.activeChat.messages.map((message, index) => {\n          return (\n            <div\n              key={index}\n              className={`chat-box-container ${\n                inSellerRoute\n                  ? message.sender === Seller.shop.id\n                    ? \"right\"\n                    : \"\"\n                  : message.sender === Auth.user._id\n                  ? \"right\"\n                  : \"\"\n              } ${\n                inSellerRoute\n                  ? message.receiver === Seller.shop.id &&\n                    !message.seen &&\n                    \"unread-message\"\n                  : message.receiver === Auth.user._id &&\n                    !message.seen &&\n                    \"unread-message\"\n              }`}\n            >\n              {inSellerRoute\n                ? message.receiver === Seller.shop.id &&\n                  !message.seen && (\n                    <div className=\"unread-wrapper\" id=\"unread-message-id\">\n                      <div className=\"unread-message-section\">\n                        You Have {unreadMessageLength} Unread Messages\n                      </div>\n                    </div>\n                  )\n                : message.receiver === Auth.user._id &&\n                  !message.seen && (\n                    <div className=\"unread-wrapper\" id=\"unread-message-id\">\n                      <div className=\"unread-message-section\">\n                        You Have {unreadMessageLength} Unread Messages\n                      </div>\n                    </div>\n                  )}\n              <div className=\"chat-box\">\n                {message.isPhoto ? (\n                  <div>\n                    <img\n                      src={message.photo.photoUrl}\n                      alt=\"user message\"\n                      className=\"chat-picture\"\n                    />\n                  </div>\n                ) : (\n                  <p>{message.body}</p>\n                )}\n                <section className=\"message-box-bottom\">\n                  <span className=\"seen-mark\">\n                    {inSellerRoute\n                      ? message.sender === Seller.shop.id &&\n                        message.seen && <AiFillEye />\n                      : message.sender === Auth.user._id &&\n                        message.seen && <AiFillEye />}\n                  </span>\n                  <span className=\"message-date\">\n                    {moment(message.createdAt).format(\"LT\")}\n                  </span>\n                </section>\n              </div>\n            </div>\n          );\n        })}\n        {isPhotoLoading && <IsPhotoSending>Message Sending...</IsPhotoSending>}\n        {Chat.loading && <IsPhotoSending>Loading...</IsPhotoSending>}\n      </div>\n      <div className=\"message-section-bottom\">\n        {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\n        <form\n          onSubmit={(e) => sendMessage(e)}\n          autocomplete=\"off\"\n          enctype=\"multipart/form-data\"\n        >\n          <textarea\n            className=\"message-input\"\n            type=\"text\"\n            name=\"message-text\"\n            placeholder=\"Write a message.\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            onKeyDown={(e) => keyDownListener(e)}\n            onBlur={(e) => stopTyping(e)}\n            disabled={isTextareaDisabled}\n          />\n          <label for=\"file-upload\" class=\"custom-file-upload\">\n            <MdPhotoCamera style={{ marginTop: \"-2px\" }} />\n          </label>\n          <input\n            id=\"file-upload\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={(e) => selectFile(e)}\n            disabled={isTextareaDisabled}\n          />\n          <button type=\"submit\" disabled={message.length > 0 ? false : true}>\n            <BiSend style={{ marginTop: \"-3px\" }} />\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Messaging;\n","/home/guney/RalShop/frontend/src/pages/CheckoutPage.js",["495"],"import React, { useEffect, useState } from \"react\";\nimport Logo from \"../assets/logo.png\";\nimport Styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport AddressSection from \"../components/checkoutAddress\";\nimport PaymentSection from \"../components/checkoutPayment\";\nimport AddressModal from \"../components/AddressModal\";\nimport { priceConverter } from \"../utils/helpers\";\n\nconst HeaderSection = Styled.section`\n  position:relative;\n  margin-left: 10px;\n  margin-top:-10px;\n\n  @media (max-width: 500px) {\n    margin-left:5px;\n  }\n`;\nconst CheckoutNavbarHeader = Styled.h3`\n  font-weight:400;\n  @media (max-width: 425px) {\n    font-size: 21.5px;\n  }\n`;\nconst CheckoutNavbarText = Styled.p`\n  font-size: 14px;\n  margin-top: -8px;\n`;\nconst OrderSummarySection = Styled.section`\n  display: flex;\n  justify-content: space-between;\n  font-weight: 500;\n  font-size: 15.5px;\n  margin: 0;\n`;\n\nconst CheckoutPage = () => {\n  const Cart = useSelector((state) => state.Cart);\n  const Address = useSelector((state) => state.Address);\n  const [itemsToBuy, setItemsToBuy] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [isModalActive, setIsModalActive] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"address\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [isBillingAddress, setIsBillingAddress] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    let sum = 0,\n      itemSumToBuy = 0;\n    Cart.products.forEach((item) => {\n      if (item.selected) {\n        sum += item.price * item.qty;\n        itemSumToBuy += item.qty;\n      }\n    });\n\n    if (itemSumToBuy === 0) {\n      history.push(\"/cart\");\n    }\n\n    setTotal(sum);\n    setItemsToBuy(itemSumToBuy);\n  }, [Cart]);\n\n  useEffect(() => {\n    const getNavItems = document.querySelectorAll(\".checkout-nav div\");\n    getNavItems.forEach((navItem) => {\n      navItem.classList.remove(\"checkout-nav-active\");\n    });\n    if (activeTab === \"address\") {\n      getNavItems[0].classList.add(\"checkout-nav-active\");\n    }\n    if (activeTab === \"payment\") {\n      getNavItems[1].classList.add(\"checkout-nav-active\");\n    }\n  }, [activeTab]);\n  function changeTab(tab) {\n    if (\n      Object.keys(\n        typeof Address.selectedDeliveryAddress === \"object\"\n          ? Address.selectedDeliveryAddress\n          : {}\n      ).length > 1 &&\n      Object.keys(\n        typeof Address.selectedBillingAddress === \"object\"\n          ? Address.selectedBillingAddress\n          : {}\n      ).length > 1\n    ) {\n      setActiveTab(tab);\n    } else {\n      setErrorMsg(\"Select addresses for delivery.\");\n      setTimeout(() => setErrorMsg(\"\"), 5000);\n    }\n  }\n  function endPayment() {}\n\n  return (\n    <div className=\"checkout-page\">\n      {isModalActive && (\n        <AddressModal\n          isBillingAddress={isBillingAddress}\n          setIsModalActive={setIsModalActive}\n        />\n      )}\n      <div className=\"checkout-page-header\">\n        <img src={Logo} alt=\"UralShop Logo\" className=\"checkout-page-logo\" />\n        <HeaderSection>\n          <h2>Checkout</h2>\n          <p className=\"text-muted\">Buying {itemsToBuy} products</p>\n        </HeaderSection>\n      </div>\n      <div className=\"row mt-4\">\n        <div className=\"col-lg-9 col-md-8\">\n          <div className=\"checkout-nav\">\n            <div\n              className=\"checkout-nav-active\"\n              onClick={() => setActiveTab(\"address\")}\n            >\n              <CheckoutNavbarHeader>Address</CheckoutNavbarHeader>\n              <CheckoutNavbarText>Address information</CheckoutNavbarText>\n              {Object.keys(\n                typeof Address.selectedDeliveryAddress === \"object\"\n                  ? Address.selectedDeliveryAddress\n                  : {}\n              ).length > 0 && (\n                <p className=\"address-header\">\n                  {Address.selectedDeliveryAddress.addressHeader.length > 21\n                    ? `${Address.selectedDeliveryAddress.addressHeader.substring(\n                        0,\n                        21\n                      )}...`\n                    : Address.selectedDeliveryAddress.addressHeader}\n                </p>\n              )}\n            </div>\n            <div onClick={() => changeTab(\"payment\")}>\n              <CheckoutNavbarHeader>Payment</CheckoutNavbarHeader>\n              <CheckoutNavbarText>You can pay with Stripe</CheckoutNavbarText>\n            </div>\n          </div>\n          {errorMsg !== \"\" && <p className=\"text-danger\">{errorMsg}</p>}\n          {activeTab === \"address\" ? (\n            <AddressSection\n              setIsModalActive={setIsModalActive}\n              setIsBillingAddress={setIsBillingAddress}\n              isBillingAddress={isBillingAddress}\n              isModalActive={isModalActive}\n            />\n          ) : (\n            <PaymentSection />\n          )}\n        </div>\n        <div className=\"col-lg-3 col-md-4 order-summary-section\">\n          <button\n            className=\"default-btn w-100 checkout-btn-top\"\n            onClick={() =>\n              activeTab === \"payment\" ? endPayment() : changeTab(\"payment\")\n            }\n          >\n            {activeTab === \"payment\" ? \"End Payment\" : \"Proceed To Payment\"}\n          </button>\n          <div className=\"order-summary-box mt-3\">\n            <OrderSummarySection>\n              <p>Subtotal</p>\n              <p>{priceConverter(total)}</p>\n            </OrderSummarySection>\n            <OrderSummarySection>\n              <p>Shipping Fee</p>\n              <p>{priceConverter(4.99)}</p>\n            </OrderSummarySection>\n            <hr />\n            <OrderSummarySection>\n              <p>Total</p>\n              <p>{priceConverter(4.99 + total)}</p>\n            </OrderSummarySection>\n          </div>\n          <div className=\"order-summary-box mt-4 shipping-info\">\n            <p>\n              You can view and see the status of your orders from your profile.\n            </p>\n          </div>\n          <div className=\"order-summary-box mt-4 shipping-info\">\n            <p>\n              If seller approves you can cancel the order.\n              <br />\n              Or You can send direct message to seller.\n            </p>\n          </div>\n          <button\n            className=\"default-btn w-100 mt-3\"\n            onClick={() =>\n              activeTab === \"payment\" ? endPayment() : changeTab(\"payment\")\n            }\n          >\n            {activeTab === \"payment\" ? \"End Payment\" : \"Proceed To Payment\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CheckoutPage;\n","/home/guney/RalShop/frontend/src/components/footer.js",[],"/home/guney/RalShop/frontend/src/components/navbar.js",[],"/home/guney/RalShop/frontend/src/pages/Messenger.js",["496","497"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport LoadingIcon from \"../assets/loading.gif\";\nimport { getChatrooms, setActiveChatroom } from \"../redux/actions/chatActions\";\nimport Styled from \"styled-components\";\nimport { MdNotifications } from \"react-icons/md\";\nimport { BiMessageDetail } from \"react-icons/bi\";\nimport { HiDotsVertical } from \"react-icons/hi\";\n\nconst ChatCount = Styled.p`\n     font-size: 15.5px;\n     color: var(--text-muted);\n     margin-top: -10px;\n`;\nconst LoadingGif = Styled.img`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  height:100px;\n`;\nconst InfoText = Styled.p`\n  margin:auto;\n  font-weight:500;\n  color: var(--text-muted);\n  text-align: center;\n`;\nconst ChatroomBox = Styled.div`\n  cursor: pointer;\n  display: flex;\n  transition: 0.2s;\n  padding: 5px;\n  &:hover{\n    background: #e9e9e9;\n  }\n  position: relative;\n`;\nconst CompanyName = Styled.p`\n  font-weight: 500;\n`;\nconst FullName = Styled.p`\n  margin-top: -20px;\n  color: var(--text-muted);\n  font-size: 15px;\n  font-weight:400;\n`;\nconst LastMessage = Styled.p`\n  color: var(--text-muted);\n  font-weight: 300;\n  margin-top: -15px;\n`;\n\nconst Messenger = () => {\n  const history = useHistory();\n  const { Chat } = useSelector((state) => state);\n  const { inSellerRoute } = useSelector((state) => state.Seller);\n  const [notifications, setNotifications] = useState([]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getChatrooms(inSellerRoute));\n  }, []);\n  useEffect(() => {\n    if (Chat.createdRoom !== null) {\n      activeChat(\n        Chat.createdRoom.chatroom._id,\n        Chat.createdRoom.chatroom.participant\n      );\n    }\n  }, [Chat]);\n  useEffect(() => {\n    setNotifications(Chat.notifications);\n  }, [Chat.notifications]);\n\n  const activeChat = (roomId, participant) => {\n    dispatch(setActiveChatroom(roomId, participant, inSellerRoute));\n    history.push(\n      inSellerRoute\n        ? `/chat/seller/message/${roomId}`\n        : `/chat/message/${roomId}`\n    );\n  };\n\n  return (\n    <div>\n      <h2 className=\"text-center\">UralShop Chat</h2>\n      <ChatCount className=\"text-center\">\n        {Chat.chatrooms.length} Chats\n      </ChatCount>\n      <hr />\n      <div className=\"main-area\">\n        {Chat.loading ? (\n          <LoadingGif src={LoadingIcon} alt=\"loading icon\" />\n        ) : (\n          Chat.chatrooms.length === 0 && <InfoText>No Chat Found</InfoText>\n        )}\n        {Chat.chatrooms.length >= 1 &&\n          Chat.chatrooms.map((room, index) => {\n            return (\n              <ChatroomBox\n                key={index}\n                className={\n                  notifications.some(\n                    (notif) => notif.chatroom === room.chatroom._id\n                  )\n                    ? \"border-bottom chatroom-highlight\"\n                    : \"border-bottom\"\n                }\n                onClick={() =>\n                  activeChat(\n                    room.chatroom._id,\n                    inSellerRoute\n                      ? room.chatroom.creator\n                      : room.chatroom.participant\n                  )\n                }\n              >\n                <section>\n                  <BiMessageDetail\n                    style={{ height: \"30px\", width: \"30px\", marginTop: \"50%\" }}\n                  />\n                  {notifications.some(\n                    (notification) =>\n                      notification.chatroom === room.chatroom._id\n                  ) && (\n                    <MdNotifications\n                      style={{ color: \"#c9222b\", fontSize: \"22px\" }}\n                    />\n                  )}\n                </section>\n                <section style={{ paddingLeft: \"15px\", paddingTop: \"5px\" }}>\n                  <CompanyName>\n                    {inSellerRoute\n                      ? room.chatroom.creator.username\n                      : room.chatroom.participant.companyName}\n                  </CompanyName>\n                  {!inSellerRoute && (\n                    <FullName>{room.chatroom.participant.fullname}</FullName>\n                  )}\n                  {room.lastMessage !== null &&\n                    (room.lastMessage.isPhoto ? (\n                      <LastMessage>A Photo Has Been Sent</LastMessage>\n                    ) : (\n                      <LastMessage>\n                        {room.lastMessage.body.length > 28\n                          ? `${room.lastMessage.body.substring(0, 28)}...`\n                          : room.lastMessage.body}\n                      </LastMessage>\n                    ))}\n                </section>\n                <HiDotsVertical\n                  style={{\n                    position: \"absolute\",\n                    right: \"0\",\n                    paddingTop: \"5px\",\n                    fontSize: \"24px\",\n                  }}\n                />\n              </ChatroomBox>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default Messenger;\n","/home/guney/RalShop/frontend/src/redux/actions/authActions.js",[],"/home/guney/RalShop/frontend/src/redux/actions/sellerActions.js",[],"/home/guney/RalShop/frontend/src/redux/actions/chatActions.js",[],"/home/guney/RalShop/frontend/src/redux/actions/wishlistAction.js",[],"/home/guney/RalShop/frontend/src/redux/actions/ShoppingCartActions.js",[],"/home/guney/RalShop/frontend/src/redux/actions/types.js",[],"/home/guney/RalShop/frontend/src/pages/seller/loginPage.js",[],"/home/guney/RalShop/frontend/src/pages/seller/sellerHomePage.js",[],"/home/guney/RalShop/frontend/src/pages/seller/ForgotPasswordSendEmailPage.js",["498"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { AiOutlineLock } from \"react-icons/ai\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { sendForgotPasswordEmail } from \"../../redux/actions/sellerActions\";\n\nconst CenterDiv = styled.div`\n  margin-top: 30px;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst CenterBox = styled.div`\n  border: 1px solid #c2c2c2;\n  background: white;\n  margin: auto;\n  padding: 10px 40px;\n  width: 400px;\n  box-shadow: 2px 2px 10px #dedede;\n  position: relative;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst InputField = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #fafafa;\n  border: 1px solid #c2c2c2;\n  width: 100%;\n`;\n\nconst SectionBottom = styled.section`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background: #efefef;\n  border-top: 1px solid #c2c2c2;\n  font-weight: 500;\n  text-align: center;\n  padding: 7px;\n  :hover {\n    text-decoration: underline;\n  }\n`;\nconst ForgotPasswordSendEmailPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const Seller = useSelector((state) => state.Seller);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (\n      Seller.forgotPassword.isPasswordReset &&\n      Seller.forgotPassword.sendEmailSuccess\n    ) {\n      localStorage.setItem(\"seller_password_reset\", true);\n      if (email !== \"\") localStorage.setItem(\"seller_email\", email);\n    }\n  }, [Seller, dispatch]);\n\n  const sendCode = (e) => {\n    e.preventDefault();\n    dispatch(sendForgotPasswordEmail(email, window.origin));\n  };\n\n  return (\n    <CenterDiv>\n      <CenterBox>\n        <AiOutlineLock\n          style={{ display: \"grid\", margin: \"auto\", fontSize: \"5rem\" }}\n        />\n        <h2 style={{ textAlign: \"center\" }}>Forgot Password?</h2>\n        <p\n          style={{\n            color: \"var(--text-muted)\",\n            textAlign: \"center\",\n            fontSize: \"15px\",\n          }}\n        >\n          Enter your email and we'll send you a code to get your account back.\n        </p>\n        <form style={{ margin: \"auto\" }} onSubmit={(e) => sendCode(e)}>\n          <InputField\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            aria-label=\"email input\"\n            value={email}\n            placeholder=\"Email\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <button\n            className=\"default-btn mt-3 w-100\"\n            disabled={email.length < 1 || Seller.loading ? true : false}\n          >\n            {Seller.loading ? \"Loading...\" : \"Send Login Link\"}\n          </button>\n          {Seller.error.message ? (\n            <span className=\"text-danger\">\n              {Seller.error.message !== \"Login To See The Content.\" &&\n                Seller.error.message}\n            </span>\n          ) : (\n            Seller.forgotPassword.sendEmailSuccess && (\n              <span className=\"text-success\">\n                Email Sent. Click the link we sent to your mail.\n              </span>\n            )\n          )}\n        </form>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"var(--text-muted)\",\n            fontSize: \"14px\",\n            fontWeight: \"500\",\n            paddingTop: \"30px\",\n            paddingBottom: \"40px\",\n          }}\n        >\n          OR\n        </p>\n        <SectionBottom>\n          <Link\n            to=\"/seller/login\"\n            style={{ color: \"var(--primary-text)\", textDecoration: \"none\" }}\n          >\n            Back To Login Page\n          </Link>\n        </SectionBottom>\n      </CenterBox>\n    </CenterDiv>\n  );\n};\n\nexport default ForgotPasswordSendEmailPage;\n","/home/guney/RalShop/frontend/src/pages/seller/changePasswordPage.js",["499"],"import React, { useEffect, useState } from \"react\";\nimport { CgPassword } from \"react-icons/cg\";\nimport styled from \"styled-components\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  confirmPasswordResetToken,\n  resetPassword,\n} from \"../../redux/actions/sellerActions\";\n\nconst CenterDiv = styled.div`\n  margin-top: 30px;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst CenterBox = styled.div`\n  border: 1px solid #c2c2c2;\n  background: white;\n  margin: auto;\n  padding: 10px 40px;\n  width: 400px;\n  box-shadow: 2px 2px 10px #dedede;\n  position: relative;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst InputField = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #fafafa;\n  border: 1px solid #c2c2c2;\n  width: 100%;\n`;\n\nconst SectionBottom = styled.section`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background: #efefef;\n  border-top: 1px solid #c2c2c2;\n  font-weight: 500;\n  text-align: center;\n  padding: 7px;\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst ChangePasswordPage = () => {\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [err, setErr] = useState(null);\n  const { token } = useParams();\n  const dispatch = useDispatch();\n  const Seller = useSelector((state) => state.Seller);\n\n  useEffect(() => {\n    dispatch(\n      confirmPasswordResetToken(localStorage.getItem(\"seller_email\"), token)\n    );\n  }, []);\n\n  useEffect(() => {\n    if (\n      !localStorage.getItem(\"seller_email\") ||\n      !localStorage.getItem(\"seller_password_reset\")\n    ) {\n      window.location = window.origin + \"/seller/login\";\n    }\n    if (Seller.forgotPassword.checkToken === false) {\n      window.location = window.origin + \"/seller/login\";\n    }\n    if (Seller.forgotPassword.resetPasswordError === false) {\n      window.location = window.origin + \"/seller/login\";\n    }\n  }, [Seller]);\n\n  useEffect(() => {\n    if (newPassword.length > 6 && confirmPassword.length > 6) {\n      if (newPassword !== confirmPassword) {\n        setErr(\"Passwords don't match.\");\n      } else {\n        setErr(false);\n      }\n    } else {\n      if (newPassword.length > 0 && confirmPassword.length > 0) {\n        setErr(\"Password must be at least 6 characters.\");\n      } else {\n        setErr(false);\n      }\n    }\n  }, [newPassword, confirmPassword]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      resetPassword(\n        newPassword,\n        confirmPassword,\n        localStorage.getItem(\"seller_email\"),\n        token\n      )\n    );\n  };\n\n  return (\n    <CenterDiv>\n      <CenterBox>\n        <CgPassword\n          style={{ display: \"grid\", margin: \"auto\", fontSize: \"5rem\" }}\n        />\n        <h2 style={{ textAlign: \"center\" }}>New Password</h2>\n        <p\n          style={{\n            color: \"var(--text-muted)\",\n            textAlign: \"center\",\n            fontSize: \"15px\",\n          }}\n        >\n          Enter your new password and confirm it. Passwor must be more than 6\n          characters.\n        </p>\n        <form style={{ margin: \"auto\" }} onSubmit={(e) => handleSubmit(e)}>\n          <InputField\n            type=\"password\"\n            name=\"newPassword\"\n            id=\"newPassword\"\n            value={newPassword}\n            aria-label=\"New password input\"\n            placeholder=\"Enter your new password\"\n            onChange={(e) => setNewPassword(e.target.value)}\n          />\n          <InputField\n            type=\"password\"\n            name=\"confirmPassword\"\n            id=\"confirmPassword\"\n            value={confirmPassword}\n            aria-label=\"Confirm new password input\"\n            className=\"mt-3\"\n            placeholder=\"Confirm your new password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n          <button\n            className=\"default-btn mt-5 w-100\"\n            disabled={\n              newPassword.length < 6 || newPassword.length < 6 || Seller.loading\n                ? true\n                : false\n            }\n          >\n            {Seller.loading ? \"Loading...\" : \"Change Password\"}\n          </button>\n          {err && <span className=\"text-danger\">{err}</span>}\n          {Seller.forgotPassword.resetPasswordError && (\n            <span className=\"text-danger\">\n              An error occured while resetting the password. Try again or try to\n              get new passwor reset link.\n            </span>\n          )}\n        </form>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"var(--text-muted)\",\n            fontSize: \"14px\",\n            fontWeight: \"500\",\n            paddingTop: \"30px\",\n            paddingBottom: \"40px\",\n          }}\n        >\n          OR\n        </p>\n        <SectionBottom>\n          <Link\n            to=\"/seller/login\"\n            style={{ color: \"var(--primary-text)\", textDecoration: \"none\" }}\n          >\n            Back To Login Page\n          </Link>\n        </SectionBottom>\n      </CenterBox>\n    </CenterDiv>\n  );\n};\n\nexport default ChangePasswordPage;\n","/home/guney/RalShop/frontend/src/pages/seller/SellerProfilePage.js",[],"/home/guney/RalShop/frontend/src/pages/seller/AddProductPage.js",["500"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { categories, subCategories } from \"../../data/category\";\nimport LoadingIcon from \"../../assets/loading.gif\";\nimport styled from \"styled-components\";\nimport { CompactPicker } from \"react-color\";\nimport JoditEditor from \"jodit-react\";\nimport mapboxgl from \"mapbox-gl\";\nimport axios from \"axios\";\nimport { priceConverter } from \"../../utils/helpers\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createProduct } from \"../../redux/actions/productActions\";\nimport { Redirect } from \"react-router-dom\";\nimport Navbar from \"../../components/seller/productActionsPageNavbar\";\n\nconst Labels = styled.label`\n  font-weight: 500;\n`;\nconst InputField = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nconst Select = styled.select`\n  padding: 4px 5px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 90%;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nconst RemoveIcon = styled.span`\n  color: white;\n  font-size: 20px;\n  font-weight: bold;\n  position: absolute;\n  bottom: -6px;\n  left: 3px;\n  text-shadow: -1px -1px black;\n  visibility: hidden;\n`;\nconst ColorPreview = styled.div`\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  cursor: pointer;\n  display: inline-block;\n  margin: 1px;\n  border: 1px solid black;\n  position: relative;\n  &:hover {\n    ${RemoveIcon} {\n      visibility: visible;\n    }\n  }\n`;\n\nconst ColorOptions = styled.div`\n  margin-left: 20px;\n  @media (max-width: 512px) {\n    margin-left: 0;\n  }\n`;\n\nconst AddProductPage = () => {\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [subCategory, setSubCategory] = useState(\"\");\n  const [colors, setColors] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const editor = useRef(null);\n  const [map, setMap] = useState(null);\n  const [results, setResults] = useState([]);\n  const [notFound, setNotFound] = useState(null);\n  const [center, setCenter] = useState([35, 39]);\n  const mapContainer = useRef(null);\n  const [price, setPrice] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [stock, setStock] = useState(0);\n  const config = {\n    readonly: false,\n    placeholder: \"Write product description...\",\n    askBeforePasteHTML: false,\n  };\n  const Product = useSelector((state) => state.Product);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const initializeMap = ({ setMap, mapContainer }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        center,\n        zoom: 5,\n      });\n      map.on(\"load\", () => {\n        setMap(map);\n        map.resize();\n      });\n    };\n\n    if (!map) {\n      initializeMap({ setMap, mapContainer });\n    }\n\n    if (map !== null && location.length > 0) {\n      map.flyTo({\n        center,\n        essential: true,\n        zoom: 12,\n      });\n    }\n  }, [map, center]);\n\n  useEffect(() => {\n    if (location.length > 0) {\n      if (results !== []) {\n        document\n          .querySelector(\".location-search-results\")\n          .classList.add(\"active\");\n      }\n    } else {\n      document\n        .querySelector(\".location-search-results\")\n        .classList.remove(\"active\");\n    }\n    if (notFound) {\n      setIsLoading(false);\n      document\n        .querySelector(\".location-search-results\")\n        .classList.remove(\"active\");\n    }\n  }, [location, results, notFound]);\n\n  const displayResults = () => {\n    if (notFound !== null && notFound === false)\n      document\n        .querySelector(\".location-search-results\")\n        .classList.add(\"active\");\n  };\n\n  const removeResults = () => {\n    setTimeout(() => {\n      document\n        .querySelector(\".location-search-results\")\n        .classList.remove(\"active\");\n    }, 100);\n  };\n\n  const changeLocation = (placeName, coordinate) => {\n    setLocation(placeName);\n    setCenter(coordinate);\n  };\n\n  const searchAddress = (e) => {\n    setLocation(e.target.value);\n    setIsLoading(true);\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${location}.json?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`\n      )\n      .then((res) => res.data)\n      .then((data) => {\n        setResults(data.features);\n        setIsLoading(false);\n        setNotFound(false);\n      })\n      .catch((err) => {\n        setResults([]);\n        setNotFound(true);\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let formData = new FormData();\n    const imageFile = document.querySelector(`input[type='file']`);\n    if (imageFile.files) {\n      for (let i = 0; i < imageFile.files.length; i++) {\n        formData.append(\"images\", imageFile.files[i]);\n      }\n    }\n    formData.append(\"title\", name);\n    formData.append(\"price\", price);\n    formData.append(\"description\", description);\n    formData.append(\"stock\", stock);\n    formData.append(\"brand\", brand);\n    formData.append(\"colors\", colors);\n    formData.append(\"location\", location);\n    formData.append(\"coordinate\", center);\n    formData.append(\"category\", category);\n    formData.append(\"subCategory\", subCategory);\n    dispatch(createProduct(formData));\n  };\n\n  const handleChangeComplete = (color) => {\n    setColor(color.hex);\n    setColors((oldColors) => {\n      if (colors.indexOf(color.hex) === -1) {\n        return [color.hex, ...oldColors];\n      } else {\n        return [...oldColors];\n      }\n    });\n  };\n\n  const removeColor = (clr) => {\n    setColors(colors.filter((item) => item !== clr));\n  };\n\n  return (\n    <div>\n      <Navbar isAddProductPage={true}/>\n      <form onSubmit={(e) => handleSubmit(e)}>\n        <div className=\"form-section\">\n          <Labels htmlFor=\"name\">Product Name</Labels>\n          <InputField\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Product Name\"\n            onBlur={(e) => setName(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-md-4 mb-3\">\n            <Labels htmlFor=\"category\">Select Category</Labels>\n            <Select\n              name=\"category\"\n              id=\"category\"\n              onChange={(e) => setCategory(e.target.value)}\n              required\n            >\n              <option value=\"\">Select Category</option>\n              {categories.map((item, idx) => {\n                return (\n                  <option value={item} key={idx}>\n                    {item}\n                  </option>\n                );\n              })}\n            </Select>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"form-section\">\n              <Labels htmlFor=\"subCategory\">Select Sub Category</Labels>\n              <Select\n                name=\"subCategory\"\n                id=\"subCategory\"\n                onChange={(e) => setSubCategory(e.target.value)}\n                required\n              >\n                <option value=\"\">Select Sub Category</option>\n                {category !== \"\" &&\n                  subCategories[categories.indexOf(category)].map(\n                    (item, idx) => {\n                      return (\n                        <option value={item} key={idx}>\n                          {item}\n                        </option>\n                      );\n                    }\n                  )}\n              </Select>\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"form-section\">\n              <Labels htmlFor=\"stock\">Stock</Labels>\n              <InputField\n                id=\"stock\"\n                type=\"number\"\n                placeholder=\"Stock\"\n                value={stock}\n                onChange={(e) => setStock(e.target.value)}\n                min=\"1\"\n              />\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className=\"form-section\">\n              <Labels htmlFor=\"brand\">Brand Name</Labels>\n              <InputField\n                type=\"text\"\n                name=\"brand\"\n                id=\"brand\"\n                placeholder=\"Brand Name\"\n                onBlur={(e) => setBrand(e.target.value)}\n                required\n              />\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className=\"form-section\">\n              <Labels htmlFor=\"price\">Price ({priceConverter(price)})</Labels>\n              <InputField\n                id=\"price\"\n                type=\"number\"\n                placeholder=\"Price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n                min=\"1\"\n              />\n            </div>\n          </div>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            alignItems: \"flex-start\",\n          }}\n        >\n          <div>\n            <Labels htmlFor=\"colorPicker\">\n              Pick Color Options For Product\n            </Labels>\n            <br />\n            <span className=\"form-text\" style={{ marginTop: \"-5px\" }}>\n              Picked colors will be displayed on right.\n            </span>\n            <br />\n            <CompactPicker\n              id=\"colorPicker\"\n              color={color}\n              onChange={(color) => handleChangeComplete(color)}\n            />\n          </div>\n          <ColorOptions>\n            <p style={{ fontWeight: \"500\" }}>Picked Colors:</p>\n            <span\n              style={{ marginTop: \"-15px\", display: \"block\" }}\n              className=\"form-text\"\n            >\n              Colors gets removed on click\n            </span>\n            <br />\n            {colors.length > 0 &&\n              colors.map((clr, idx) => {\n                return (\n                  <ColorPreview\n                    style={{ background: clr }}\n                    onClick={() => removeColor(clr)}\n                    key={idx}\n                    id={`clr${clr.substring(1, clr.length)}`}\n                  >\n                    <RemoveIcon>&times;</RemoveIcon>\n                  </ColorPreview>\n                );\n              })}\n          </ColorOptions>\n        </div>\n        <Labels htmlFor=\"description\" className=\"mt-5\">\n          Description\n        </Labels>\n        <JoditEditor\n          id=\"description\"\n          ref={editor}\n          value={description}\n          config={config}\n          tabIndex={1}\n          onBlur={(newContent) => setDescription(newContent)}\n        />\n        <Labels htmlFor=\"images\" className=\"mt-3\">\n          Choose Product Images\n        </Labels>\n        <input\n          className=\"form-control\"\n          type=\"file\"\n          id=\"images\"\n          multiple\n          required\n        />\n        <div className=\"form-section mt-3\">\n          <Labels htmlFor=\"location\">Enter Location Of Product</Labels>\n          <InputField\n            type=\"text\"\n            name=\"location\"\n            id=\"location\"\n            aria-label=\"location\"\n            placeholder=\"Location\"\n            value={location}\n            onFocus={() => displayResults()}\n            onChange={(e) => searchAddress(e)}\n            onBlur={() => removeResults()}\n            autoComplete=\"off\"\n            required\n          />\n          <div className=\"location-search-results w-100\">\n            {isLoading ? (\n              \"Loading...\"\n            ) : (\n              <div>\n                {results.map((item, idx) => {\n                  return (\n                    <section\n                      className=\"location-result mb-1\"\n                      key={idx}\n                      onMouseDown={() =>\n                        changeLocation(\n                          item.place_name,\n                          item.geometry.coordinates\n                        )\n                      }\n                    >\n                      <span>{item.text}</span>\n                      <br />\n                      <span style={{ fontSize: \"13px\" }}>\n                        {`${item.place_name.substring(0, 32)}...`}\n                      </span>\n                    </section>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n          <div className=\"form-text text-danger\">\n            {notFound && \"No address found\"}\n          </div>\n          <div\n            ref={(el) => (mapContainer.current = el)}\n            style={{ height: \"300px\" }}\n          />\n        </div>\n        <button className=\"default-btn mt-4\">Create Product</button>\n        {Product.loading && (\n          <>\n            <img src={LoadingIcon} alt=\"loading gif\" height=\"70px\" />\n            <p className=\"text-muted\">This may take a while.</p>\n          </>\n        )}\n        <section className=\"mt-1\">\n          {Product.error.msg !== null && (\n            <p className=\"text-danger\">{Product.error.msg}</p>\n          )}\n          {Object.keys(Product.createdProduct).length > 1 && (\n            <>\n              <p className=\"text-success\">Product Created Successfully.</p>\n              <Redirect to={`/product/${Product.createdProduct._id}`} />\n            </>\n          )}\n        </section>\n      </form>\n    </div>\n  );\n};\n\nexport default AddProductPage;\n","/home/guney/RalShop/frontend/src/pages/seller/registerPage.js",["501"],"import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport RegisterPhoto from \"../../assets/registerPhoto.svg\";\nimport { categories } from \"../../data/category\";\nimport { countries } from \"../../data/countries\";\nimport mapboxgl from \"mapbox-gl\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { sellerRegister } from \"../../redux/actions/sellerActions\";\nimport { Link } from \"react-router-dom\";\n\nconst PageHeader = styled.h1`\n  font-weight: 300;\n  text-align: center;\n`;\nconst BrandName = styled.h1`\n  font-weight: 300;\n  font-size: 42px;\n`;\n\nconst Muted = styled.span`\n  color: var(--text-muted);\n`;\nconst Labels = styled.label`\n  font-weight: 500;\n`;\nconst InputField = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 90%;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nconst TextField = styled.textarea`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n`;\nconst Select = styled.select`\n  padding: 4px 5px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 90%;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nconst Colorful = styled.span`\n  color: #346eeb;\n  font-weight: 500;\n  cursor: pointer;\n`;\n\nconst RegisterPage = () => {\n  const [fullname, setFullname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [links, setLinks] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [map, setMap] = useState(null);\n  const [results, setResults] = useState([]);\n  const [notFound, setNotFound] = useState(null);\n  const [center, setCenter] = useState([35, 39]);\n  const mapContainer = useRef(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n  const Seller = useSelector((state) => state.Seller);\n\n  useEffect(() => {\n    if (location.length > 0) {\n      if (results !== []) {\n        document\n          .querySelector(\".location-search-results\")\n          .classList.add(\"active\");\n      }\n    } else {\n      document\n        .querySelector(\".location-search-results\")\n        .classList.remove(\"active\");\n    }\n    if (notFound) {\n      setIsLoading(false);\n      document\n        .querySelector(\".location-search-results\")\n        .classList.remove(\"active\");\n    }\n  }, [location, results, notFound]);\n\n  useEffect(() => {\n    const initializeMap = ({ setMap, mapContainer }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        center,\n        zoom: 5,\n      });\n      map.on(\"load\", () => {\n        setMap(map);\n        map.resize();\n      });\n    };\n\n    if (!map) {\n      initializeMap({ setMap, mapContainer });\n    }\n\n    if (map !== null && location.length > 0) {\n      map.flyTo({\n        center,\n        essential: true,\n        zoom: 12,\n      });\n    }\n  }, [map, center]);\n\n  const changeLocation = (placeName, coordinate) => {\n    setLocation(placeName);\n    setCenter(coordinate);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const splittedLinks = links.split(\" \");\n    dispatch(\n      sellerRegister({\n        fullname,\n        email,\n        country,\n        phoneNumber,\n        category,\n        companyName,\n        location,\n        coordinate: center,\n        links: splittedLinks,\n        password,\n      })\n    );\n  };\n\n  const displayResults = () => {\n    if (notFound !== null && notFound === false)\n      document\n        .querySelector(\".location-search-results\")\n        .classList.add(\"active\");\n  };\n\n  const removeResults = () => {\n    setTimeout(() => {\n      document\n        .querySelector(\".location-search-results\")\n        .classList.remove(\"active\");\n    }, 100);\n  };\n\n  const searchAddress = (e) => {\n    setLocation(e.target.value);\n    setIsLoading(true);\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${location}.json?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`\n      )\n      .then((res) => res.data)\n      .then((data) => {\n        setResults(data.features);\n        setIsLoading(false);\n        setNotFound(false);\n      })\n      .catch((err) => {\n        setResults([]);\n        setNotFound(true);\n      });\n  };\n\n  return (\n    <div>\n      <PageHeader>Register As Seller</PageHeader>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-md-8\">\n          <p style={{ marginTop: \"-10px\" }}>Become a seller in UralShop</p>\n          <form onSubmit={(e) => handleSubmit(e)}>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"form-section\">\n                  <Labels htmlFor=\"fullname\">Fullname</Labels>\n                  <InputField\n                    type=\"text\"\n                    name=\"fullname\"\n                    id=\"fullname\"\n                    aria-label=\"fullname\"\n                    placeholder=\"fullname\"\n                    value={fullname}\n                    onChange={(e) => setFullname(e.target.value)}\n                    required\n                  />\n                </div>\n                <div className=\"form-section\">\n                  <Labels htmlFor=\"email\">Email</Labels>\n                  <InputField\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    aria-label=\"email\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                  />\n                </div>\n                <div className=\"form-section\">\n                  <Labels htmlFor=\"country\">Country</Labels>\n                  <Select\n                    name=\"country\"\n                    id=\"country\"\n                    onChange={(e) => setCountry(e.target.value)}\n                    required\n                  >\n                    <option value=\"\">Select Your Country</option>\n                    {countries.map((item, idx) => {\n                      return (\n                        <option\n                          value={item.code}\n                          key={idx}\n                        >{`${item.code} - ${item.name}`}</option>\n                      );\n                    })}\n                  </Select>\n                </div>\n                <div className=\"form-section\">\n                  <Labels htmlFor=\"category\">Category</Labels>\n                  <Select\n                    name=\"category\"\n                    id=\"category\"\n                    onChange={(e) => setCategory(e.target.value)}\n                    required\n                  >\n                    <option value=\"\">Select Category</option>\n                    {categories.map((item, idx) => {\n                      return (\n                        <option value={item} key={idx}>\n                          {item}\n                        </option>\n                      );\n                    })}\n                  </Select>\n                  <div className=\"form-text\">Select your main category</div>\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-section\">\n                  <Labels htmlFor=\"phonenumber\">Phone Number</Labels>\n                  <InputField\n                    type=\"text\"\n                    name=\"phonenumber\"\n                    id=\"phonenumber\"\n                    aria-label=\"phonenumber\"\n                    placeholder=\"Phone Number\"\n                    value={phoneNumber}\n                    onChange={(e) => setPhoneNumber(e.target.value)}\n                    required\n                  />\n                  <div className=\"form-text\">Enter company phone number</div>\n                </div>\n                <div className=\"form-section\">\n                  <Labels htmlFor=\"companyName\">Company Name</Labels>\n                  <InputField\n                    type=\"text\"\n                    name=\"companyName\"\n                    id=\"companyName\"\n                    aria-label=\"company name\"\n                    placeholder=\"Company Name\"\n                    value={companyName}\n                    onChange={(e) => setCompanyName(e.target.value)}\n                    required\n                  />\n                </div>\n                <div className=\"form-section\">\n                  <Labels htmlFor=\"location\">Location</Labels>\n                  <InputField\n                    type=\"text\"\n                    name=\"location\"\n                    id=\"location\"\n                    aria-label=\"location\"\n                    placeholder=\"Location\"\n                    value={location}\n                    onFocus={() => displayResults()}\n                    onChange={(e) => searchAddress(e)}\n                    onBlur={() => removeResults()}\n                    autoComplete=\"off\"\n                    required\n                  />\n                  <div className=\"location-search-results\">\n                    {isLoading ? (\n                      \"Loading...\"\n                    ) : (\n                      <div>\n                        {results.map((item, idx) => {\n                          return (\n                            <section\n                              className=\"location-result mb-1\"\n                              key={idx}\n                              onMouseDown={() =>\n                                changeLocation(\n                                  item.place_name,\n                                  item.geometry.coordinates\n                                )\n                              }\n                            >\n                              <span>{item.text}</span>\n                              <br />\n                              <span style={{ fontSize: \"13px\" }}>\n                                {`${item.place_name.substring(0, 32)}...`}\n                              </span>\n                            </section>\n                          );\n                        })}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-text\">\n                    Enter headquarters of your company\n                  </div>\n                  <div className=\"form-text text-danger\">\n                    {notFound && \"No address found\"}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              ref={(el) => (mapContainer.current = el)}\n              style={{ height: \"300px\" }}\n            />\n            <Labels htmlFor=\"links\" className=\"mt-4\">\n              Enter The Links Of Your Shop If You Have\n            </Labels>\n            <div className=\"form-section\">\n              <TextField\n                name=\"links\"\n                id=\"links\"\n                cols=\"10\"\n                rows=\"5\"\n                style={{ color: \"#0d6efd\", textDecoration: \"underline\" }}\n                placeholder=\"If you sell products on different websites or if your company have website, enter links of them. Seperate links with space. If you don't have link to enter leave it blank.\"\n                onChange={(e) => setLinks(e.target.value)}\n              >\n                {links}\n              </TextField>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"form-section\">\n                  <Labels htmlFor=\"password\">Password</Labels>\n                  <InputField\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    value={password}\n                    placeholder=\"Password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                  />\n                </div>\n                <button\n                  className=\"default-btn seller\"\n                  disabled={Seller.loading ? true : false}\n                >\n                  {Seller.loading ? \"Loading...\" : \"Register As Seller\"}\n                </button>\n                <p className=\"mt-2\">\n                  Already a seller?{\" \"}\n                  <Link to=\"/seller/login\">\n                    <Colorful style={{ textDecoration: \"underline\" }}>\n                      Login as seller\n                    </Colorful>\n                  </Link>\n                </p>\n              </div>\n              {Seller.error.message !== null && (\n                <span className=\"text-danger\">\n                  {Seller.error.message !== \"Login To See The Content.\" &&\n                    Seller.error.message}\n                </span>\n              )}\n            </div>\n          </form>\n        </div>\n        <div className=\"col-md-4 register-page-col\">\n          <img\n            src={RegisterPhoto}\n            alt=\"online shopping\"\n            style={{ width: \"100%\" }}\n          />\n          <section style={{ textAlign: \"center\" }}>\n            <BrandName>UralShop</BrandName>\n            <Muted>Güney Ural @ 2021</Muted>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","/home/guney/RalShop/frontend/src/privateRoutes/sellerRoutes.js",["502"],"import React, { useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { sellerRoute } from \"../redux/actions/sellerActions\";\n\nconst SellerRoute = ({\n  component: Component,\n  isSellerAuthenticated,\n  ...rest\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(sellerRoute());\n  }, []);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isSellerAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/seller/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default SellerRoute;\n","/home/guney/RalShop/frontend/src/privateRoutes/passwordResetRoutes.js",["503"],"import React, { useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { notSellerRoute } from \"../redux/actions/sellerActions\";\n\nconst PasswordResetRoute = ({\n  component: Component,\n  isPasswordReset,\n  isAuthenticated,\n  ...rest\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(notSellerRoute());\n  }, []);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isPasswordReset === false || isAuthenticated === true ? (\n          <Redirect to=\"/auth\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PasswordResetRoute;\n","/home/guney/RalShop/frontend/src/redux/reducers/index.js",[],"/home/guney/RalShop/frontend/src/redux/actions/productActions.js",["504"],"import {\n  CREATE_PRODUCT,\n  PRODUCT_ERROR,\n  PRODUCT_LOADING,\n  GET_PRODUCT_BY_ID,\n} from \"./types\";\nimport axios from \"axios\";\n\nexport const createProduct = (data) => (dispatch) => {\n  dispatch({ type: PRODUCT_LOADING });\n\n  axios\n    .post(\"/api/product/new\", data, {\n      headers: {\n        \"shop-token\": localStorage.getItem(\"shop-token\"),\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    })\n    .then((res) => res.data)\n    .then((data) => {\n      dispatch({ type: CREATE_PRODUCT, payload: data });\n    })\n    .catch((err) => {\n      dispatch({\n        type: PRODUCT_ERROR,\n        payload: {\n          msg: err.response.data.errorMessage,\n          status: err.response.status,\n        },\n      });\n    });\n};\n\nexport const productLoading = () => {\n  return { type: PRODUCT_LOADING };\n};\n\nexport const getProductById = (id) => (dispatch) => {\n  dispatch({ type: PRODUCT_LOADING });\n\n  axios\n    .get(`/api/product/${id}`)\n    .then((res) => res.data)\n    .then((data) => {\n      dispatch({\n        type: GET_PRODUCT_BY_ID,\n        payload: {\n          Product: data.Product,\n          wishlistCount: data.wishlistCount,\n        },\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: PRODUCT_ERROR,\n        payload: {\n          msg: err.response.data.errorMessage,\n          status: err.response.status,\n        },\n      });\n    });\n};\n\nconst tokenConfig = () => {\n  const token = localStorage.getItem(\"shop-token\");\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  if (token) config.headers[\"shop-token\"] = token;\n  return config;\n};\n","/home/guney/RalShop/frontend/src/components/passwordSettings.js",[],"/home/guney/RalShop/frontend/src/components/messageBox.js",[],"/home/guney/RalShop/frontend/src/components/AddressModal.js",["505","506","507"],"import react, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createAddress as CREATE_ADDRESS,\n  updateAddress,\n} from \"../redux/actions/addressActions\";\nimport { GrClose } from \"react-icons/gr\";\nimport { countries } from \"../data/countries\";\nimport styled from \"styled-components\";\n\nconst Labels = styled.label`\n  font-weight: 500;\n`;\nconst InputField = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 90%;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nconst InputFieldFullWidth = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 95%;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nconst TextField = styled.textarea`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 95%;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nconst Select = styled.select`\n  padding: 4px 5px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 90%;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nconst Button = styled.button`\n  width: 95%;\n  text-align: center;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst InformationText = styled.span`\n  display: block;\n  margin-top: -15px;\n`;\n\nconst AddressModal = ({\n  setIsModalActive,\n  isEdit,\n  selectedAddress,\n  isBillingAddress,\n}) => {\n  const dispatch = useDispatch();\n  const { Address, lastAction } = useSelector((state) => state);\n  const [email, setEmail] = useState(isEdit ? selectedAddress.email : \"\");\n  const [city, setCity] = useState(isEdit ? selectedAddress.city : \"\");\n  const [state, setState] = useState(isEdit ? selectedAddress.state : \"\");\n  const [name, setName] = useState(isEdit ? selectedAddress.name : \"\");\n  const [surname, setSurname] = useState(isEdit ? selectedAddress.surname : \"\");\n  const [country, setCountry] = useState(isEdit ? selectedAddress.country : \"\");\n  const [phoneNumber, setPhoneNumber] = useState(\n    isEdit ? selectedAddress.phoneNumber : \"\"\n  );\n  const [addressHeader, setAddressHeader] = useState(\n    isEdit ? selectedAddress.addressHeader : \"\"\n  );\n  const [addressDetails, setAddressDetails] = useState(\n    isEdit ? selectedAddress.address : \"\"\n  );\n  const [isButtonClicked, setIsButtonClicked] = useState(false);\n\n  useEffect(() => {\n    // Close the modal when user presses ESC\n    window.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 27) {\n        setIsModalActive(false);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    if (isButtonClicked) {\n      if (\n        lastAction === \"CREATE_ADDRESS\" ||\n        lastAction === \"UPDATE_ADDRESS\" ||\n        lastAction === \"CREATE_BILLING_ADDRESS\" ||\n        lastAction === \"UPDATE_BILLING_ADDRESS\"\n      ) {\n        setIsModalActive(false);\n        setIsButtonClicked(false);\n      }\n    }\n  }, [lastAction]);\n\n  function createAddress(e) {\n    e.preventDefault();\n    setIsButtonClicked(true);\n    const addressObject = {\n      name,\n      surname,\n      country,\n      phoneNumber,\n      address: addressDetails,\n      addressHeader,\n      city,\n      state,\n      email,\n    };\n    dispatch(CREATE_ADDRESS(addressObject, isBillingAddress));\n  }\n  function editAddress(e) {\n    e.preventDefault();\n    setIsButtonClicked(true);\n    const addressObject = {\n      name,\n      surname,\n      country,\n      phoneNumber,\n      address: addressDetails,\n      addressHeader,\n      city,\n      state,\n      email,\n    };\n    dispatch(\n      updateAddress(selectedAddress._id, addressObject, isBillingAddress)\n    );\n  }\n\n  return (\n    <div className=\"address-modal-background\">\n      <div className=\"address-modal\">\n        <div className=\"address-modal-top\">\n          <h6>{isEdit ? \"Edit address\" : \"Create new address\"}</h6>\n          <button onClick={() => setIsModalActive(false)}>\n            <GrClose />\n          </button>\n        </div>\n        <div className=\"address-modal-center\">\n          <form onSubmit={(e) => (isEdit ? editAddress(e) : createAddress(e))}>\n            <div className=\"row\">\n              <div className=\"col-md-6 mt-2\">\n                <Labels htmlFor=\"name\">Name</Labels>\n                <InputField\n                  type=\"text\"\n                  placeholder=\"name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"col-md-6 mt-2\">\n                <Labels htmlFor=\"surname\">Surname</Labels>\n                <InputField\n                  type=\"text\"\n                  placeholder=\"surname\"\n                  value={surname}\n                  onChange={(e) => setSurname(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"col-md-6 mt-2\">\n                <Labels htmlFor=\"country\">Country</Labels>\n                <Select\n                  name=\"country\"\n                  id=\"country\"\n                  value={country}\n                  onChange={(e) => setCountry(e.target.value)}\n                  required\n                >\n                  <option value=\"\">Select Your Country</option>\n                  {countries.map((item, idx) => {\n                    return (\n                      <option\n                        value={item.code}\n                        key={idx}\n                      >{`${item.code} - ${item.name}`}</option>\n                    );\n                  })}\n                </Select>\n              </div>\n              <div className=\"col-md-6 mt-2\">\n                <Labels htmlFor=\"surname\">Phone Number</Labels>\n                <InputField\n                  type=\"text\"\n                  placeholder=\"Phone Number\"\n                  value={phoneNumber}\n                  onChange={(e) => setPhoneNumber(e.target.value)}\n                />\n              </div>\n              <div className=\"col-md-6 mt-2\">\n                <Labels htmlFor=\"city\">City</Labels>\n                <br />\n                <InputField\n                  type=\"text\"\n                  id=\"city\"\n                  placeholder=\"city\"\n                  value={city}\n                  onChange={(e) => setCity(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"col-md-6 mt-2\">\n                <Labels htmlFor=\"state\">State</Labels>\n                <InputField\n                  type=\"text\"\n                  id=\"state\"\n                  placeholder=\"state\"\n                  value={state}\n                  onChange={(e) => setState(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"col-md-12 mt-2\">\n                <Labels htmlFor=\"email\" style={{ fontSize: \"14px\" }}>\n                  {isBillingAddress\n                    ? \"Email (You will receive receipt and invoice from this address)\"\n                    : \"Email (You will get notified about your order from this address\"}\n                </Labels>\n                <InputFieldFullWidth\n                  type=\"email\"\n                  id=\"email\"\n                  placeholder=\"email address\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n              <div className=\"col-md-12 mt-2\">\n                <Labels htmlFor=\"addressHeader\">Address Header</Labels>\n                <InputFieldFullWidth\n                  type=\"text\"\n                  placeholder=\"Address Header\"\n                  value={addressHeader}\n                  onChange={(e) => setAddressHeader(e.target.value)}\n                />\n              </div>\n              <div className=\"col-md-12 mt-2\">\n                <Labels htmlFor=\"addressHeader\">Address</Labels>\n                <TextField\n                  placeholder=\"Address Details\"\n                  value={addressDetails}\n                  onChange={(e) => setAddressDetails(e.target.value)}\n                  required\n                ></TextField>\n              </div>\n              <div className=\"mt-3\">\n                {Address.loading && (\n                  <InformationText className=\"text-muted\">\n                    Loading...\n                  </InformationText>\n                )}\n                {Address.error && (\n                  <InformationText className=\"text-danger\">\n                    {Address.error.msg}\n                  </InformationText>\n                )}\n                <Button className=\"default-btn\">\n                  {isEdit ? \"Edit\" : \"Create\"}\n                </Button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddressModal;\n","/home/guney/RalShop/frontend/src/components/checkoutPayment.js",[],"/home/guney/RalShop/frontend/src/components/checkoutAddress.js",["508","509"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { BsPlusCircle, BsPencil, BsTrash } from \"react-icons/bs\";\nimport AddressModal from \"../components/AddressModal\";\nimport {\n  getAddresses,\n  deleteAddress,\n  selectAddress as SELECT_ADDRESS,\n  selectBillingAddress as SELECT_BILLING_ADDRESS,\n} from \"../redux/actions/addressActions\";\n\nconst CheckoutAddress = ({\n  setIsModalActive,\n  isBillingAddress,\n  setIsBillingAddress,\n}) => {\n  const Address = useSelector((state) => state.Address);\n  const dispatch = useDispatch();\n  const [selectedAddress, setSelectedAddress] = useState();\n  const [isEditModalActive, setIsEditModalActive] = useState(false);\n  const [editedItem, setEditedItem] = useState();\n  const [selectedBillingAddress, setSelectedBillingAddress] = useState();\n\n  useEffect(() => {\n    dispatch(getAddresses());\n  }, []);\n  useEffect(() => {\n    if (Address.deliveryAddresses.length > 0) {\n      const index = parseInt(localStorage.getItem(\"selected-address-index\"));\n      setSelectedAddress(\n        Address.deliveryAddresses[\n          index\n            ? isNaN(index)\n              ? 0\n              : index > Address.deliveryAddresses.length\n              ? 0\n              : index\n            : 0\n        ]\n      );\n    } else {\n      setSelectedAddress();\n    }\n  }, [Address.deliveryAddresses]);\n  useEffect(() => {\n    dispatch(SELECT_ADDRESS(selectedAddress));\n  }, [selectedAddress]);\n  function removeAddress(id, isBilling) {\n    dispatch(deleteAddress(id, isBilling));\n  }\n  function selectAddress(item, index) {\n    setSelectedAddress(item);\n    localStorage.setItem(\"selected-address-index\", index);\n  }\n  function selectBillingAddress(item) {\n    setSelectedBillingAddress(item);\n    dispatch(SELECT_BILLING_ADDRESS(item));\n  }\n  function editAddress(item, billingAddresses) {\n    setIsEditModalActive(true);\n    setEditedItem(item);\n    setIsBillingAddress(billingAddresses);\n  }\n  function createNewAddress(billingAddresses) {\n    setIsModalActive(true);\n    setIsBillingAddress(billingAddresses);\n  }\n\n  return (\n    <>\n      {isEditModalActive && (\n        <AddressModal\n          setIsModalActive={setIsEditModalActive}\n          isEdit={true}\n          selectedAddress={editedItem}\n          isBillingAddress={isBillingAddress}\n        />\n      )}\n      {Address.loading && (\n        <>\n          <span className=\"text-muted\">Loading...</span>\n          <br />\n        </>\n      )}\n      {Address.error && (\n        <>\n          <span className=\"text-danger\">{Address.error.msg}</span>\n          <br />\n        </>\n      )}\n      <span className=\"text-muted\" style={{ fontSize: \"14px\" }}>\n        Selected address will have darker background. Click over address to\n        select.\n      </span>\n      <div className=\"checkout-address-section\">\n        <div className=\"checkout-address-section-top\">\n          <span>Delivery Address</span>\n        </div>\n        <div className=\"checkout-address-section-center\">\n          <div className=\"row\">\n            <div className=\"col-md-4 mt-3 address-item\">\n              <div\n                className=\"checkout-address-box create-address\"\n                onClick={() => createNewAddress(false)}\n              >\n                <BsPlusCircle style={{ fontSize: \"50px\" }} />\n                <p style={{ fontSize: \"13px\" }}>Create new address</p>\n              </div>\n            </div>\n            {Address.deliveryAddresses.length > 0 ? (\n              Address.deliveryAddresses.map((item, index) => {\n                return (\n                  <div\n                    className={`col-md-4 mt-3 address-item ${\n                      selectedAddress !== undefined &&\n                      item._id === selectedAddress._id &&\n                      \"selected-address\"\n                    }`}\n                    key={index}\n                  >\n                    <section>\n                      <span\n                        style={{ fontSize: \"12px\" }}\n                        className=\"address-header\"\n                      >\n                        {item.addressHeader.length > 12\n                          ? `${item.addressHeader.substring(0, 12)}...`\n                          : item.addressHeader}\n                      </span>\n                      <div>\n                        <button\n                          className=\"address-edit-btn\"\n                          onClick={() => editAddress(item, false)}\n                        >\n                          <BsPencil />\n                        </button>\n                        <button\n                          className=\"address-edit-btn\"\n                          onClick={() => removeAddress(item._id, false)}\n                        >\n                          <BsTrash />\n                        </button>\n                      </div>\n                    </section>\n                    <div\n                      className=\"checkout-address-box\"\n                      onClick={() => selectAddress(item, index)}\n                    >\n                      <p>\n                        {item.name} {item.surname}\n                      </p>\n                      <p>{item.phoneNumber}</p>\n                      <p>{item.email}</p>\n                      <p>\n                        {item.address.length > 47\n                          ? `${item.address.substring(0, 47)}...`\n                          : item.address}\n                      </p>\n                    </div>\n                  </div>\n                );\n              })\n            ) : (\n              <span className=\"text-muted d-inline\">\n                Add an address to order\n              </span>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"checkout-address-section\">\n        <div className=\"checkout-address-section-top\">\n          <span>Billing Address</span>\n        </div>\n\n        <div className=\"checkout-address-section-center\">\n          <div className=\"row\">\n            <div className=\"col-md-4 mt-3 address-item\">\n              <div\n                className=\"checkout-address-box create-address\"\n                onClick={() => createNewAddress(true)}\n              >\n                <BsPlusCircle style={{ fontSize: \"50px\" }} />\n                <p style={{ fontSize: \"13px\" }}>Create new address</p>\n              </div>\n            </div>\n            {Address.billingAddresses.length > 0 ? (\n              Address.billingAddresses.map((item, index) => {\n                return (\n                  <div\n                    className={`col-md-4 mt-3 address-item ${\n                      selectedBillingAddress !== undefined &&\n                      item._id === selectedBillingAddress._id &&\n                      \"selected-address\"\n                    }`}\n                    key={index}\n                  >\n                    <section>\n                      <span\n                        style={{ fontSize: \"12px\" }}\n                        className=\"address-header\"\n                      >\n                        {item.addressHeader.length > 12\n                          ? `${item.addressHeader.substring(0, 12)}...`\n                          : item.addressHeader}\n                      </span>\n                      <div>\n                        <button\n                          className=\"address-edit-btn\"\n                          onClick={() => editAddress(item, true)}\n                        >\n                          <BsPencil />\n                        </button>\n                        <button\n                          className=\"address-edit-btn\"\n                          onClick={() => removeAddress(item._id, true)}\n                        >\n                          <BsTrash />\n                        </button>\n                      </div>\n                    </section>\n                    <div\n                      className=\"checkout-address-box\"\n                      onClick={() => selectBillingAddress(item)}\n                    >\n                      <p>\n                        {item.name} {item.surname}\n                      </p>\n                      <p>{item.phoneNumber}</p>\n                      <p>{item.email}</p>\n                      <p>\n                        {item.address.length > 47\n                          ? `${item.address.substring(0, 47)}...`\n                          : item.address}\n                      </p>\n                    </div>\n                  </div>\n                );\n              })\n            ) : (\n              <span className=\"text-muted d-inline\">\n                Add an billing address to order\n              </span>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CheckoutAddress;\n","/home/guney/RalShop/frontend/src/components/profileSettings.js",[],"/home/guney/RalShop/frontend/src/components/sellerNavbar.js",[],"/home/guney/RalShop/frontend/src/utils/helpers.js",[],"/home/guney/RalShop/frontend/src/data/category.js",[],"/home/guney/RalShop/frontend/src/data/countries.js",[],"/home/guney/RalShop/frontend/src/components/fullscreenImage.js",[],"/home/guney/RalShop/frontend/src/redux/actions/productReviewActions.js",[],"/home/guney/RalShop/frontend/src/components/ProductDescription.js",[],"/home/guney/RalShop/frontend/src/components/ProductLocation.js",[],"/home/guney/RalShop/frontend/src/redux/reducers/addressReducer.js",[],"/home/guney/RalShop/frontend/src/components/stripeCheckoutForm.js",["510"],"import React, { useState, useEffect } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport LoadingIcon from \"../assets/loading.gif\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { createOrder } from \"../redux/actions/orderActions\";\n\nconst Labels = styled.label`\n  font-size: 15px;\n`;\nconst InputField = styled.input`\n  padding: 9px 12px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 100%;\n`;\n\nexport default function CheckoutForm() {\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const [billingEmail, setBillingEmail] = useState(\"\");\n  const [customerId, setCustomerId] = useState(\"\");\n  const [paymentIntentId, setPaymentIntentId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const Address = useSelector((state) => state.Address.selectedDeliveryAddress);\n  const BillingAddress = useSelector(\n    (state) => state.Address.selectedBillingAddress\n  );\n  const cartProducts = useSelector((state) => state.Cart.products);\n  const User = useSelector((state) => state.Auth.user);\n  const stripe = useStripe();\n  const elements = useElements();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    window\n      .fetch(\"/api/stripe/create-payment-intent\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"user-token\": localStorage.getItem(\"user-token\"),\n        },\n        body: JSON.stringify({\n          items: cartProducts.filter((product) => product.selected === true),\n          shippingFee: 4.99,\n          shippingAddress: {\n            address: {\n              city: Address.city,\n              country: Address.country,\n              line1: Address.address,\n              postal_code: \"35890\",\n              state: Address.state,\n            },\n            name: `${Address.name} ${Address.surname}`,\n            phone: Address.phoneNumber,\n          },\n          address: {\n            line1: BillingAddress.address,\n            postal_code: \"34890\",\n            state: BillingAddress.state,\n            country: BillingAddress.country,\n            city: BillingAddress.city,\n          },\n          email: BillingAddress.email,\n          name: `${BillingAddress.name} ${BillingAddress.surname}`,\n          phone: BillingAddress.phoneNumber,\n        }),\n      })\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        setClientSecret(data.clientSecret);\n        setCustomerId(data.customer);\n        setPaymentIntentId(data.paymentIntentId);\n      });\n  }, []);\n\n  const cardStyle = {\n    hidePostalCode: true,\n    style: {\n      base: {\n        fontFamily: \"Arial, sans-serif\",\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\",\n        },\n      },\n      invalid: {\n        color: \"#333333\",\n        iconColor: \"#fa755a\",\n      },\n    },\n  };\n  const handleChange = async (event) => {\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n  const handleSubmit = async (ev) => {\n    ev.preventDefault();\n    setProcessing(true);\n\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      receipt_email: billingEmail,\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          name,\n          phone: BillingAddress.phoneNumber,\n          email: billingEmail,\n          address: {\n            line1: BillingAddress.address,\n            postal_code: \"34890\",\n            state: BillingAddress.state,\n            country: BillingAddress.country,\n            city: BillingAddress.city,\n          },\n        },\n      },\n    });\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      axios\n        .post(\n          \"/api/stripe/create-invoice\",\n          {\n            items: cartProducts.filter((product) => product.selected === true),\n            paymentIntentId,\n            customerId,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"user-token\": localStorage.getItem(\"user-token\"),\n            },\n          }\n        )\n        .then((res) => res.data)\n        .then((data) => {\n          setError(null);\n          setProcessing(false);\n          setSucceeded(true);\n          setSuccessMessage(\"Payment Succeeded. Creating Order...\");\n\n          const orderedProducts = cartProducts.filter(\n            (product) => product.selected === true\n          );\n          let total_amount = 0;\n          let orderedProductCount = 0;\n          let groupId = uuidv4();\n          orderedProducts.forEach(\n            (item) => (total_amount += item.price * item.qty)\n          );\n\n          orderedProducts.forEach((item) => {\n            const orderData = {\n              billingAddress: BillingAddress,\n              deliveryAddress: Address,\n              user: User._id,\n              invoiceId: data,\n              paymentIntentId,\n              seller: item.seller,\n              Product: {\n                product: item.product,\n                color: item.color,\n                quantity: item.qty,\n              },\n              totalAmount: total_amount + 4.99,\n              groupId,\n            };\n            dispatch(createOrder(orderData));\n            orderedProductCount++;\n          });\n\n          if (orderedProductCount === orderedProducts.length) {\n            setSuccessMessage(\"Products Ordered. Redirecting...\");\n            setTimeout(() => {\n              history.push(\"/user/orders\");\n            }, [1000]);\n          }\n        })\n        .catch((err) => {\n          setError(null);\n          setProcessing(false);\n          setSucceeded(false);\n        });\n    }\n  };\n\n  return (\n    <form id=\"payment-form\" onSubmit={handleSubmit} className=\"mt-3\">\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <Labels htmlFor=\"billingEmail\">\n            Card Holder Email (Email address of the card owner)*\n          </Labels>\n          <InputField\n            type=\"email\"\n            id=\"billingEmail\"\n            value={billingEmail}\n            onChange={(e) => setBillingEmail(e.target.value)}\n            placeholder=\"Enter email address of the card owner\"\n            required\n          />\n          <Labels htmlFor=\"name\" className=\"mt-3\">\n            Card Holder Name (Name on the card)*\n          </Labels>\n          <InputField\n            type=\"text\"\n            id=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"Enter the name on the card\"\n            required\n          />\n        </div>\n        <div className=\"col-lg-6 card-information-section\">\n          <CardElement\n            id=\"card-element\"\n            options={cardStyle}\n            onChange={handleChange}\n            className=\"mt-3\"\n          />\n        </div>\n      </div>\n      <button\n        disabled={processing || disabled || succeeded}\n        id=\"submit\"\n        className=\"default-btn\"\n      >\n        <span id=\"button-text\">Pay now</span>\n      </button>\n      {successMessage && (\n        <div className=\"text-success\" style={{ fontWeight: \"bold\" }}>\n          {successMessage}\n        </div>\n      )}\n      {processing && (\n        <img src={LoadingIcon} alt=\"Loading...\" height=\"50\" width=\"50\" />\n      )}\n      {error && (\n        <div className=\"card-error text-danger\" role=\"alert\">\n          {error}\n        </div>\n      )}\n    </form>\n  );\n}\n","/home/guney/RalShop/frontend/src/redux/actions/addressActions.js",[],"/home/guney/RalShop/frontend/src/redux/reducers/wishlistReducer.js",["511","512"],"import {\n  ADD_WISHLIST,\n  GET_WISHLIST,\n  REMOVE_ALL_WISHLIST,\n  REMOVE_WISHLIST,\n  LOADING,\n  WISHLIST_ERROR,\n} from \"../actions/types\";\n\nconst initialState = {\n  products:\n    localStorage.getItem(\"Wishlist\") !== null\n      ? JSON.parse(localStorage.getItem(\"Wishlist\"))\n      : [],\n  error: { message: null, status: null },\n  loading: true,\n};\n\nexport const Wishlist = (state = initialState, action) => {\n  let tempList = [];\n  let isDuplicate = false;\n\n  switch (action.type) {\n    case GET_WISHLIST:\n      return { ...state, loading: false, products: action.payload };\n    case ADD_WISHLIST:\n      state.products.map((item) => {\n        if (item._id === action.payload._id) {\n          isDuplicate = true;\n        }\n      });\n\n      if (!isDuplicate) {\n        tempList = [action.payload, ...state.products];\n      } else {\n        tempList = [...state.products];\n      }\n\n      return {\n        ...state,\n        products: tempList,\n        error: { message: null, status: null },\n        loading: false,\n      };\n    case REMOVE_WISHLIST:\n      return {\n        ...state,\n        products: [\n          ...state.products.filter((item) => item._id != action.payload),\n        ],\n        error: { message: null, status: null },\n        loading: false,\n      };\n    case REMOVE_ALL_WISHLIST:\n      return {\n        ...state,\n        products: [],\n        error: { message: null, status: null },\n        loading: false,\n      };\n    case WISHLIST_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: {\n          message: action.payload.message,\n          status: action.payload.status,\n        },\n      };\n    case LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n};\n","/home/guney/RalShop/frontend/src/redux/reducers/CartReducer.js",[],"/home/guney/RalShop/frontend/src/redux/reducers/chatReducer.js",[],"/home/guney/RalShop/frontend/src/redux/reducers/productReducer.js",[],"/home/guney/RalShop/frontend/src/redux/reducers/errorReducer.js",[],"/home/guney/RalShop/frontend/src/redux/reducers/authReducer.js",[],"/home/guney/RalShop/frontend/src/redux/reducers/productReviewReducer.js",[],"/home/guney/RalShop/frontend/src/redux/reducers/sellerReducer.js",[],"/home/guney/RalShop/frontend/src/components/profilePageNavbar.js",[],"/home/guney/RalShop/frontend/src/components/profilePageReviewsSection.js",["513"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { deleteReview } from \"../redux/actions/authActions\";\nimport Modal from \"./messageBox\";\nimport Styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { BsStarFill, BsStar } from \"react-icons/bs\";\nimport moment from \"moment\";\n\nconst ReviewItem = Styled.div`\n  border-bottom: 1.2px solid #dedede;\n  margin-bottom: 15px;\n`;\nconst DateText = Styled.p`\n  color: var(--text-muted);\n  font-size: 14px;\n  margin-top: -5px;\n`;\nconst BoxHeaderText = Styled.span`\n  font-size: 14px;\n  font-weight: bold;\n`;\n\nconst ProfilePageReviewsSection = ({ setIsEmpty, isEmpty }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [reviewId, setReviewId] = useState();\n  const { reviews } = useSelector((state) => state.Auth);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (reviews === null || reviews.length < 1) {\n      setIsEmpty(true);\n    } else {\n      setIsEmpty(false);\n    }\n  }, [reviews]);\n\n  const openModal = (id) => {\n    setReviewId(id);\n    setIsModalOpen(true);\n  };\n\n  if (isEmpty) {\n    return <h4>No Reviews Added</h4>;\n  }\n  return (\n    <>\n      <div\n        className=\"checkout-address-section-top w-100\"\n        style={{ position: \"absolute\", top: \"0\", left: \"0\" }}\n      >\n        <BoxHeaderText>{reviews.length} Reviews</BoxHeaderText>\n      </div>\n      {isModalOpen && (\n        <Modal\n          isRedux={true}\n          action={deleteReview}\n          message=\"Do You Want To Delete This Review?\"\n          setIsModalOpen={setIsModalOpen}\n          header=\"Delete Review\"\n          btnText=\"Delete\"\n          param={reviewId}\n        />\n      )}\n\n      {reviews !== null &&\n        reviews.map((review, index) => {\n          return (\n            <ReviewItem\n              key={index}\n              style={index === 0 ? { marginTop: \"35px\" } : {}}\n            >\n              <span\n                style={{ fontWeight: \"bold\", cursor: \"pointer\" }}\n                onClick={() =>\n                  history.push(\n                    `/product/${review.productId._id}/#${review._id}`\n                  )\n                }\n              >\n                {review.productId.title}\n              </span>\n              <p\n                style={{\n                  display: \"block\",\n                  marginTop: \"-3px\",\n                }}\n              >\n                {Array.from({ length: 5 }, (_, index) => {\n                  const number = index + 0.5;\n                  return (\n                    <span key={index} style={{ fontSize: \"15px\" }}>\n                      {review.rating > number ? (\n                        <BsStarFill style={{ color: \"rgb(255, 215, 0)\" }} />\n                      ) : (\n                        <BsStar style={{ color: \"rgb(255, 215, 0)\" }} />\n                      )}\n                    </span>\n                  );\n                })}\n              </p>\n              <p>{review.text}</p>\n              <section style={{ display: \"flex\" }}>\n                <DateText>\n                  {moment(review.productId.createdAt).format(\"ll\")}\n                </DateText>\n                <p\n                  style={{\n                    fontSize: \"14px\",\n                    marginTop: \"-5px\",\n                    marginLeft: \"15px\",\n                    cursor: \"pointer\",\n                    color: \"var(--text-muted)\",\n                  }}\n                  onClick={() => openModal(review._id)}\n                >\n                  Delete\n                </p>\n              </section>\n            </ReviewItem>\n          );\n        })}\n    </>\n  );\n};\n\nexport default ProfilePageReviewsSection;\n","/home/guney/RalShop/frontend/src/components/profilePageAddressSection.js",["514","515"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAddresses, deleteAddress } from \"../redux/actions/addressActions\";\nimport { BsPencil, BsTrash } from \"react-icons/bs\";\nimport AddressModal from \"../components/AddressModal\";\nimport Styled from \"styled-components\";\n\nconst BoxHeaderText = Styled.span`\n  font-size: 14px;\n  font-weight: bold;\n`;\n\nconst ProfilePageAddressSection = ({ setIsEmpty, isEmpty }) => {\n  const dispatch = useDispatch();\n  const { deliveryAddresses, billingAddresses, loading, error } = useSelector(\n    (state) => state.Address\n  );\n  const [isEditModalActive, setIsEditModalActive] = useState(false);\n  const [editedItem, setEditedItem] = useState();\n  const [isBillingAddress, setIsBillingAddress] = useState(false);\n\n  useEffect(() => {\n    dispatch(getAddresses());\n  }, []);\n\n  useEffect(() => {\n    if (deliveryAddresses.length < 1 && billingAddresses.length < 1) {\n      setIsEmpty(true);\n    } else {\n      setIsEmpty(false);\n    }\n  }, [deliveryAddresses, billingAddresses]);\n\n  function editAddress(item, billingAddresses) {\n    setIsEditModalActive(true);\n    setEditedItem(item);\n    setIsBillingAddress(billingAddresses);\n  }\n\n  function removeAddress(id, isBilling) {\n    dispatch(deleteAddress(id, isBilling));\n  }\n\n  if (isEmpty) {\n    return <h4>No Address Added</h4>;\n  }\n\n  return (\n    <div>\n      {\" \"}\n      <div\n        className=\"checkout-address-section-top w-100\"\n        style={{ position: \"absolute\", top: \"0\", left: \"0\" }}\n      >\n        <BoxHeaderText>\n          {billingAddresses.length + deliveryAddresses.length} Addresses\n        </BoxHeaderText>\n      </div>\n      <div className=\"checkout-address-section\" style={{ marginTop: \"35px\" }}>\n        <div className=\"checkout-address-section-top\">\n          <span>Delivery Addresses</span>\n        </div>\n        {isEditModalActive && (\n          <AddressModal\n            setIsModalActive={setIsEditModalActive}\n            isEdit={true}\n            selectedAddress={editedItem}\n            isBillingAddress={isBillingAddress}\n          />\n        )}\n        {loading && (\n          <>\n            <span className=\"text-muted\">Loading...</span>\n            <br />\n          </>\n        )}\n        {error && (\n          <>\n            <span className=\"text-danger\">{error.msg}</span>\n            <br />\n          </>\n        )}\n        <div className=\"checkout-address-section-center\">\n          <div className=\"row\">\n            {deliveryAddresses.length > 0 &&\n              deliveryAddresses.map((item, index) => {\n                return (\n                  <div className=\"col-md-4 mt-3 ml-3 address-item\" key={index}>\n                    <section>\n                      <span\n                        style={{ fontSize: \"12px\" }}\n                        className=\"address-header\"\n                      >\n                        {item.addressHeader.length > 12\n                          ? `${item.addressHeader.substring(0, 12)}...`\n                          : item.addressHeader}\n                      </span>\n                      <div>\n                        <button\n                          className=\"address-edit-btn\"\n                          onClick={() => editAddress(item, false)}\n                        >\n                          <BsPencil />\n                        </button>\n                        <button\n                          className=\"address-edit-btn\"\n                          onClick={() => removeAddress(item._id, false)}\n                        >\n                          <BsTrash />\n                        </button>\n                      </div>\n                    </section>\n                    <div className=\"checkout-address-box\">\n                      <p>\n                        {item.name} {item.surname}\n                      </p>\n                      <p>{item.phoneNumber}</p>\n                      <p>{item.email}</p>\n                      <p>\n                        {item.address.length > 47\n                          ? `${item.address.substring(0, 47)}...`\n                          : item.address}\n                      </p>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n      <div className=\"checkout-address-section\">\n        <div className=\"checkout-address-section-top\">\n          <span>Billing Addresses</span>\n        </div>\n        {isEditModalActive && (\n          <AddressModal\n            setIsModalActive={setIsEditModalActive}\n            isEdit={true}\n            selectedAddress={editedItem}\n            isBillingAddress={isBillingAddress}\n          />\n        )}\n        {loading && (\n          <>\n            <span className=\"text-muted\">Loading...</span>\n            <br />\n          </>\n        )}\n        {error && (\n          <>\n            <span className=\"text-danger\">{error.msg}</span>\n            <br />\n          </>\n        )}\n        <div className=\"checkout-address-section-center\">\n          <div className=\"row\">\n            {billingAddresses.length > 0 &&\n              billingAddresses.map((item, index) => {\n                return (\n                  <div className=\"col-md-4 mt-3 ml-3 address-item\" key={index}>\n                    <section>\n                      <span\n                        style={{ fontSize: \"12px\" }}\n                        className=\"address-header\"\n                      >\n                        {item.addressHeader.length > 12\n                          ? `${item.addressHeader.substring(0, 12)}...`\n                          : item.addressHeader}\n                      </span>\n                      <div>\n                        <button\n                          className=\"address-edit-btn\"\n                          onClick={() => editAddress(item, true)}\n                        >\n                          <BsPencil />\n                        </button>\n                        <button\n                          className=\"address-edit-btn\"\n                          onClick={() => removeAddress(item._id, true)}\n                        >\n                          <BsTrash />\n                        </button>\n                      </div>\n                    </section>\n                    <div className=\"checkout-address-box\">\n                      <p>\n                        {item.name} {item.surname}\n                      </p>\n                      <p>{item.phoneNumber}</p>\n                      <p>{item.email}</p>\n                      <p>\n                        {item.address.length > 47\n                          ? `${item.address.substring(0, 47)}...`\n                          : item.address}\n                      </p>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePageAddressSection;\n","/home/guney/RalShop/frontend/src/components/profilePageOrderSection.js",["516"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LoadingIcon from \"../assets/loading.gif\";\nimport styled from \"styled-components\";\nimport { priceConverter } from \"../utils/helpers\";\nimport moment from \"moment\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  MdKeyboardArrowDown,\n  MdKeyboardArrowUp,\n  MdInfoOutline,\n} from \"react-icons/md\";\nimport { TiTick, TiCancel } from \"react-icons/ti\";\nimport { FcPackage, FcShipped } from \"react-icons/fc\";\nimport { MdLocalShipping } from \"react-icons/md\";\nimport OrderDetailsModal from \"./orderDetailsModal\";\nimport SellerDetailsModal from \"./sellerDetailsModal\";\nimport ReactStars from \"react-rating-stars-component\";\nimport {\n  rateSeller,\n  deleteSellerRating,\n} from \"../redux/actions/rateSellerActions\";\nimport { orderCancelRequest } from \"../redux/actions/orderActions\";\nimport Modal from \"./messageBox\";\n\nconst OrderBox = styled.div`\n  border: 1px solid #dbdbdb;\n`;\nconst OrderBoxTop = styled.div`\n  border-bottom: 1.3px solid #dbdbdb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst BoxHeaderText = styled.span`\n  font-size: 14px;\n  font-weight: bold;\n`;\nconst OrderHighlight = styled.span`\n  font-size: 14px;\n`;\nconst OrderItem = styled.div`\n  border: 1px solid #dbdbdb;\n  border-radius: 3px;\n  width: 82%;\n  margin: auto;\n  margin-top: 15px;\n  margin-bottom: 10px;\n  padding: 3px 8px;\n  height: 290px;\n  position: relative;\n  @media (max-width: 375px) {\n    width: 98%;\n  }\n  @media (max-width: 1000px) {\n    height: 320px;\n  }\n  @media (max-width: 767px) {\n    width: 94%;\n    height: 265px;\n  }\n  @media (max-width: 500px) {\n    height: 280px;\n  }\n  @media (max-width: 375px) {\n    width: 96%;\n    height: 300px;\n  }\n  @media (max-width: 360px) {\n    height: 320px;\n  }\n`;\nconst OrderItemImage = styled.img`\n  width: 100%;\n  height: 120px;\n  object-fit: contain;\n`;\nconst OrderItemTitle = styled.p`\n  font-size: 14px;\n  color: var(--text-muted);\n  margin-top: 5px;\n`;\nconst OrderItemPrice = styled.p`\n  font-size: 15px;\n  font-weight: bold;\n  margin-top: -12px;\n`;\nconst OrderItemColorAndQty = styled.span`\n  display: inline-block;\n  font-size: 13.5px;\n  font-weight: normal;\n  position: relative;\n  bottom: 2px;\n  color: var(--text-muted);\n`;\nconst ColorPreview = styled.span`\n  height: 15px;\n  width: 15px;\n  border-radius: 50%;\n  cursor: pointer;\n  display: inline-block;\n  margin: 1px;\n  border: 1px solid black;\n  position: relative;\n  top: 2.5px;\n  left: 3px;\n`;\nconst OrderItemBottom = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  font-size: 13px;\n  border-top: 1px solid #dbdbdb;\n  @media (max-width: 400px) {\n    font-size: 13px;\n  }\n`;\nconst OrderItemOptions = styled.span`\n  cursor: pointer;\n  user-select: none;\n  padding: 5px;\n  width: 33%;\n  text-align: center;\n  transition: 0.3s;\n  &:hover {\n    background: #dbdbdb;\n  }\n  @media (max-width: 1000px) {\n    padding: 3px;\n  }\n  @media (max-width: 400px) {\n    padding: 3px;\n  }\n`;\nconst OrderBoxSettings = styled.div`\n  padding: 5px 5px;\n  padding-bottom: 0;\n  margin-bottom: 0;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  @media (max-width: 360px) {\n    padding: 0px;\n    padding-top: 8px;\n  }\n`;\nconst OrderBoxSettingsItem = styled.p`\n  padding: 0;\n  margin: 0;\n  margin-right: 10px;\n  font-size: 14px;\n  color: var(--text-muted);\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n  @media (max-width: 360px) {\n    margin-right: 5px;\n  }\n  @media (max-width: 335px) {\n    font-size: 13px;\n  }\n`;\nconst ShowOrderButton = styled.button`\n  border: none;\n  background: none;\n  font-weight: bold;\n  font-size: 15px;\n  margin: 0;\n  padding: 0;\n  padding-left: 8px;\n  &:focus {\n    outline: 0;\n  }\n  @media (max-width: 460px) {\n    font-size: 13px;\n    margin-right: -10px;\n  }\n`;\nconst Row = styled.div`\n  padding: 3px 8px;\n  max-height: 0;\n  overflow: hidden;\n  -webkit-transition: max-height 0.8s;\n  -moz-transition: max-height 0.8s;\n  transition: max-height 0.8s;\n  transition-delay: 0;\n`;\nconst WebsiteLink = styled.a`\n  text-decoration: none;\n`;\nconst RateSellerStars = styled.div`\n  display: none;\n  position: absolute;\n  bottom: 29px;\n  left: 0px;\n  background: white;\n  border: 1px solid #dbdbdb;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n  padding: 10px;\n  min-width: 100%;\n  width: 140px;\n  font-size: 12px;\n  cursor: auto;\n\n  @media (max-width: 793px) {\n    bottom: 45px;\n  }\n  @media (max-width: 766px) {\n    bottom: 30px;\n  }\n`;\nconst RateSellerSection = styled.div`\n  position: relative;\n  padding: 5px;\n  &:hover ${RateSellerStars} {\n    display: block;\n  }\n`;\nconst RateSellerText = styled.span``;\nconst RateSellersStarsTop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  text-align: left;\n  border-bottom: 1px solid #dbdbdb;\n`;\n\nconst ProfilePageOrderSection = ({ setIsEmpty, isEmpty }) => {\n  const dispatch = useDispatch();\n  const { user } = useSelector((state) => state.Auth);\n  const { orders, loading: isLoading } = useSelector((state) => state.Order);\n  const { ratedSellers, loading, error } = useSelector(\n    (state) => state.RateSeller\n  );\n  const [isDisplayingRateError, setIsDisplayingRateError] = useState(false);\n  const [visibleOrder, setVisibleOrder] = useState(\"\");\n  const [isOrderDetailsModalOpen, setIsOrderDetailsModalOpen] = useState(false);\n  const [isSellerDetailsModalOpen, setIsSellerDetailsModalOpen] =\n    useState(false);\n  const [isCancelOrderModalOpen, setIsCancelOrderModalOpen] = useState(false);\n  const [sellerDetail, setSellerDetail] = useState(\"\");\n  const [orderDetailsGroupId, setOrderDetailsGroupId] = useState(\"\");\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (Object.keys(orders).length < 1) setIsEmpty(true);\n    if (Object.keys(orders).length > 0) setIsEmpty(false);\n  }, [orders]);\n\n  useEffect(() => {\n    setIsDisplayingRateError(true);\n    setTimeout(() => setIsDisplayingRateError(false), 1500);\n  }, [error]);\n\n  const productReviewsLink = (productId) => {\n    history.push(`/product/${productId}/#reviews`);\n  };\n  const openOrderDetailsModal = (groupId) => {\n    setOrderDetailsGroupId(groupId);\n    setIsOrderDetailsModalOpen(true);\n  };\n  const openSellerDetailsModal = (seller) => {\n    setSellerDetail(seller);\n    setIsSellerDetailsModalOpen(true);\n  };\n  const RateSeller = (val, orderItem) => {\n    dispatch(\n      rateSeller({\n        rating: val,\n        seller: orderItem.order.seller._id,\n        user: user._id,\n      })\n    );\n  };\n  const isSellerRated = (orderItem) => {\n    const ratedItem = ratedSellers.filter(\n      (item) => item.seller === orderItem.order.seller._id\n    );\n\n    if (ratedItem.length > 0) {\n      return ratedItem[0].rating;\n    } else {\n      return 0;\n    }\n  };\n  const cancelOrder = (groupId) => {\n    setOrderDetailsGroupId(groupId);\n    setIsCancelOrderModalOpen(true);\n  };\n  const showCancelButton = (key) => {\n    return orders[key][0].order.status === \"delivered\" ||\n      orders[key][0].order.status === \"cancelRequest\" ||\n      orders[key][0].order.status === \"cancelled\"\n      ? false\n      : true;\n  };\n\n  if (isEmpty) {\n    return (\n      <div>\n        {isLoading ? (\n          <img\n            src={LoadingIcon}\n            alt=\"loading gif\"\n            height=\"70\"\n            width=\"70\"\n            style={{ display: \"block\", margin: \"auto\" }}\n          />\n        ) : (\n          <h4>No Orders Added</h4>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {isOrderDetailsModalOpen && (\n        <OrderDetailsModal\n          setIsOrderDetailsModalOpen={setIsOrderDetailsModalOpen}\n          orderGroup={orders[orderDetailsGroupId]}\n        />\n      )}\n      {isSellerDetailsModalOpen && (\n        <SellerDetailsModal\n          Seller={sellerDetail}\n          closeModal={setIsSellerDetailsModalOpen}\n        />\n      )}\n      {isCancelOrderModalOpen && (\n        <Modal\n          isRedux={true}\n          action={orderCancelRequest}\n          message=\"You will get refunded, if seller confirms your cancel request. This action is irreversible. Do you want to cancel your order?\"\n          setIsModalOpen={setIsCancelOrderModalOpen}\n          header=\"Cancel Order\"\n          btnText=\"Cancel Order\"\n          param={orderDetailsGroupId}\n        />\n      )}\n      <div\n        className=\"checkout-address-section-top w-100\"\n        style={{ position: \"absolute\", top: \"0\", left: \"0\" }}\n      >\n        <BoxHeaderText>{Object.keys(orders).length} Orders</BoxHeaderText>\n      </div>\n      {isLoading && (\n        <img\n          src={LoadingIcon}\n          alt=\"loading gif\"\n          height=\"45\"\n          width=\"45\"\n          style={{ display: \"block\", marginBottom: \"-30px\", marginTop: \"20px\" }}\n        />\n      )}\n      {Object.keys(orders).map((order, index) => {\n        return (\n          <div key={index}>\n            <OrderBox\n              className=\"checkout-address-section\"\n              style={index === 0 ? { marginTop: \"35px\" } : {}}\n            >\n              <OrderBoxTop className=\"checkout-address-section-top\">\n                <OrderHighlight>\n                  <span style={{ fontWeight: \"bold\" }}>\n                    {orders[order].length}\n                  </span>{\" \"}\n                  products, on{\" \"}\n                  <span style={{ fontWeight: \"bold\" }}>\n                    {moment(orders[order][0].order.createdAt).format(\"ll\")}\n                  </span>\n                  , paid:{\" \"}\n                  <span style={{ fontWeight: \"bold\" }}>\n                    {priceConverter(orders[order][0].order.totalAmount)}\n                  </span>\n                </OrderHighlight>\n                {visibleOrder !== order ? (\n                  <ShowOrderButton onClick={() => setVisibleOrder(order)}>\n                    Show <MdKeyboardArrowDown style={{ fontSize: \"20px\" }} />\n                  </ShowOrderButton>\n                ) : (\n                  <ShowOrderButton onClick={() => setVisibleOrder(\"\")}>\n                    Hide <MdKeyboardArrowUp style={{ fontSize: \"20px\" }} />\n                  </ShowOrderButton>\n                )}\n              </OrderBoxTop>\n              <OrderBoxSettings>\n                <OrderBoxSettingsItem\n                  onClick={() => openOrderDetailsModal(order)}\n                >\n                  <b>Order Details</b>\n                </OrderBoxSettingsItem>\n                <WebsiteLink\n                  href={orders[order][0].Payment.receipt_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <OrderBoxSettingsItem>View Receipt</OrderBoxSettingsItem>\n                </WebsiteLink>\n                {showCancelButton(order) && (\n                  <OrderBoxSettingsItem onClick={() => cancelOrder(order)}>\n                    Cancel Order\n                  </OrderBoxSettingsItem>\n                )}\n              </OrderBoxSettings>\n              <Row\n                className=\"row\"\n                style={{\n                  maxHeight: visibleOrder === order ? \"1000px\" : \"0\",\n                }}\n              >\n                {orders[order][0].order.note && (\n                  <span\n                    style={{ fontSize: \"14px\", color: \"var(--text-muted)\" }}\n                  >\n                    <span style={{ fontSize: \"20px\", color: \"black\" }}>\n                      <b>\n                        <MdInfoOutline />\n                      </b>\n                    </span>{\" \"}\n                    {orders[order][0].order.note}\n                  </span>\n                )}\n                {orders[order].map((orderItem, idx) => {\n                  return (\n                    <div className=\"col-md-6\" key={idx}>\n                      <OrderItem>\n                        <Link\n                          to={`/product/${orderItem.order.Product.product._id}`}\n                        >\n                          <OrderItemImage\n                            src={orderItem.order.Product.product.images[0].url}\n                            alt=\"product\"\n                          />\n                        </Link>\n                        <OrderItemTitle>\n                          <span style={{ fontWeight: \"bold\", color: \"#333\" }}>\n                            {orderItem.order.seller.companyName}\n                          </span>{\" \"}\n                          {orderItem.order.Product.product.title.length > 55\n                            ? `${orderItem.order.Product.product.title.substring(\n                                0,\n                                55\n                              )}...`\n                            : orderItem.order.Product.product.title}\n                        </OrderItemTitle>\n                        <OrderItemPrice>\n                          {priceConverter(\n                            orderItem.order.Product.product.price\n                          )}{\" \"}\n                          -{\" \"}\n                          <OrderItemColorAndQty>\n                            qty: {orderItem.order.Product.quantity}\n                          </OrderItemColorAndQty>\n                          <ColorPreview\n                            style={{\n                              background: \"#\" + orderItem.order.Product.color,\n                            }}\n                          />\n                        </OrderItemPrice>\n                        <OrderItemPrice\n                          style={{\n                            fontSize: \"14px\",\n                          }}\n                        >\n                          <span\n                            style={{\n                              fontWeight: \"normal\",\n                            }}\n                          >\n                            {orderItem.order.status === \"waitingConfirmation\" &&\n                              \"Waiting confirmation by seller\"}\n                            {orderItem.order.status === \"cancelRequest\" &&\n                              \"Waiting confirmation by seller to confirm cancellation\"}\n                            {orderItem.order.status === \"confirmed\" && (\n                              <>\n                                <TiTick\n                                  style={{\n                                    fontSize: \"18px\",\n                                    color: \"black\",\n                                    fontWeight: \"bold\",\n                                  }}\n                                />{\" \"}\n                                Order confirmed by the seller\n                              </>\n                            )}\n                            {orderItem.order.status === \"cancelled\" && (\n                              <>\n                                <TiCancel\n                                  style={{\n                                    fontSize: \"18px\",\n                                    color: \"red\",\n                                    fontWeight: \"bold\",\n                                  }}\n                                />{\" \"}\n                                Order is cancelled\n                              </>\n                            )}\n                            {orderItem.order.status === \"packing\" && (\n                              <>\n                                <FcPackage /> Order is packing\n                              </>\n                            )}\n                            {orderItem.order.status === \"shipped\" && (\n                              <>\n                                <MdLocalShipping\n                                  style={{\n                                    fontSize: \"18px\",\n                                    fontWeight: \"bold\",\n                                  }}\n                                />{\" \"}\n                                Order is shipped\n                              </>\n                            )}\n                            {orderItem.order.status === \"delivered\" && (\n                              <>\n                                <FcShipped\n                                  style={{\n                                    fontSize: \"18px\",\n                                    fontWeight: \"bold\",\n                                  }}\n                                />{\" \"}\n                                Order is delivered\n                              </>\n                            )}\n                          </span>\n                        </OrderItemPrice>\n                        <OrderItemBottom>\n                          <OrderItemOptions\n                            style={{ borderRight: \"1px solid #dbdbdb\" }}\n                            onClick={() =>\n                              openSellerDetailsModal(orderItem.order.seller)\n                            }\n                          >\n                            Seller Details\n                          </OrderItemOptions>\n                          <OrderItemOptions\n                            style={{\n                              borderRight: \"1px solid #dbdbdb\",\n                              padding: \"0\",\n                            }}\n                          >\n                            <RateSellerSection>\n                              <RateSellerStars>\n                                <RateSellersStarsTop>\n                                  Rate Seller\n                                </RateSellersStarsTop>\n                                {loading && (\n                                  <img\n                                    src={LoadingIcon}\n                                    alt=\"loading icon spinning\"\n                                    height=\"40px\"\n                                    width=\"40px\"\n                                    style={{ marginTop: \"10px\" }}\n                                  />\n                                )}\n                                {error && isDisplayingRateError && (\n                                  <span className=\"text-danger\">{error}</span>\n                                )}\n                                {!loading && !isDisplayingRateError && (\n                                  <div\n                                    style={{\n                                      marginTop: \"10px\",\n                                      display: \"flex\",\n                                      alignItems: \"center\",\n                                      flexDirection: \"column\",\n                                    }}\n                                  >\n                                    <ReactStars\n                                      count={5}\n                                      a11y={false}\n                                      value={isSellerRated(orderItem)}\n                                      onChange={(val) =>\n                                        RateSeller(val, orderItem)\n                                      }\n                                      size={24}\n                                      activeColor=\"#ffd700\"\n                                      className=\"react-stars-seller-rating\"\n                                    />\n                                    {ratedSellers.find(\n                                      (item) =>\n                                        item.seller ===\n                                        orderItem.order.seller._id\n                                    ) && (\n                                      <span\n                                        style={{\n                                          display: \"inline-block\",\n                                          cursor: \"pointer\",\n                                          textDecoration: \"underline\",\n                                          color: \"var(--text-muted)\",\n                                        }}\n                                        onClick={() =>\n                                          dispatch(\n                                            deleteSellerRating(\n                                              ratedSellers.filter(\n                                                (item) =>\n                                                  item.seller ===\n                                                  orderItem.order.seller._id\n                                              )[0]._id,\n                                              orderItem.order.seller._id\n                                            )\n                                          )\n                                        }\n                                      >\n                                        Delete Rating\n                                      </span>\n                                    )}\n                                  </div>\n                                )}\n                              </RateSellerStars>\n                              <RateSellerText>Rate Seller</RateSellerText>\n                            </RateSellerSection>\n                          </OrderItemOptions>\n                          <OrderItemOptions\n                            onClick={() =>\n                              productReviewsLink(\n                                orderItem.order.Product.product._id\n                              )\n                            }\n                          >\n                            Rate Product\n                          </OrderItemOptions>\n                        </OrderItemBottom>\n                      </OrderItem>\n                    </div>\n                  );\n                })}\n              </Row>\n            </OrderBox>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ProfilePageOrderSection;\n","/home/guney/RalShop/frontend/src/redux/reducers/orderReducer.js",[],"/home/guney/RalShop/frontend/src/redux/actions/orderActions.js",["517"],"import {\n  CREATE_ORDER,\n  GET_ORDERS,\n  ORDER_ERROR,\n  ORDER_LOADING,\n  ORDER_CANCEL_REQUEST,\n} from \"./types\";\nimport axios from \"axios\";\n\nconst PREFIX = \"/api/order\";\n\nexport const createOrder = (data) => (dispatch) => {\n  dispatch({ type: ORDER_LOADING });\n\n  axios\n    .post(PREFIX, data, userTokenConfig())\n    .then((res) => res.data)\n    .then((data) => {\n      dispatch({ type: CREATE_ORDER, payload: data });\n    })\n    .catch((err) => {\n      dispatch({\n        type: ORDER_ERROR,\n        payload: {\n          msg: err.response.data.errorMessage,\n          status: err.response.status,\n        },\n      });\n    });\n};\n\nexport const getOrders = () => (dispatch) => {\n  dispatch({ type: ORDER_LOADING });\n\n  axios\n    .get(`${PREFIX}/user-orders`, userTokenConfig())\n    .then((res) => res.data)\n    .then((data) => {\n      dispatch({ type: GET_ORDERS, payload: data });\n    })\n    .catch((err) => {\n      dispatch({\n        type: ORDER_ERROR,\n        payload: {\n          msg: err.response.data.errorMessage,\n          status: err.response.status,\n        },\n      });\n    });\n};\n\nexport const orderCancelRequest = (groupId) => (dispatch) => {\n  dispatch({ type: ORDER_LOADING });\n\n  axios\n    .post(`${PREFIX}/cancel-request`, { groupId }, userTokenConfig())\n    .then((res) => res.data)\n    .then((data) => {\n      dispatch({\n        type: ORDER_CANCEL_REQUEST,\n        payload: { order: data, groupId },\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: ORDER_ERROR,\n        payload: {\n          msg: err.response.data.errorMessage,\n          status: err.response.status,\n        },\n      });\n    });\n};\n\nconst userTokenConfig = () => {\n  const token = localStorage.getItem(\"user-token\");\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  if (token) config.headers[\"user-token\"] = token;\n  return config;\n};\n\nconst sellerTokenConfig = () => {\n  const token = localStorage.getItem(\"shop-token\");\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  if (token) config.headers[\"shop-token\"] = token;\n  return config;\n};\n","/home/guney/RalShop/frontend/src/components/orderDetailsModal.js",["518"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { createChatroom } from \"../redux/actions/chatActions\";\nimport styled from \"styled-components\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { MdLocalShipping } from \"react-icons/md\";\nimport { FcShipped, FcPackage } from \"react-icons/fc\";\nimport { TiTick, TiCancel } from \"react-icons/ti\";\nimport { priceConverter } from \"../utils/helpers\";\nimport moment from \"moment\";\n\nconst FullPageBackground = styled.div`\n  position: fixed;\n  z-index: 99999999;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.4);\n`;\nconst ModalBox = styled.div`\n  background: white;\n  border-radius: 3px;\n  border: 1.3px solid #dbdbdb;\n  width: 80%;\n  overflow-x: hidden;\n  overflow-y: auto;\n  max-height: 90%;\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  &::-webkit-scrollbar-track {\n    background: #dddddd;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: #acaaaa;\n  }\n  &::-webkit-scrollbar-thumb:hover {\n    background: #c2c2c2;\n  }\n  @media (max-width: 430px) {\n    width: 100%;\n  }\n`;\nconst ModalBoxTop = styled.div`\n  padding: 3px 8px;\n  border-bottom: 1.3px solid #dbdbdb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  border-radius: 50%;\n  font-size: 24px;\n  transition: 0.3s;\n  &:focus {\n    outline: 0;\n  }\n  &:hover {\n    background: #dedede;\n  }\n`;\nconst ModalBoxTitle = styled.h5`\n  font-weight: bold;\n  margin: 0;\n  padding: 0;\n  margin-top: 2px;\n`;\nconst OrderDetailBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid #dbdbdb;\n  border-radius: 3px;\n  margin: 15px 20px;\n  padding: 8px 12px;\n  box-shadow: 0px 0px 7px 1px rgba(223, 223, 223, 0.49);\n  -webkit-box-shadow: 0px 0px 7px 1px rgba(223, 223, 223, 0.49);\n  -moz-box-shadow: 0px 0px 7px 1px rgba(223, 223, 223, 0.49);\n  @media (max-width: 500px) {\n    padding: 4px 10px;\n  }\n`;\nconst OrderItemPrice = styled.span`\n  display: block;\n  font-size: 14px;\n  text-align: center;\n  padding: 0;\n`;\nconst AddressBox = styled.div`\n  border: 1px solid #dbdbdb;\n  border-radius: 3px;\n  margin: 15px 20px;\n  margin-top: 5px;\n  height: 180px;\n  box-shadow: 0px 0px 7px 1px rgba(223, 223, 223, 0.49);\n  -webkit-box-shadow: 0px 0px 7px 1px rgba(223, 223, 223, 0.49);\n  -moz-box-shadow: 0px 0px 7px 1px rgba(223, 223, 223, 0.49);\n  overflow: hidden;\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  &::-webkit-scrollbar-track {\n    background: #dddddd;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: #acaaaa;\n  }\n  &::-webkit-scrollbar-thumb:hover {\n    background: #c2c2c2;\n  }\n`;\nconst AddressBoxTop = styled.div`\n  border-bottom: 1px solid #dbdbdb;\n  margin: 0;\n  padding: 5px 10px;\n  background: #efefef;\n  display: flex;\n  justify-content: space-between;\n`;\nconst AddressBoxInner = styled.div`\n  padding: 5px 10px;\n  font-size: 15px;\n  word-wrap: break-word;\n  whitespace: pre-wrap;\n  overflow: hidden;\n`;\nconst InnerItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-size: 15px;\n  color: var(--text-muted);\n  align-items: center;\n  padding-top: 3px;\n`;\nconst OrderItem = styled.div`\n  border: 1px solid #dbdbdb;\n  border-radius: 3px;\n  margin: auto;\n  margin-top: 15px;\n  margin-bottom: 10px;\n  padding: 3px 8px;\n  position: relative;\n`;\nconst OrderItemImage = styled.img`\n  width: 100%;\n  height: 70px;\n  object-fit: contain;\n`;\n\nconst OrderDetailsModal = ({ setIsOrderDetailsModalOpen, orderGroup }) => {\n  const dispatch = useDispatch();\n  const { inSellerRoute } = useSelector((state) => state.Seller);\n  const history = useHistory();\n\n  useEffect(() => {\n    window.addEventListener(\n      \"keydown\",\n      (e) => e.key === \"Escape\" && setIsOrderDetailsModalOpen(false)\n    );\n  }, [setIsOrderDetailsModalOpen]);\n\n  const communicateSeller = (shopId) => {\n    dispatch(createChatroom(shopId, inSellerRoute));\n    history.push(\"/chat\");\n  };\n\n  return (\n    <FullPageBackground>\n      <ModalBox>\n        <ModalBoxTop>\n          <ModalBoxTitle>Order Details</ModalBoxTitle>\n          <CloseButton onClick={() => setIsOrderDetailsModalOpen(false)}>\n            <FaTimes />\n          </CloseButton>\n        </ModalBoxTop>\n        <OrderDetailBox>\n          <div>\n            <OrderItemPrice style={{ color: \"var(--text-muted)\" }}>\n              <b>Date</b>\n            </OrderItemPrice>\n            <OrderItemPrice>\n              {moment(orderGroup[0].order.createdAt).format(\"ll\")}\n            </OrderItemPrice>\n          </div>\n          <div>\n            <OrderItemPrice style={{ color: \"var(--text-muted)\" }}>\n              <b>Products</b>\n            </OrderItemPrice>\n            <OrderItemPrice>{orderGroup.length} Items</OrderItemPrice>\n          </div>\n          <div>\n            <OrderItemPrice style={{ color: \"var(--text-muted)\" }}>\n              <b>Price</b>\n            </OrderItemPrice>\n            <OrderItemPrice>\n              {priceConverter(orderGroup[0].order.totalAmount)}\n            </OrderItemPrice>\n          </div>\n        </OrderDetailBox>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <AddressBox>\n              <AddressBoxTop>\n                <p style={{ margin: \"0\" }}>\n                  <b>Delivery Address</b>\n                </p>\n              </AddressBoxTop>\n              <AddressBoxInner>\n                <span>\n                  {orderGroup[0].order.deliveryAddress.name}{\" \"}\n                  {orderGroup[0].order.deliveryAddress.surname}\n                </span>\n                <br />\n                <span style={{ fontSize: \"14px\", color: \"var(--text-muted)\" }}>\n                  {orderGroup[0].order.deliveryAddress.state}/\n                  {orderGroup[0].order.deliveryAddress.city} -{\" \"}\n                  {orderGroup[0].order.deliveryAddress.country}\n                </span>\n                <br />\n                <span style={{ fontSize: \"14px\", color: \"var(--text-muted)\" }}>\n                  {orderGroup[0].order.deliveryAddress.phoneNumber}\n                </span>\n                <br />\n                <span style={{ fontSize: \"14px\", color: \"var(--text-muted)\" }}>\n                  {orderGroup[0].order.deliveryAddress.email}\n                </span>\n                <br />\n                <span style={{ fontSize: \"14px\", color: \"var(--text-muted)\" }}>\n                  {orderGroup[0].order.deliveryAddress.address}\n                </span>\n              </AddressBoxInner>\n            </AddressBox>\n          </div>\n          <div className=\"col-md-6\">\n            <AddressBox>\n              <AddressBoxTop>\n                <p style={{ margin: \"0\" }}>\n                  <b>Billing Address</b>\n                </p>\n              </AddressBoxTop>\n              <AddressBoxInner>\n                <span>\n                  {orderGroup[0].order.billingAddress.name}{\" \"}\n                  {orderGroup[0].order.billingAddress.surname}\n                </span>\n                <br />\n                <span style={{ fontSize: \"14px\", color: \"var(--text-muted)\" }}>\n                  {orderGroup[0].order.billingAddress.state}/\n                  {orderGroup[0].order.billingAddress.city} -{\" \"}\n                  {orderGroup[0].order.billingAddress.country}\n                </span>\n                <br />\n                <span style={{ fontSize: \"14px\", color: \"var(--text-muted)\" }}>\n                  {orderGroup[0].order.billingAddress.phoneNumber}\n                </span>\n                <br />\n                <span style={{ fontSize: \"14px\", color: \"var(--text-muted)\" }}>\n                  {orderGroup[0].order.billingAddress.email}\n                </span>\n                <br />\n                <span style={{ fontSize: \"14px\", color: \"var(--text-muted)\" }}>\n                  {orderGroup[0].order.billingAddress.address}\n                </span>\n              </AddressBoxInner>\n            </AddressBox>\n          </div>\n          <div className=\"col-md-6\">\n            <AddressBox>\n              <AddressBoxTop>\n                <b>Payment Information</b>\n              </AddressBoxTop>\n              <AddressBoxInner>\n                <InnerItem style={{ borderBottom: \"1px solid #dbdbdb\" }}>\n                  <>\n                    Paid with{\" \"}\n                    {orderGroup[0].Payment.payment_method_details.type}{\" \"}\n                  </>\n                  <b style={{ color: \"#333\" }}>\n                    {orderGroup[0].Payment.payment_method_details.card.brand} -\n                    ****\n                    {orderGroup[0].Payment.payment_method_details.card.last4}\n                  </b>\n                </InnerItem>\n                <InnerItem style={{ borderBottom: \"1px solid #dbdbdb\" }}>\n                  <span>Total Amount</span>\n                  <b style={{ color: \"#333\" }}>\n                    {priceConverter(orderGroup[0].Payment.amount / 100 - 4.99)}\n                  </b>\n                </InnerItem>\n                <InnerItem style={{ borderBottom: \"1px solid #dbdbdb\" }}>\n                  <>Shipping Fee</>\n                  <b style={{ color: \"#333\" }}>{priceConverter(4.99)}</b>\n                </InnerItem>\n                <InnerItem>\n                  <>Total</>\n                  <b style={{ color: \"#333\", fontSize: \"16px\" }}>\n                    {priceConverter(orderGroup[0].Payment.amount / 100)}\n                  </b>\n                </InnerItem>\n              </AddressBoxInner>\n            </AddressBox>\n          </div>\n          <div className=\"col-md-6\">\n            <AddressBox>\n              <AddressBoxTop>\n                <b>Seller Information</b>\n                {!inSellerRoute && (\n                  <span\n                    style={{ fontSize: \"14px\", cursor: \"pointer\" }}\n                    onClick={() =>\n                      communicateSeller(orderGroup[0].order.seller._id)\n                    }\n                  >\n                    Send Message\n                  </span>\n                )}\n              </AddressBoxTop>\n              <AddressBoxInner>\n                <InnerItem style={{ borderBottom: \"1px solid #dbdbdb\" }}>\n                  <>Name</>\n                  <b style={{ color: \"#333\" }}>\n                    {orderGroup[0].order.seller.fullname}\n                  </b>\n                </InnerItem>\n                <InnerItem style={{ borderBottom: \"1px solid #dbdbdb\" }}>\n                  <>Company</>\n                  <b style={{ color: \"#333\" }}>\n                    {orderGroup[0].order.seller.companyName}\n                  </b>\n                </InnerItem>\n                <InnerItem style={{ borderBottom: \"1px solid #dbdbdb\" }}>\n                  <>Email</>\n                  <b style={{ color: \"#333\" }}>\n                    {orderGroup[0].order.seller.email}\n                  </b>\n                </InnerItem>\n                <InnerItem style={{ borderBottom: \"1px solid #dbdbdb\" }}>\n                  <>Phone</>\n                  <b style={{ color: \"#333\" }}>\n                    {orderGroup[0].order.seller.phoneNumber}\n                  </b>\n                </InnerItem>\n                <InnerItem>\n                  <>Rating</>\n                  <b style={{ color: \"#333\" }}>\n                    {orderGroup[0].order.seller.rating}\n                  </b>\n                </InnerItem>\n              </AddressBoxInner>\n            </AddressBox>\n          </div>\n          <div className=\"col-12\">\n            <AddressBox style={{ overflowY: \"auto\" }}>\n              <AddressBoxTop>\n                <b>Products</b>\n              </AddressBoxTop>\n              <AddressBoxInner>\n                <div className=\"row\">\n                  {orderGroup.map((order, index) => {\n                    return (\n                      <div className=\"col-md-4 col-sm-6\" key={index}>\n                        <OrderItem>\n                          <OrderItemImage\n                            src={order.order.Product.product.images[0].url}\n                            alt=\"product\"\n                          />\n                          <span\n                            style={{\n                              fontSize: \"14px\",\n                            }}\n                          >\n                            <b style={{ color: \"#333\" }}>Status:</b>{\" \"}\n                            {order.order.status === \"waitingConfirmation\" &&\n                              \"Waiting confirmation by seller\"}\n                            {order.order.status === \"cancelRequest\" &&\n                              \"Waiting confirmation by seller to confirm cancellation\"}\n                            {order.order.status === \"confirmed\" && (\n                              <>\n                                <TiTick\n                                  style={{\n                                    fontSize: \"18px\",\n                                    color: \"black\",\n                                    fontWeight: \"bold\",\n                                  }}\n                                />{\" \"}\n                                Order confirmed by the seller\n                              </>\n                            )}\n                            {order.order.status === \"cancelled\" && (\n                              <>\n                                <TiCancel\n                                  style={{\n                                    fontSize: \"18px\",\n                                    color: \"red\",\n                                    fontWeight: \"bold\",\n                                  }}\n                                />{\" \"}\n                                Order is cancelled\n                              </>\n                            )}\n                            {order.order.status === \"packing\" && (\n                              <>\n                                <FcPackage /> Order is packing\n                              </>\n                            )}\n                            {order.order.status === \"shipped\" && (\n                              <>\n                                <MdLocalShipping\n                                  style={{\n                                    fontSize: \"18px\",\n                                    fontWeight: \"bold\",\n                                  }}\n                                />{\" \"}\n                                Order is shipped\n                              </>\n                            )}\n                            {order.order.status === \"delivered\" && (\n                              <>\n                                <FcShipped\n                                  style={{\n                                    fontSize: \"18px\",\n                                    fontWeight: \"bold\",\n                                  }}\n                                />{\" \"}\n                                Order is delivered\n                              </>\n                            )}\n                          </span>\n                        </OrderItem>\n                      </div>\n                    );\n                  })}\n                </div>\n              </AddressBoxInner>\n            </AddressBox>\n          </div>\n        </div>\n      </ModalBox>\n    </FullPageBackground>\n  );\n};\n\nexport default OrderDetailsModal;\n","/home/guney/RalShop/frontend/src/components/sellerDetailsModal.js",[],"/home/guney/RalShop/frontend/src/components/ProfilePageRatedSellersSection.js",["519"],"import React, { useState, useEffect } from \"react\";\nimport {\n  deleteSellerRating,\n  rateSeller,\n} from \"../redux/actions/rateSellerActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BsStarFill, BsStar } from \"react-icons/bs\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport Modal from \"./messageBox\";\nimport ReactStars from \"react-rating-stars-component\";\nimport LoadingIcon from \"../assets/loading.gif\";\n\nconst RateSellerStars = styled.div`\n  display: none;\n  position: absolute;\n  bottom: 29px;\n  left: 0px;\n  background: white;\n  border: 1px solid #dbdbdb;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n  padding: 10px;\n  min-width: 100%;\n  width: 140px;\n  font-size: 12px;\n  cursor: auto;\n\n  @media (max-width: 793px) {\n    bottom: 45px;\n  }\n  @media (max-width: 766px) {\n    bottom: 30px;\n  }\n`;\nconst RateSellerSection = styled.div`\n  position: relative;\n  padding: 5px;\n  margin-top: -12px;\n  &:hover ${RateSellerStars} {\n    display: block;\n  }\n`;\nconst RateSellerText = styled.span``;\nconst RateSellersStarsTop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  text-align: left;\n  border-bottom: 1px solid #dbdbdb;\n`;\nconst BoxHeaderText = styled.span`\n  font-size: 14px;\n  font-weight: bold;\n`;\nconst RatingItem = styled.div`\n  border-bottom: 1.2px solid #dedede;\n  margin-bottom: 15px;\n`;\nconst DateText = styled.p`\n  color: var(--text-muted);\n  font-size: 14px;\n  margin-top: -5px;\n`;\n\nconst ProfilePageRatedSellersSection = ({ isEmpty, setIsEmpty }) => {\n  const dispatch = useDispatch();\n  const { ratedSellers, loading, error } = useSelector(\n    (state) => state.RateSeller\n  );\n  const { user } = useSelector((state) => state.Auth);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [ratingId, setRatingId] = useState();\n  const [ratedSeller, setRatedSeller] = useState();\n  const [isDisplayingRateError, setIsDisplayingRateError] = useState(false);\n\n  useEffect(() => {\n    if (ratedSellers.length < 1) setIsEmpty(true);\n    if (ratedSellers.length > 0) setIsEmpty(false);\n  }, []);\n\n  useEffect(() => {\n    setIsDisplayingRateError(true);\n    setTimeout(() => setIsDisplayingRateError(false), 1500);\n  }, [error]);\n\n  const openModal = (id, seller) => {\n    setRatingId(id);\n    setRatedSeller(seller);\n    setIsModalOpen(true);\n  };\n  const RateSeller = (val, seller) => {\n    dispatch(\n      rateSeller({\n        rating: val,\n        seller,\n        user: user._id,\n      })\n    );\n  };\n  if (isEmpty) {\n    return <h4>No Sellers Rated</h4>;\n  }\n\n  return (\n    <div>\n      {isModalOpen && (\n        <Modal\n          isRedux={true}\n          action={deleteSellerRating}\n          message=\"Do You Want To Delete This Review?\"\n          setIsModalOpen={setIsModalOpen}\n          header=\"Delete Review\"\n          btnText=\"Delete\"\n          param={ratingId}\n          secondParam={ratedSeller}\n        />\n      )}\n      <div\n        className=\"checkout-address-section-top w-100\"\n        style={{ position: \"absolute\", top: \"0\", left: \"0\" }}\n      >\n        <BoxHeaderText>{ratedSellers.length} Ratings</BoxHeaderText>\n      </div>\n      <section style={{ marginTop: \"35px\" }}>\n        {ratedSellers.map((item, index) => {\n          return (\n            <RatingItem key={index}>\n              <span style={{ fontWeight: \"bold\" }}>\n                {item.sellerObject.fullname} - {item.sellerObject.companyName}\n              </span>\n              <p\n                style={{\n                  display: \"block\",\n                  marginTop: \"-3px\",\n                }}\n              >\n                {Array.from({ length: 5 }, (_, index) => {\n                  const number = index + 0.5;\n                  return (\n                    <span key={index}>\n                      {item.rating > number ? (\n                        <BsStarFill style={{ color: \"rgb(255, 215, 0)\" }} />\n                      ) : (\n                        <BsStar style={{ color: \"rgb(255, 215, 0)\" }} />\n                      )}\n                    </span>\n                  );\n                })}\n              </p>\n              <section style={{ display: \"flex\" }}>\n                <DateText>{moment(item.createdAt).format(\"ll\")}</DateText>\n                <RateSellerSection>\n                  <RateSellerStars>\n                    <RateSellersStarsTop>Edit Rating</RateSellersStarsTop>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      {loading && (\n                        <img\n                          src={LoadingIcon}\n                          alt=\"loading icon spinning\"\n                          height=\"40px\"\n                          width=\"40px\"\n                          style={{ marginTop: \"10px\" }}\n                        />\n                      )}\n                      {error && isDisplayingRateError && (\n                        <span className=\"text-danger\">{error}</span>\n                      )}\n                      {!loading && !isDisplayingRateError && (\n                        <div\n                          style={{\n                            marginTop: \"10px\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                          }}\n                        >\n                          <ReactStars\n                            count={5}\n                            a11y={false}\n                            value={item.rating}\n                            onChange={(val) => RateSeller(val, item.seller)}\n                            size={24}\n                            activeColor=\"#ffd700\"\n                            className=\"react-stars-seller-rating\"\n                          />\n                        </div>\n                      )}\n                    </div>\n                  </RateSellerStars>\n                  <RateSellerText\n                    style={{\n                      fontSize: \"14px\",\n                      marginTop: \"-5px\",\n                      marginLeft: \"15px\",\n                      cursor: \"pointer\",\n                      color: \"var(--text-muted)\",\n                    }}\n                  >\n                    Edit\n                  </RateSellerText>\n                </RateSellerSection>\n                <p\n                  style={{\n                    fontSize: \"14px\",\n                    marginTop: \"-5px\",\n                    marginLeft: \"15px\",\n                    cursor: \"pointer\",\n                    color: \"var(--text-muted)\",\n                  }}\n                  onClick={() => openModal(item._id, item.seller)}\n                >\n                  Delete\n                </p>\n              </section>\n            </RatingItem>\n          );\n        })}\n      </section>\n    </div>\n  );\n};\n\nexport default ProfilePageRatedSellersSection;\n","/home/guney/RalShop/frontend/src/redux/reducers/rateSellerReducer.js",[],"/home/guney/RalShop/frontend/src/redux/actions/rateSellerActions.js",[],"/home/guney/RalShop/frontend/src/components/sellerProfileEdit.js",["520"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { categories } from \"../data/category\";\nimport { countries } from \"../data/countries\";\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport LoadingIcon from \"../assets/loading.gif\";\nimport { sellerUpdateProfile } from \"../redux/actions/sellerActions\";\n\nconst FullPageBackground = styled.div`\n  position: fixed;\n  z-index: 99999999;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.4);\n`;\nconst ModalBox = styled.div`\n  background: white;\n  border-radius: 3px;\n  border: 1.3px solid #dbdbdb;\n  width: 60%;\n  overflow-x: hidden;\n  overflow-y: auto;\n  height: 500px;\n  max-height: 90%;\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  &::-webkit-scrollbar-track {\n    background: #dddddd;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: #acaaaa;\n  }\n  &::-webkit-scrollbar-thumb:hover {\n    background: #c2c2c2;\n  }\n  @media (max-width: 800px) {\n    width: 70%;\n  }\n  @media (max-width: 550px) {\n    width: 90%;\n  }\n  @media (max-width: 430px) {\n    width: 100%;\n  }\n`;\nconst ModalBoxTop = styled.div`\n  padding: 3px 8px;\n  border-bottom: 1.3px solid #dbdbdb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  border-radius: 50%;\n  font-size: 24px;\n  transition: 0.3s;\n  &:focus {\n    outline: 0;\n  }\n  &:hover {\n    background: #dedede;\n  }\n`;\nconst ModalBoxTitle = styled.h5`\n  font-weight: bold;\n  margin: 0;\n  padding: 0;\n  margin-top: 2px;\n`;\nconst ModalBoxInner = styled.div`\n  padding: 3px 8px;\n`;\nconst Labels = styled.label`\n  font-weight: 500;\n`;\nconst InputField = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 90%;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nconst TextField = styled.textarea`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 95%;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nconst Select = styled.select`\n  padding: 4px 5px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 90%;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nconst InputFieldFullWidth = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 95%;\n\n  &:focus {\n    outline: 0;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nconst SearchResultsBox = styled.div`\n  width: 95%;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\n\nconst SellerProfileEdit = ({ isModalOpen, Seller }) => {\n  const [category, setCategory] = useState(Seller.category);\n  const [companyName, setCompanyName] = useState(Seller.companyName);\n  const [center, setCenter] = useState(Seller.coordinate);\n  const [country, setCountry] = useState(Seller.country);\n  const [email, setEmail] = useState(Seller.email);\n  const [fullname, setFullname] = useState(Seller.fullname);\n  const [location, setLocation] = useState(Seller.location);\n  const [links, setLinks] = useState(Seller.links.join(\"            \"));\n  const [phoneNumber, setPhoneNumber] = useState(Seller.phoneNumber);\n  const [sellerId, setSellerId] = useState(Seller.id);\n  const [isLoading, setIsLoading] = useState(false);\n  const [results, setResults] = useState([]);\n  const [notFound, setNotFound] = useState(null);\n  const dispatch = useDispatch();\n  const { loading, error } = useSelector((state) => state.Seller);\n  const lastAction = useSelector((state) => state.lastAction);\n  const [isEdited, setIsEdited] = useState(false);\n\n  useEffect(() => setIsEdited(false), []);\n  useEffect(() => {\n    if (location.length > 0) {\n      if (results.length > 0) {\n        document\n          .querySelector(\".location-search-results\")\n          .classList.add(\"active\");\n      }\n    } else {\n      document\n        .querySelector(\".location-search-results\")\n        .classList.remove(\"active\");\n    }\n    if (notFound) {\n      setIsLoading(false);\n      document\n        .querySelector(\".location-search-results\")\n        .classList.remove(\"active\");\n    }\n  }, [location, results, notFound]);\n\n  useEffect(() => {\n    window.addEventListener(\n      \"keydown\",\n      (e) => e.key === \"Escape\" && isModalOpen(false)\n    );\n  }, [isModalOpen]);\n\n  useEffect(() => {\n    if (isEdited && lastAction === \"UPDATE_SELLER\") {\n      isModalOpen(false);\n    }\n  }, [lastAction, isModalOpen, isEdited]);\n\n  const editProfile = (e) => {\n    e.preventDefault();\n    let data = {\n      fullname,\n      email,\n      country,\n      phoneNumber,\n      category,\n      companyName,\n      location,\n      coordinate: center,\n      links: links.split(\" \").filter((e) => e !== \"\"),\n    };\n\n    dispatch(sellerUpdateProfile(data, sellerId));\n    setIsEdited(true);\n  };\n  const changeLocation = (placeName, coordinate) => {\n    setLocation(placeName);\n    setCenter(coordinate);\n  };\n  const displayResults = () => {\n    if (notFound !== null && notFound === false)\n      document\n        .querySelector(\".location-search-results\")\n        .classList.add(\"active\");\n  };\n\n  const removeResults = () => {\n    setTimeout(() => {\n      document\n        .querySelector(\".location-search-results\")\n        .classList.remove(\"active\");\n    }, 100);\n  };\n\n  const searchAddress = (e) => {\n    setLocation(e.target.value);\n    setIsLoading(true);\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${location}.json?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`\n      )\n      .then((res) => res.data)\n      .then((data) => {\n        setResults(data.features);\n        setIsLoading(false);\n        setNotFound(false);\n      })\n      .catch((err) => {\n        setResults([]);\n        setNotFound(true);\n      });\n  };\n\n  return (\n    <FullPageBackground>\n      <ModalBox>\n        <ModalBoxTop>\n          <ModalBoxTitle>Edit Your Profile</ModalBoxTitle>\n          <CloseButton onClick={() => isModalOpen(false)}>\n            <FaTimes />\n          </CloseButton>\n        </ModalBoxTop>\n        <ModalBoxInner>\n          <form onSubmit={(e) => editProfile(e)}>\n            <div className=\"row\">\n              <div className=\"col-md-6 mt-2\">\n                <Labels htmlFor=\"fullname\">Fullname</Labels>\n                <br />\n                <InputField\n                  type=\"text\"\n                  placeholder=\"fullname\"\n                  value={fullname}\n                  onChange={(e) => setFullname(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"col-md-6 mt-2\">\n                <Labels htmlFor=\"email\">Email</Labels>\n                <br />\n                <InputField\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"col-md-6 mt-2\">\n                <Labels htmlFor=\"phonenumber\">Phone Number</Labels>\n                <br />\n                <InputField\n                  type=\"text\"\n                  placeholder=\"Phone Number\"\n                  value={phoneNumber}\n                  onChange={(e) => setPhoneNumber(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"col-md-6 mt-2\">\n                <Labels htmlFor=\"fullname\">Company Name</Labels>\n                <br />\n                <InputField\n                  type=\"text\"\n                  placeholder=\"Company Name\"\n                  value={companyName}\n                  onChange={(e) => setCompanyName(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"col-md-6 mt-2\">\n                <Labels htmlFor=\"category\">Category</Labels>\n                <br />\n                <Select\n                  name=\"category\"\n                  id=\"category\"\n                  onChange={(e) => setCategory(e.target.value)}\n                  value={category}\n                  required\n                >\n                  <option value=\"\">Category</option>\n                  {categories.map((item, idx) => {\n                    return (\n                      <option value={item} key={idx}>\n                        {item}\n                      </option>\n                    );\n                  })}\n                </Select>\n              </div>\n              <div className=\"col-md-6 mt-2\">\n                <Labels htmlFor=\"category\">Country</Labels>\n                <br />\n                <Select\n                  name=\"country\"\n                  id=\"country\"\n                  onChange={(e) => setCountry(e.target.value)}\n                  value={country}\n                  required\n                >\n                  <option value=\"\">Country</option>\n                  {countries.map((item, idx) => {\n                    return (\n                      <option value={item.code} key={idx}>\n                        {item.name}\n                      </option>\n                    );\n                  })}\n                </Select>\n              </div>\n              <div className=\"col-12 mt-3\">\n                <div className=\"form-section\">\n                  <Labels htmlFor=\"location\">Location</Labels>\n                  <InputFieldFullWidth\n                    type=\"text\"\n                    name=\"location\"\n                    id=\"location\"\n                    aria-label=\"location\"\n                    placeholder=\"Location\"\n                    value={location}\n                    onFocus={() => displayResults()}\n                    onChange={(e) => searchAddress(e)}\n                    onBlur={() => removeResults()}\n                    autoComplete=\"off\"\n                    required\n                  />\n                  <SearchResultsBox className=\"location-search-results\">\n                    {isLoading ? (\n                      \"Loading...\"\n                    ) : (\n                      <div>\n                        {results.map((item, idx) => {\n                          return (\n                            <section\n                              className=\"location-result mb-1\"\n                              key={idx}\n                              onMouseDown={() =>\n                                changeLocation(\n                                  item.place_name,\n                                  item.geometry.coordinates\n                                )\n                              }\n                            >\n                              <span>{item.text}</span>\n                              <br />\n                              <span style={{ fontSize: \"13px\" }}>\n                                {`${item.place_name.substring(0, 32)}...`}\n                              </span>\n                            </section>\n                          );\n                        })}\n                      </div>\n                    )}\n                  </SearchResultsBox>\n                  <div className=\"form-text\">\n                    Enter headquarters of your company\n                  </div>\n                  <div className=\"form-text text-danger\">\n                    {notFound && \"No address found\"}\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-12 mt-3\" style={{ marginTop: \"-5px\" }}>\n                <Labels htmlFor=\"links\">\n                  Enter The Links Of Your Shop If You Have\n                </Labels>\n                <TextField\n                  name=\"links\"\n                  id=\"links\"\n                  cols=\"10\"\n                  rows=\"5\"\n                  style={{ color: \"#0d6efd\" }}\n                  placeholder=\"If you sell products on different websites or if your company have website, enter links of them. Seperate links with space. If you don't have link to enter leave it blank.\"\n                  onChange={(e) => setLinks(e.target.value)}\n                >\n                  {links}\n                </TextField>\n              </div>\n            </div>\n            <section className=\"d-flex align-items-center\">\n              <button className=\"default-btn mb-3 mt-3\">Edit</button>\n              {loading && (\n                <img\n                  src={LoadingIcon}\n                  alt=\"loading spinner\"\n                  height=\"50px\"\n                  width=\"50px\"\n                  className=\"d-block\"\n                />\n              )}\n              {error.message && (\n                <span style={{ paddingLeft: \"20px\" }} className=\"text-danger\">\n                  {error.message}\n                </span>\n              )}\n            </section>\n          </form>\n        </ModalBoxInner>\n      </ModalBox>\n    </FullPageBackground>\n  );\n};\n\nexport default SellerProfileEdit;\n","/home/guney/RalShop/frontend/src/pages/seller/allOrdersPage.js",["521"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Navbar from \"../../components/seller/productActionsPageNavbar\";\nimport Filters from \"../../components/seller/productActionsFilters\";\nimport OrderList from \"../../components/seller/orderList\";\nimport { getSellerOrders } from \"../../redux/actions/sellerActions\";\n\nconst AllOrdersPage = () => {\n  const { orders } = useSelector((state) => state.Seller);\n  const [listProducts, setListProducts] = useState(orders);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(getSellerOrders()), []);\n  useEffect(\n    () =>\n      setListProducts([\n        ...orders\n          .filter((item) => item.order.status !== \"cancelRequest\")\n          .filter((item) => item.order.status !== \"cancelled\"),\n      ]),\n    [orders]\n  );\n\n  return (\n    <>\n      <Navbar isOrders={true} isAllOrdersPage={true} />\n      <Filters\n        setListProducts={setListProducts}\n        listProducts={listProducts}\n        DefaultProducts={orders\n          .filter((item) => item.order.status !== \"cancelRequest\")\n          .filter((item) => item.order.status !== \"cancelled\")}\n        isOrders={true}\n      />\n      <OrderList Orders={listProducts} />\n    </>\n  );\n};\n\nexport default AllOrdersPage;\n","/home/guney/RalShop/frontend/src/pages/seller/AllProductsPage.js",["522"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllSellerProducts } from \"../../redux/actions/sellerActions\";\nimport Navbar from \"../../components/seller/productActionsPageNavbar\";\nimport Filters from \"../../components/seller/productActionsFilters\";\nimport ProductList from \"../../components/seller/productActionsProductList\";\n\nconst AllProductsPage = () => {\n  const { products } = useSelector((state) => state.Seller);\n  const [listProducts, setListProducts] = useState(products);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(getAllSellerProducts()), []);\n  useEffect(() => setListProducts(products), [products]);\n\n  return (\n    <>\n      <Navbar isProductListPage={true} />\n      <Filters\n        setListProducts={setListProducts}\n        listProducts={listProducts}\n        DefaultProducts={products}\n      />\n      <ProductList Products={listProducts} actionsAvailable={false} />\n    </>\n  );\n};\n\nexport default AllProductsPage;\n","/home/guney/RalShop/frontend/src/pages/seller/cancelledOrders.js",["523"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getSellerOrders } from \"../../redux/actions/sellerActions\";\nimport Navbar from \"../../components/seller/productActionsPageNavbar\";\nimport OrderList from \"../../components/seller/orderList\";\nimport Filters from \"../../components/seller/productActionsFilters\";\n\nconst CancelledOrdersPage = () => {\n  const { orders } = useSelector((state) => state.Seller);\n  const [listProducts, setListProducts] = useState(orders);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(getSellerOrders()), []);\n  useEffect(\n    () =>\n      setListProducts(\n        orders.filter((item) => item.order.status === \"cancelled\")\n      ),\n    [orders]\n  );\n\n  return (\n    <>\n      <Navbar isOrders={true} isCancelledOrdersPage={true} />\n      <Filters\n        setListProducts={setListProducts}\n        listProducts={listProducts}\n        DefaultProducts={orders.filter(\n          (item) => item.order.status === \"cancelled\"\n        )}\n        isOrders={true}\n      />\n      <OrderList Orders={listProducts} onlyCancelled={true} />\n    </>\n  );\n};\n\nexport default CancelledOrdersPage;\n","/home/guney/RalShop/frontend/src/pages/seller/productActionsPage.js",["524"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllSellerProducts } from \"../../redux/actions/sellerActions\";\nimport Navbar from \"../../components/seller/productActionsPageNavbar\";\nimport Filters from \"../../components/seller/productActionsFilters\";\nimport ProductList from \"../../components/seller/productActionsProductList\";\n\nconst ProductActionsPage = () => {\n  const dispatch = useDispatch();\n  const { products } = useSelector((state) => state.Seller);\n  const [listProducts, setListProducts] = useState(products);\n\n  useEffect(() => setListProducts(products), [products]);\n\n  useEffect(() => {\n    dispatch(getAllSellerProducts());\n  }, []);\n\n  return (\n    <div>\n      <Navbar isProductActionsPage={true} />\n      <Filters\n        setListProducts={setListProducts}\n        listProducts={listProducts}\n        DefaultProducts={products}\n      />\n      <ProductList Products={listProducts} />\n    </div>\n  );\n};\n\nexport default ProductActionsPage;\n","/home/guney/RalShop/frontend/src/components/seller/productActionsPageNavbar.js",["525","526","527","528","529","530","531","532","533"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ListItem = styled.li`\n  width: 100%;\n  cursor: pointer;\n  padding: 5px;\n  font-size: 18px;\n  white-space: nowrap;\n  word-wrap: break-word;\n  transition: 0.3s;\n  user-select: none;\n\n  &:hover {\n    background: #efefef;\n    box-shadow: inset 0px -2px 0px var(--text-muted);\n  }\n\n  @media (max-width: 600px) {\n    font-size: 16px;\n    padding-top: 5px;\n  }\n\n  @media (max-width: 500px) {\n    font-size: 14px;\n  }\n`;\nconst UnorderedList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  list-style-type: none;\n  text-align: center;\n  margin-left: -16px;\n\n  @media (max-width: 1200px) {\n    margin-left: -25px;\n  }\n`;\nconst Navbar = styled.div``;\n\nconst ProductActionsPageNavbar = ({\n  isProductListPage = false,\n  isProductActionsPage = false,\n  isAddProductPage = false,\n  isAllOrdersPage = false,\n  isCancelRequestOrdersPage = false,\n  isCancelledOrdersPage = false,\n  isOrders = false,\n}) => {\n  const [isProductList, setIsProductList] = useState(isProductListPage);\n  const [isProductActions, setIsProductActions] =\n    useState(isProductActionsPage);\n  const [isAddProduct, setIsAddProduct] = useState(isAddProductPage);\n  const [isAllOrders, setIsAllOrdersPage] = useState(isAllOrdersPage);\n  const [isCancelRequestOrders, setIsCancelRequestOrders] = useState(\n    isCancelRequestOrdersPage\n  );\n  const [isCancelledOrders, setIsCancelledOrders] = useState(\n    isCancelledOrdersPage\n  );\n\n  const history = useHistory();\n\n  if (!isOrders) {\n    return (\n      <Navbar>\n        <UnorderedList>\n          <ListItem\n            className={\n              isProductList\n                ? \"product-nav-item product-nav-item-active\"\n                : \"product-nav-item\"\n            }\n            onClick={() => history.push(\"/seller/products/all\")}\n          >\n            Product List\n          </ListItem>\n          <ListItem\n            className={\n              isProductActions\n                ? \"product-nav-item product-nav-item-active\"\n                : \"product-nav-item\"\n            }\n            onClick={() => history.push(\"/seller/products/actions\")}\n          >\n            Product Actions\n          </ListItem>\n          <ListItem\n            className={\n              isAddProductPage\n                ? \"product-nav-item product-nav-item-active\"\n                : \"product-nav-item\"\n            }\n            onClick={() => history.push(\"/seller/products/add\")}\n          >\n            Add Product\n          </ListItem>\n        </UnorderedList>\n      </Navbar>\n    );\n  } else {\n    return (\n      <Navbar>\n        <UnorderedList>\n          <ListItem\n            className={\n              isAllOrders\n                ? \"product-nav-item product-nav-item-active\"\n                : \"product-nav-item\"\n            }\n            onClick={() => history.push(\"/seller/orders/list\")}\n          >\n            Orders\n          </ListItem>\n          <ListItem\n            className={\n              isCancelRequestOrdersPage\n                ? \"product-nav-item product-nav-item-active\"\n                : \"product-nav-item\"\n            }\n            onClick={() => history.push(\"/seller/orders/cancel_request\")}\n          >\n            Cancel Requests\n          </ListItem>\n          <ListItem\n            className={\n              isCancelledOrders\n                ? \"product-nav-item product-nav-item-active\"\n                : \"product-nav-item\"\n            }\n            onClick={() => history.push(\"/seller/orders/cancelled\")}\n          >\n            Cancelled Orders\n          </ListItem>\n        </UnorderedList>\n      </Navbar>\n    );\n  }\n};\n\nexport default ProductActionsPageNavbar;\n","/home/guney/RalShop/frontend/src/components/seller/productActionsFilters.js",["534","535","536","537","538","539"],"import React, { useEffect, useState } from \"react\";\nimport { MdKeyboardArrowDown, MdKeyboardArrowUp } from \"react-icons/md\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin-left: 15px;\n  border: 1px solid #dbdbdb;\n  background: rgb(253, 253, 253);\n  border-radius: 3px;\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 0px 0px 1px;\n\n  @media (max-width: 1200px) {\n    margin-left: 8px;\n  }\n`;\nconst ContainerTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid #dbdbdb;\n  font-size: 16px;\n  padding: 0px 10px;\n`;\nconst ContainerLeft = styled.div`\n  padding: 4px 10px;\n  padding-bottom: 8px;\n  overflow: hidden;\n  max-height: 500px;\n  transition: 0.5s;\n  -webkit-transition: 1.1s;\n  -moz-transition: 1.1s;\n  transition: 1.1s;\n  transition-delay: -0.1s;\n`;\nconst Labels = styled.label`\n  font-size: 14px;\n`;\nconst InputField = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 100%;\n`;\nconst Select = styled.select`\n  padding: 4px 5px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 100%;\n`;\nconst InputSection = styled.div``;\nconst ShowOrderButton = styled.button`\n  border: none;\n  background: none;\n  font-weight: bold;\n  font-size: 15px;\n  margin: 0;\n  padding: 0;\n  padding-left: 8px;\n  &:focus {\n    outline: 0;\n  }\n  @media (max-width: 460px) {\n    font-size: 13px;\n    margin-right: -10px;\n  }\n`;\nconst OutOfStockSection = styled.div`\n  margin-top: 10px;\n  margin-left: 15px;\n  color: var(--text-muted);\n  font-size: 14px;\n  display: flex;\n\n  @media (max-width: 1200px) {\n    margin-left: 8px;\n  }\n`;\n\nconst ProductActionsFilters = ({\n  listProducts,\n  setListProducts,\n  DefaultProducts,\n  isOrders = false,\n}) => {\n  const [sort, setSort] = useState(\"default\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [allCategories, setAllCategories] = useState([]);\n  const [searchID, setSearchID] = useState(\"\");\n  const [showOutOfStock, setShowOutOfStock] = useState(false);\n  const [areFiltersVisible, setAreFiltersVisible] = useState(\n    window.innerWidth < 576 ? false : true\n  );\n\n  useEffect(() => {\n    if (searchID.length > 0) {\n      setListProducts(\n        listProducts.filter((item) =>\n          isOrders ? item.order._id === searchID : item._id === searchID\n        )\n      );\n    } else {\n      setListProducts(DefaultProducts);\n    }\n  }, [searchID]);\n\n  useEffect(() => {\n    let tempCategories = new Set();\n    DefaultProducts.forEach((item) => {\n      tempCategories.add(\n        isOrders ? item.order.Product.product.subCategory : item.subCategory\n      );\n    });\n    setAllCategories([...tempCategories]);\n  }, [DefaultProducts]);\n\n  useEffect(() => {\n    if (!showOutOfStock) {\n      setListProducts(DefaultProducts);\n    } else {\n      setListProducts([...DefaultProducts].filter((item) => item.stock < 1));\n    }\n  }, [showOutOfStock]);\n\n  useEffect(() => {\n    if (category === \"\") {\n      setListProducts(DefaultProducts);\n    } else {\n      setListProducts(\n        [...DefaultProducts]\n          .filter((item) =>\n            isOrders\n              ? item.order.Product.product.subCategory === category\n              : item.subCategory === category\n          )\n          .sort((a, b) => (isOrders ? sortOrders(a, b) : sortProducts(a, b)))\n      );\n    }\n  }, [category]);\n\n  useEffect(() => {\n    if (searchQuery.length > 0) {\n      const regex = new RegExp(escapeRegex(searchQuery), \"gi\");\n      setListProducts(\n        listProducts.filter((item) =>\n          isOrders\n            ? item.order.Product.product.title.match(regex)\n            : item.title.match(regex)\n        )\n      );\n    } else {\n      setListProducts(\n        DefaultProducts.filter((item) =>\n          isOrders\n            ? item.order.Product.product.subCategory === category\n            : item.subCategory === category\n        )\n      );\n      setSort(\"default\");\n    }\n  }, [searchQuery]);\n\n  let sortOrders = (a, b) => {\n    if (sort === \"dateDesc\" || sort === \"default\") {\n      return Date.parse(b.order.createdAt) - Date.parse(a.order.createdAt);\n    }\n    if (sort === \"dateAsc\") {\n      return Date.parse(a.order.createdAt) - Date.parse(b.order.createdAt);\n    }\n    if (sort === \"priceDesc\") {\n      return b.order.Product.product.price - a.order.Product.product.price;\n    }\n    if (sort === \"priceAsc\") {\n      return a.order.Product.product.price - b.order.Product.product.price;\n    }\n    if (sort === \"stockDesc\") {\n      return b.order.Product.product.stock - a.order.Product.product.stock;\n    }\n    if (sort === \"stockAsc\") {\n      return a.order.Product.product.stock - b.order.Product.product.stock;\n    }\n  };\n\n  let sortProducts = (a, b) => {\n    if (sort === \"dateDesc\" || sort === \"default\") {\n      return Date.parse(b.createdAt) - Date.parse(a.createdAt);\n    }\n    if (sort === \"dateAsc\") {\n      return Date.parse(a.createdAt) - Date.parse(b.createdAt);\n    }\n    if (sort === \"priceDesc\") {\n      return b.price - a.price;\n    }\n    if (sort === \"priceAsc\") {\n      return a.price - b.price;\n    }\n    if (sort === \"stockDesc\") {\n      return b.stock - a.stock;\n    }\n    if (sort === \"stockAsc\") {\n      return a.stock - b.stock;\n    }\n    if (sort === \"ratingDesc\") {\n      return b.rating - a.rating;\n    }\n    if (sort === \"ratingAsc\") {\n      return a.rating - b.rating;\n    }\n    if (sort === \"wishlistDesc\") {\n      return b.wishlistCount - a.wishlistCount;\n    }\n    if (sort === \"wishlistAsc\") {\n      return a.wishlistCount - b.wishlistCount;\n    }\n    if (sort === \"ordersDesc\") {\n      return b.ordersCount - a.ordersCount;\n    }\n    if (sort === \"ordersAsc\") {\n      return a.ordersCount - b.ordersCount;\n    }\n  };\n\n  let escapeRegex = (text) => {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n  };\n\n  useEffect(() => {\n    setListProducts(\n      [...listProducts].sort((a, b) =>\n        isOrders ? sortOrders(a, b) : sortProducts(a, b)\n      )\n    );\n  }, [sort]);\n\n  return (\n    <>\n      <Container>\n        <ContainerTop>\n          <span>Filters</span>\n          {!areFiltersVisible ? (\n            <ShowOrderButton onMouseDown={() => setAreFiltersVisible(true)}>\n              Show <MdKeyboardArrowDown style={{ fontSize: \"20px\" }} />\n            </ShowOrderButton>\n          ) : (\n            <ShowOrderButton onMouseDown={() => setAreFiltersVisible(false)}>\n              Hide <MdKeyboardArrowUp style={{ fontSize: \"20px\" }} />\n            </ShowOrderButton>\n          )}\n        </ContainerTop>\n        <ContainerLeft\n          style={{\n            maxHeight: areFiltersVisible ? \"250px\" : \"0\",\n            padding: areFiltersVisible ? \"4px 10px\" : \"0\",\n          }}\n        >\n          <div className=\"row\">\n            <InputSection className=\"col-md-3 col-sm-6\">\n              <Labels htmlFor=\"sort\">Sort By</Labels>\n              <br />\n              <Select\n                name=\"sort\"\n                id=\"sort\"\n                value={sort}\n                onChange={(e) => setSort(e.target.value)}\n              >\n                <option value=\"default\">Default</option>\n                <option value=\"dateDesc\">Date (Newest First)</option>\n                <option value=\"dateAsc\">Date (Oldest First)</option>\n                <option value=\"priceDesc\">Price (Highest First)</option>\n                <option value=\"priceAsc\">Price (Lowest First)</option>\n                <option value=\"stockDesc\">Stock (Highest First)</option>\n                <option value=\"stockAsc\">Stock (Lowest First)</option>\n                {!isOrders && (\n                  <>\n                    <option value=\"ratingDesc\">Rating (Highest First)</option>\n                    <option value=\"ratingAsc\">Rating (Lowest First)</option>\n                    <option value=\"wishlistDesc\">\n                      Wishlist Count (Highest First)\n                    </option>\n                    <option value=\"wishlistAsc\">\n                      Wishlist Count (Lowest First)\n                    </option>\n                    <option value=\"ordersDesc\">\n                      Order Count (Highest First)\n                    </option>\n                    <option value=\"ordersAsc\">\n                      Order Count (Lowest First)\n                    </option>\n                  </>\n                )}\n              </Select>\n            </InputSection>\n            <InputSection className=\"col-md-3 col-sm-6\">\n              <Labels htmlFor=\"category\">Category</Labels>\n              <br />\n              <Select\n                name=\"category\"\n                id=\"category\"\n                onChange={(e) => setCategory(e.target.value)}\n              >\n                <option value=\"\">All</option>\n                {allCategories.map((item, index) => {\n                  return (\n                    <option value={item} key={index}>\n                      {item}\n                    </option>\n                  );\n                })}\n              </Select>\n            </InputSection>\n            <InputSection className=\"col-md-3 col-sm-6\">\n              <Labels htmlFor=\"search\">Search By Name</Labels>\n              <br />\n              <InputField\n                type=\"text\"\n                name=\"search\"\n                id=\"search\"\n                placeholder=\"Search By Product Name\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                required\n              />\n            </InputSection>\n            <InputSection className=\"col-md-3 col-sm-6\">\n              <Labels htmlFor=\"search\">Search By ID</Labels>\n              <br />\n              <InputField\n                type=\"text\"\n                name=\"search\"\n                id=\"search\"\n                placeholder=\"Search By Product ID\"\n                value={searchID}\n                onChange={(e) => setSearchID(e.target.value)}\n                required\n              />\n            </InputSection>\n          </div>\n        </ContainerLeft>\n      </Container>\n      {!isOrders && (\n        <OutOfStockSection>\n          <input\n            type=\"checkbox\"\n            checked={showOutOfStock}\n            onChange={() => setShowOutOfStock(!showOutOfStock)}\n          />\n          <p style={{ marginTop: \"-3px\", marginLeft: \"3px\" }}>\n            Show Only Out Of Stock\n          </p>\n        </OutOfStockSection>\n      )}\n    </>\n  );\n};\nexport default ProductActionsFilters;\n","/home/guney/RalShop/frontend/src/components/seller/productActionsProductList.js",[],"/home/guney/RalShop/frontend/src/components/seller/updateProductModal.js",["540"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { categories, subCategories } from \"../../data/category\";\nimport LoadingIcon from \"../../assets/loading.gif\";\nimport styled from \"styled-components\";\nimport { CompactPicker } from \"react-color\";\nimport JoditEditor from \"jodit-react\";\nimport { FaTimes } from \"react-icons/fa\";\nimport mapboxgl from \"mapbox-gl\";\nimport axios from \"axios\";\nimport { priceConverter } from \"../../utils/helpers\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateProduct } from \"../../redux/actions/sellerActions\";\n\nconst FullPageBackground = styled.div`\n  position: fixed;\n  z-index: 99999999;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.4);\n`;\nconst ModalBox = styled.div`\n  background: white;\n  border-radius: 3px;\n  border: 1.3px solid #dbdbdb;\n  width: 80%;\n  overflow-x: hidden;\n  overflow-y: auto;\n  max-height: 90%;\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  &::-webkit-scrollbar-track {\n    background: #dddddd;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: #acaaaa;\n  }\n  &::-webkit-scrollbar-thumb:hover {\n    background: #c2c2c2;\n  }\n  @media (max-width: 430px) {\n    width: 100%;\n  }\n`;\nconst ModalBoxTop = styled.div`\n  padding: 3px 8px;\n  border-bottom: 1.3px solid #dbdbdb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  border-radius: 50%;\n  font-size: 24px;\n  transition: 0.3s;\n  &:focus {\n    outline: 0;\n  }\n  &:hover {\n    background: #dedede;\n  }\n`;\nconst ModalBoxTitle = styled.h5`\n  font-weight: bold;\n  margin: 0;\n  padding: 0;\n  margin-top: 2px;\n`;\nconst ModalBoxInner = styled.div`\n  padding: 5px 8px;\n`;\nconst Labels = styled.label`\n  font-weight: 500;\n`;\nconst InputField = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nconst Select = styled.select`\n  padding: 4px 5px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 90%;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nconst RemoveIcon = styled.span`\n  color: white;\n  font-size: 20px;\n  font-weight: bold;\n  position: absolute;\n  bottom: -6px;\n  left: 3px;\n  text-shadow: -1px -1px black;\n  visibility: hidden;\n`;\nconst ColorPreview = styled.div`\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  cursor: pointer;\n  display: inline-block;\n  margin: 1px;\n  border: 1px solid black;\n  position: relative;\n  &:hover {\n    ${RemoveIcon} {\n      visibility: visible;\n    }\n  }\n`;\nconst ColorOptions = styled.div`\n  margin-left: 20px;\n  @media (max-width: 512px) {\n    margin-left: 0;\n  }\n`;\nconst DisplayImages = styled.div`\n  display: flex;\n  position: relative;\n  align-items: center;\n  flex-wrap: wrap;\n  border: 1px solid #dbdbdb;\n  margin-top: 10px;\n`;\nconst ImageItem = styled.img`\n  border: 1px solid #dbdbdb;\n  height: 100px;\n  width: 100%;\n  object-fit: contain;\n  cursor: pointer;\n  margin-bottom: 20px;\n`;\nconst ImageBox = styled.div`\n  display: inline-block;\n  position: relative;\n`;\nconst RemoveImageButton = styled.button`\n  font-size: 14px;\n  padding: 0;\n  margin: 0;\n  position: absolute;\n  right: 15px;\n  top: 0;\n  border-radius: 50%;\n  background: #dbdbdb;\n  width: 20px;\n  height: 20px;\n  border: none;\n\n  &:focus {\n    outline: 0;\n  }\n`;\n\nconst UpdateProductModal = ({ setIsUpdateProductModalOpen, Product }) => {\n  const [name, setName] = useState(Product.title);\n  const [category, setCategory] = useState(Product.category);\n  const [subCategory, setSubCategory] = useState(Product.subCategory);\n  const [colors, setColors] = useState(Product.colors[0].split(\",\"));\n  const [description, setDescription] = useState(Product.description);\n  const [brand, setBrand] = useState(Product.brand);\n  const [location, setLocation] = useState(Product.location);\n  const [color, setColor] = useState(\"\");\n  const editor = useRef(null);\n  const [map, setMap] = useState(null);\n  const [results, setResults] = useState([]);\n  const [notFound, setNotFound] = useState(null);\n  const [center, setCenter] = useState(Product.coordinate);\n  const mapContainer = useRef(null);\n  const [price, setPrice] = useState(Product.price);\n  const [isLoading, setIsLoading] = useState(false);\n  const [stock, setStock] = useState(Product.stock);\n  const [images, setImages] = useState(Product.images);\n  const config = {\n    readonly: false,\n    placeholder: \"Write product description...\",\n    askBeforePasteHTML: false,\n  };\n  const dispatch = useDispatch();\n  const { loading, error } = useSelector((state) => state.Seller);\n\n  useEffect(() => {\n    const initializeMap = ({ setMap, mapContainer }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        center,\n        zoom: 5,\n      });\n      map.on(\"load\", () => {\n        setMap(map);\n        map.resize();\n      });\n    };\n\n    if (!map) {\n      initializeMap({ setMap, mapContainer });\n    }\n\n    if (map !== null && location.length > 0) {\n      map.flyTo({\n        center,\n        essential: true,\n        zoom: 12,\n      });\n    }\n  }, [map, center]);\n  useEffect(() => {\n    if (location.length > 0) {\n      if (results.length > 0) {\n        document\n          .querySelector(\".location-search-results\")\n          .classList.add(\"active\");\n      }\n    } else {\n      document\n        .querySelector(\".location-search-results\")\n        .classList.remove(\"active\");\n    }\n    if (notFound) {\n      setIsLoading(false);\n      document\n        .querySelector(\".location-search-results\")\n        .classList.remove(\"active\");\n    }\n  }, [location, results, notFound]);\n  const displayResults = () => {\n    if (notFound !== null && notFound === false)\n      document\n        .querySelector(\".location-search-results\")\n        .classList.add(\"active\");\n  };\n  const removeResults = () => {\n    setTimeout(() => {\n      document\n        .querySelector(\".location-search-results\")\n        .classList.remove(\"active\");\n    }, 100);\n  };\n  const changeLocation = (placeName, coordinate) => {\n    setLocation(placeName);\n    setCenter(coordinate);\n  };\n  const searchAddress = (e) => {\n    setLocation(e.target.value);\n    setIsLoading(true);\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${location}.json?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`\n      )\n      .then((res) => res.data)\n      .then((data) => {\n        setResults(data.features);\n        setIsLoading(false);\n        setNotFound(false);\n      })\n      .catch((err) => {\n        setResults([]);\n        setNotFound(true);\n      });\n  };\n  useEffect(() => {\n    window.addEventListener(\n      \"keydown\",\n      (e) => e.key === \"Escape\" && setIsUpdateProductModalOpen(false)\n    );\n  }, [setIsUpdateProductModalOpen]);\n\n  const editProduct = (e) => {\n    e.preventDefault();\n    let formData = new FormData();\n    const imageFile = document.querySelector(`input[type='file']`);\n    if (imageFile.files) {\n      for (let i = 0; i < imageFile.files.length; i++) {\n        formData.append(\"images\", imageFile.files[i]);\n      }\n    }\n    formData.append(\"title\", name);\n    formData.append(\"price\", price);\n    formData.append(\"description\", description);\n    formData.append(\"stock\", stock);\n    formData.append(\"brand\", brand);\n    formData.append(\"colors\", colors);\n    formData.append(\"location\", location);\n    formData.append(\"coordinate\", center);\n    formData.append(\"category\", category);\n    formData.append(\"subCategory\", subCategory);\n    formData.append(\"oldImages\", JSON.stringify(images));\n\n    dispatch(updateProduct(Product._id, formData));\n    setIsUpdateProductModalOpen(false)\n  };\n  const handleChangeComplete = (color) => {\n    setColor(color.hex);\n    setColors((oldColors) => {\n      if (colors.indexOf(color.hex) === -1) {\n        return [color.hex, ...oldColors];\n      } else {\n        return [...oldColors];\n      }\n    });\n  };\n  const removeColor = (clr) => {\n    setColors(colors.filter((item) => item !== clr));\n  };\n  const removeImage = (img) => {\n    setImages(images.filter((item) => item._id !== img._id));\n  };\n\n  return (\n    <FullPageBackground>\n      <ModalBox>\n        <ModalBoxTop>\n          <ModalBoxTitle>Edit Product</ModalBoxTitle>\n          <CloseButton onClick={() => setIsUpdateProductModalOpen(false)}>\n            <FaTimes />\n          </CloseButton>\n        </ModalBoxTop>\n        <ModalBoxInner>\n          <form onSubmit={(e) => editProduct(e)}>\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"form-section\">\n                  <Labels htmlFor=\"name\">Product Name</Labels>\n                  <InputField\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    placeholder=\"Product Name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-4 mb-2 mt-2\">\n                <Labels htmlFor=\"category\">Select Category</Labels>\n                <Select\n                  name=\"category\"\n                  id=\"category\"\n                  value={category}\n                  onChange={(e) => setCategory(e.target.value)}\n                  required\n                >\n                  <option value=\"\">Select Category</option>\n                  {categories.map((item, idx) => {\n                    return (\n                      <option value={item} key={idx}>\n                        {item}\n                      </option>\n                    );\n                  })}\n                </Select>\n              </div>\n              <div className=\"form-section col-md-4 mb-2 mt-2\">\n                <Labels htmlFor=\"subCategory\">Select Sub Category</Labels>\n                <Select\n                  name=\"subCategory\"\n                  id=\"subCategory\"\n                  value={subCategory}\n                  onChange={(e) => setSubCategory(e.target.value)}\n                  required\n                >\n                  <option value=\"\">Select Sub Category</option>\n                  {category !== \"\" &&\n                    subCategories[categories.indexOf(category)].map(\n                      (item, idx) => {\n                        return (\n                          <option value={item} key={idx}>\n                            {item}\n                          </option>\n                        );\n                      }\n                    )}\n                </Select>\n              </div>\n              <div className=\"form-section col-md-4 mb-2 mt-2\">\n                <Labels htmlFor=\"stock\">Stock</Labels>\n                <InputField\n                  id=\"stock\"\n                  type=\"number\"\n                  placeholder=\"Stock\"\n                  value={stock}\n                  onChange={(e) => setStock(e.target.value)}\n                  min=\"0\"\n                />\n              </div>\n              <div className=\"form-section col-md-6 mb-2 mt-2\">\n                <Labels htmlFor=\"brand\">Brand Name</Labels>\n                <InputField\n                  type=\"text\"\n                  name=\"brand\"\n                  id=\"brand\"\n                  value={brand}\n                  placeholder=\"Brand Name\"\n                  onChange={(e) => setBrand(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"form-section col-md-6 mb-2 mt-2\">\n                <Labels htmlFor=\"price\">Price ({priceConverter(price)})</Labels>\n                <InputField\n                  id=\"price\"\n                  type=\"number\"\n                  placeholder=\"Price\"\n                  value={price}\n                  onChange={(e) => setPrice(e.target.value)}\n                  min=\"1\"\n                />\n              </div>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                alignItems: \"flex-start\",\n              }}\n            >\n              <div>\n                <Labels htmlFor=\"colorPicker\">\n                  Pick Color Options For Product\n                </Labels>\n                <br />\n                <span className=\"form-text\" style={{ marginTop: \"-5px\" }}>\n                  Picked colors will be displayed on right.\n                </span>\n                <br />\n                <CompactPicker\n                  id=\"colorPicker\"\n                  color={color}\n                  onChange={(color) => handleChangeComplete(color)}\n                />\n              </div>\n              <ColorOptions>\n                <p style={{ fontWeight: \"500\" }}>Picked Colors:</p>\n                <span\n                  style={{ marginTop: \"-15px\", display: \"block\" }}\n                  className=\"form-text\"\n                >\n                  Colors gets removed on click\n                </span>\n                <br />\n                {colors.length > 0 &&\n                  colors.map((clr, idx) => {\n                    return (\n                      <ColorPreview\n                        style={{ background: clr }}\n                        onClick={() => removeColor(clr)}\n                        key={idx}\n                        id={`clr${clr.substring(1, clr.length)}`}\n                      >\n                        <RemoveIcon>&times;</RemoveIcon>\n                      </ColorPreview>\n                    );\n                  })}\n              </ColorOptions>\n            </div>\n            <Labels htmlFor=\"description\" className=\"mt-3\">\n              Description\n            </Labels>\n            <JoditEditor\n              id=\"description\"\n              ref={editor}\n              value={description}\n              config={config}\n              tabIndex={1}\n              onBlur={(newContent) => setDescription(newContent)}\n            />\n            <section className=\"form-section\">\n              <Labels htmlFor=\"images\" className=\"mt-3\">\n                Choose Product Images\n              </Labels>\n              <input\n                className=\"form-control\"\n                type=\"file\"\n                id=\"images\"\n                multiple\n                required={images.length > 0 ? false : true}\n              />\n              <DisplayImages>\n                <div\n                  style={{\n                    position: \"absolute\",\n                    top: \"0\",\n                    left: \"0\",\n                    padding: \"4px\",\n                    fontSize: \"14px\",\n                    fontWeight: \"bold\",\n                    borderBottom: \"1px solid #dbdbdb\",\n                    width: \"100%\",\n                  }}\n                >\n                  <span>\n                    Selected Images{\" \"}\n                    <span style={{ fontSize: \"13px\", fontWeight: \"normal\" }}>\n                      (click on image to remove)\n                    </span>\n                  </span>\n                </div>\n                <div\n                  className=\"row\"\n                  style={{ padding: \"10px\", marginTop: \"35px\" }}\n                >\n                  {images.length > 0 &&\n                    images.map((img, index) => {\n                      return (\n                        <ImageBox\n                          key={index}\n                          className=\"col-md-2 col-sm-4 col-6\"\n                          onClick={() => removeImage(img)}\n                        >\n                          <ImageItem src={img.url} alt=\"selected img\" />\n                          <RemoveImageButton type=\"button\">\n                            <FaTimes />\n                          </RemoveImageButton>\n                        </ImageBox>\n                      );\n                    })}\n                </div>\n              </DisplayImages>\n            </section>\n            <div className=\"form-section mt-3\">\n              <Labels htmlFor=\"location\">Enter Location Of Product</Labels>\n              <InputField\n                type=\"text\"\n                name=\"location\"\n                id=\"location\"\n                aria-label=\"location\"\n                placeholder=\"Location\"\n                value={location}\n                onFocus={() => displayResults()}\n                onChange={(e) => searchAddress(e)}\n                onBlur={() => removeResults()}\n                autoComplete=\"off\"\n                required\n              />\n              <div className=\"location-search-results w-100\">\n                {isLoading ? (\n                  \"Loading...\"\n                ) : (\n                  <div>\n                    {results.map((item, idx) => {\n                      return (\n                        <section\n                          className=\"location-result mb-1\"\n                          key={idx}\n                          onMouseDown={() =>\n                            changeLocation(\n                              item.place_name,\n                              item.geometry.coordinates\n                            )\n                          }\n                        >\n                          <span>{item.text}</span>\n                          <br />\n                          <span style={{ fontSize: \"13px\" }}>\n                            {`${item.place_name.substring(0, 32)}...`}\n                          </span>\n                        </section>\n                      );\n                    })}\n                  </div>\n                )}\n              </div>\n              <div className=\"form-text text-danger\">\n                {notFound && \"No address found\"}\n              </div>\n              <div\n                ref={(el) => (mapContainer.current = el)}\n                style={{ height: \"300px\" }}\n              />\n            </div>\n            <button className=\"default-btn mt-4\">Edit Product</button>\n            {loading && (\n              <>\n                <img src={LoadingIcon} alt=\"loading gif\" height=\"70px\" />\n                <p className=\"text-muted\">This may take a while.</p>\n              </>\n            )}\n            {error.message && (\n              <>\n                <p className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                  {error.message}\n                </p>\n              </>\n            )}\n          </form>\n        </ModalBoxInner>\n      </ModalBox>\n    </FullPageBackground>\n  );\n};\n\nexport default UpdateProductModal;\n","/home/guney/RalShop/frontend/src/pages/searchResultsPage.js",["541","542"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoadingIcon from \"../assets/loading.gif\";\nimport styled from \"styled-components\";\nimport ListProducts from \"../components/listProducts\";\nimport ProductFilters from \"../components/ProductFilters\";\nimport { BsFilterRight } from \"react-icons/bs\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { searchProduct } from \"../redux/actions/searchProduct\";\n\nconst ResultsCountSection = styled.div`\n  border-bottom: 1px solid #dbdbdb;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-bottom: 5px;\n`;\nconst ResultsCount = styled.span`\n  font-weight: bold !important;\n  font-size: 15px !important;\n\n  @media (max-width: 612px) {\n    display: none;\n  }\n`;\nconst Select = styled.select`\n  padding: 4px 5px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n`;\nconst SpanText = styled.span`\n  @media (max-width: 612px) {\n    display: none;\n  }\n`;\nconst ProductsContainer = styled.div`\n  margin-top: 15px;\n`;\nconst FilterButton = styled.button`\n  display: none;\n\n  &:focus {\n    outline: 0;\n  }\n`;\nconst FiltersSection = styled.div`\n  position: -webkit-sticky;\n  position: sticky;\n  top: 100px;\n  z-index: 1;\n\n  @media (max-width: 767px) {\n    position: static;\n    z-index: 0;\n    top: 0;\n\n    ${FilterButton} {\n      display: block;\n    }\n  }\n`;\nconst CloseButton = styled.button`\n  display: none;\n  user-select: none;\n  border-radius: 50%;\n  border: none;\n  background: none;\n  transition: 0.3s;\n  position: relative;\n  left: -5px;\n  font-size: 22px;\n\n  &:focus {\n    outline: 0;\n  }\n\n  &:hover {\n    background: #dbdbdb;\n  }\n`;\nconst MobileSeperator = styled.div`\n  display: none;\n  padding: 0;\n  margin: 0;\n  @media (max-width: 767px) {\n    display: block;\n  }\n`;\nconst FilterHeader = styled.span`\n  font-weight: bold;\n  font-size: 20px;\n`;\nconst DesktopFilterSection = styled.div`\n  transition: 0.5s;\n\n  @media (max-width: 767px) {\n    ${CloseButton} {\n      display: block;\n    }\n\n    position: fixed;\n    top: 0;\n    left: 0;\n    background: white;\n    border-left: 1px solid #dbdbdb;\n    width: 0;\n    z-index: 99999;\n    height: 100vh;\n    padding: 0;\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n`;\n\nconst SearchResultsPage = () => {\n  const { query, brand } = useParams();\n  const [sort, setSort] = useState(\"default\");\n  const [isFiltersSectionOpen, setIsFiltersSectionOpen] = useState(false);\n  const [windowSize, setWindowSize] = useState(window.innerWidth);\n  const dispatch = useDispatch();\n  const Search = useSelector((state) => state.Search);\n  const [listProducts, setListProducts] = useState([]);\n\n  useEffect(() => {\n    const getWidth = () => {\n      setWindowSize(window.innerWidth);\n    };\n    window.addEventListener(\"resize\", getWidth);\n\n    return () => {\n      window.removeEventListener(\"resize\", getWidth);\n    };\n  }, [windowSize]);\n\n  useEffect(() => {\n    dispatch(searchProduct(query));\n  }, [query]);\n\n  useEffect(() => {\n    setListProducts([...listProducts].sort((a, b) => sortProducts(a, b)));\n  }, [sort]);\n\n  let sortProducts = (a, b) => {\n    if (sort === \"dateDesc\" || sort === \"default\") {\n      return Date.parse(b.createdAt) - Date.parse(a.createdAt);\n    }\n    if (sort === \"dateAsc\") {\n      return Date.parse(a.createdAt) - Date.parse(b.createdAt);\n    }\n    if (sort === \"priceDesc\") {\n      return b.price - a.price;\n    }\n    if (sort === \"priceAsc\") {\n      return a.price - b.price;\n    }\n    if (sort === \"ratingDesc\") {\n      return b.rating - a.rating;\n    }\n    if (sort === \"ratingAsc\") {\n      return a.rating - b.rating;\n    }\n    if (sort === \"wishlistDesc\") {\n      return b.wishlistCount - a.wishlistCount;\n    }\n    if (sort === \"wishlistAsc\") {\n      return a.wishlistCount - b.wishlistCount;\n    }\n    if (sort === \"ordersDesc\") {\n      return b.ordersCount - a.ordersCount;\n    }\n    if (sort === \"ordersAsc\") {\n      return a.ordersCount - b.ordersCount;\n    }\n  };\n\n  if (Search.loading) {\n    return (\n      <div className=\"d-flex justify-content-center\">\n        <img src={LoadingIcon} alt=\"loading spinner\" height=\"120\" width=\"120\" />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-md-3 mb-3\">\n          <FiltersSection>\n            <DesktopFilterSection\n              style={\n                windowSize < 768\n                  ? isFiltersSectionOpen\n                    ? {\n                        padding: \"10px 15px\",\n                        width: \"55%\",\n                        borderRight: \"1px solid #dbdbdb\",\n                      }\n                    : { padding: \"0\", width: \"0\", borderRight: \"0\" }\n                  : { padding: \"3px\", width: \"auto\" }\n              }\n            >\n              <section style={{ display: \"flex\", alignItems: \"center\" }}>\n                <CloseButton onClick={() => setIsFiltersSectionOpen(false)}>\n                  <FaTimes />\n                </CloseButton>\n                <FilterHeader>Filters</FilterHeader>\n              </section>\n              <MobileSeperator>\n                <hr style={{ margin: \"8px 0\", padding: \"0\" }} />\n              </MobileSeperator>\n              <ProductFilters\n                DefaultProducts={Search.products}\n                Brands={Search.brandsOfResults}\n                Sellers={Search.sellers}\n                Categories={Search.categories}\n                setListProducts={setListProducts}\n                Brand={brand}\n              />\n            </DesktopFilterSection>\n            <FilterButton\n              className=\"default-btn\"\n              onClick={() =>\n                isFiltersSectionOpen\n                  ? setIsFiltersSectionOpen(false)\n                  : setIsFiltersSectionOpen(true)\n              }\n            >\n              <BsFilterRight style={{ fontWeight: \"bold\" }} /> Filters\n            </FilterButton>\n          </FiltersSection>\n        </div>\n        <div className=\"col-md-9\">\n          <ResultsCountSection>\n            <span>\n              <span style={{ fontWeight: \"bold\", fontSize: \"15px\" }}>\n                {Search.products.length}\n              </span>{\" \"}\n              results found <SpanText>for </SpanText>\n              <ResultsCount>\"{query}\"</ResultsCount>\n            </span>\n            <Select\n              name=\"sort\"\n              id=\"sort\"\n              value={sort}\n              onChange={(e) => setSort(e.target.value)}\n            >\n              <option value=\"default\">Sort By</option>\n              <option value=\"dateDesc\">Date (Newest First)</option>\n              <option value=\"dateAsc\">Date (Oldest First)</option>\n              <option value=\"priceDesc\">Price (Highest First)</option>\n              <option value=\"priceAsc\">Price (Lowest First)</option>\n              <option value=\"ratingDesc\">Rating (Highest First)</option>\n              <option value=\"ratingAsc\">Rating (Lowest First)</option>\n            </Select>\n          </ResultsCountSection>\n          <ProductsContainer>\n            {listProducts.length < 1 ? (\n              <div style={{ textAlign: \"center\" }}>\n                <h2>No Results Found For</h2>\n                <p className=\"lead\">\"{query}\"</p>\n              </div>\n            ) : (\n              <ListProducts\n                DefaultProducts={Search.products}\n                ListedProducts={listProducts}\n              />\n            )}\n          </ProductsContainer>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResultsPage;\n","/home/guney/RalShop/frontend/src/components/listProducts.js",[],"/home/guney/RalShop/frontend/src/components/ProductFilters.js",[],"/home/guney/RalShop/frontend/src/redux/actions/searchProduct.js",["543"],"import {\n  SEARCH_PRODUCT,\n  SEARCH_PRODUCT_LOADING,\n  GET_PRODUCTS_BY_CATEGORY,\n  GET_PRODUCTS_BY_SUBCATEGORY,\n} from \"./types\";\nimport axios from \"axios\";\nimport { categories, subCategories } from \"../../data/category\";\n\nconst prefix = \"/api/product/search/\";\n\nexport const searchProduct = (query) => (dispatch) => {\n  dispatch({ type: SEARCH_PRODUCT_LOADING });\n\n  axios\n    .get(prefix + query)\n    .then((res) => res.data)\n    .then((data) => {\n      let searchedBrands = new Set();\n      let brandsOfResults = new Set();\n      let sellerSet = new Set();\n      let categoriesSet = new Set();\n      let products = [];\n\n      products = data.products;\n\n      data.brands.forEach((item) => {\n        searchedBrands.add(item.brand);\n      });\n\n      data.products.forEach((item) => {\n        categoriesSet.add(item.category);\n        categoriesSet.add(item.subCategory);\n        brandsOfResults.add(item.brand);\n        sellerSet.add(item.shop.companyName);\n      });\n\n      if (data.products.length < 1) {\n        products = data.brands;\n      }\n\n      dispatch({\n        type: SEARCH_PRODUCT,\n        payload: {\n          Categories: [...categoriesSet],\n          SearchedBrands: [...searchedBrands],\n          BrandsOfResults: [...brandsOfResults],\n          Sellers: [...sellerSet],\n          products,\n          query,\n        },\n      });\n    });\n};\n\nexport const getProductsByCategory = (category) => (dispatch) => {\n  dispatch({ type: SEARCH_PRODUCT_LOADING });\n\n  axios\n    .get(\"/api/product/category/\" + category)\n    .then((res) => res.data)\n    .then((data) => {\n      let brandsOfResults = new Set();\n      let sellerSet = new Set();\n      let categoriesSet = new Set();\n      let products = data;\n\n      data.forEach((item) => {\n        categoriesSet.add(item.category);\n        categoriesSet.add(item.subCategory);\n        brandsOfResults.add(item.brand);\n        sellerSet.add(item.shop.companyName);\n      });\n\n      dispatch({\n        type: GET_PRODUCTS_BY_CATEGORY,\n        payload: {\n          Categories: subCategories[categories.indexOf(category)],\n          BrandsOfResults: [...brandsOfResults],\n          Sellers: [...sellerSet],\n          products,\n        },\n      });\n    });\n};\n\nexport const getProductsBySubCategory =\n  (category, subCategory) => (dispatch) => {\n    dispatch({ type: SEARCH_PRODUCT_LOADING });\n  };\n","/home/guney/RalShop/frontend/src/redux/reducers/searchReducer.js",[],"/home/guney/RalShop/frontend/src/pages/ProductsByCategory.js",["544","545"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getProductsByCategory } from \"../redux/actions/searchProduct\";\nimport styled from \"styled-components\";\nimport LoadingIcon from \"../assets/loading.gif\";\nimport ListProducts from \"../components/listProducts\";\nimport ProductFilters from \"../components/ProductFilters\";\nimport { BsFilterRight } from \"react-icons/bs\";\nimport { FaTimes } from \"react-icons/fa\";\n\nconst ResultsCountSection = styled.div`\n  border-bottom: 1px solid #dbdbdb;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-bottom: 5px;\n`;\nconst ResultsCount = styled.span`\n  font-weight: bold !important;\n  font-size: 15px !important;\n\n  @media (max-width: 612px) {\n    font-size: 14px !important;\n  }\n`;\nconst Select = styled.select`\n  padding: 4px 5px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n`;\nconst ProductsContainer = styled.div`\n  margin-top: 15px;\n`;\nconst FilterButton = styled.button`\n  display: none;\n\n  &:focus {\n    outline: 0;\n  }\n`;\nconst FiltersSection = styled.div`\n  position: -webkit-sticky;\n  position: sticky;\n  top: 100px;\n  z-index: 1;\n\n  @media (max-width: 767px) {\n    position: static;\n    z-index: 0;\n    top: 0;\n\n    ${FilterButton} {\n      display: block;\n    }\n  }\n`;\nconst CloseButton = styled.button`\n  display: none;\n  user-select: none;\n  border-radius: 50%;\n  border: none;\n  background: none;\n  transition: 0.3s;\n  position: relative;\n  left: -5px;\n  font-size: 22px;\n\n  &:focus {\n    outline: 0;\n  }\n\n  &:hover {\n    background: #dbdbdb;\n  }\n`;\nconst MobileSeperator = styled.div`\n  display: none;\n  padding: 0;\n  margin: 0;\n  @media (max-width: 767px) {\n    display: block;\n  }\n`;\nconst FilterHeader = styled.span`\n  font-weight: bold;\n  font-size: 20px;\n`;\nconst DesktopFilterSection = styled.div`\n  transition: 0.5s;\n\n  @media (max-width: 767px) {\n    ${CloseButton} {\n      display: block;\n    }\n\n    position: fixed;\n    top: 0;\n    left: 0;\n    background: white;\n    border-left: 1px solid #dbdbdb;\n    width: 0;\n    z-index: 99999;\n    height: 100vh;\n    padding: 0;\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n`;\n\nconst ProductsByCategory = () => {\n  const dispatch = useDispatch();\n  const Search = useSelector((state) => state.Search);\n  const { category, subCategory } = useParams();\n  const [listProducts, setListProducts] = useState([]);\n  const [sort, setSort] = useState(\"default\");\n  const [isFiltersSectionOpen, setIsFiltersSectionOpen] = useState(false);\n  const [windowSize, setWindowSize] = useState(window.innerWidth);\n  const [SUBCATEGORY, setSUBCATEGORY] = useState(subCategory);\n\n  useEffect(() => {\n    setSUBCATEGORY(subCategory);\n  }, [subCategory]);\n\n  useEffect(() => {\n    const getWidth = () => {\n      setWindowSize(window.innerWidth);\n    };\n    window.addEventListener(\"resize\", getWidth);\n\n    return () => {\n      window.removeEventListener(\"resize\", getWidth);\n    };\n  }, [windowSize]);\n\n  useEffect(() => {\n    dispatch(getProductsByCategory(category));\n  }, [category]);\n\n  useEffect(() => {\n    setListProducts([...listProducts].sort((a, b) => sortProducts(a, b)));\n  }, [sort]);\n\n  let sortProducts = (a, b) => {\n    if (sort === \"dateDesc\" || sort === \"default\") {\n      return Date.parse(b.createdAt) - Date.parse(a.createdAt);\n    }\n    if (sort === \"dateAsc\") {\n      return Date.parse(a.createdAt) - Date.parse(b.createdAt);\n    }\n    if (sort === \"priceDesc\") {\n      return b.price - a.price;\n    }\n    if (sort === \"priceAsc\") {\n      return a.price - b.price;\n    }\n    if (sort === \"ratingDesc\") {\n      return b.rating - a.rating;\n    }\n    if (sort === \"ratingAsc\") {\n      return a.rating - b.rating;\n    }\n    if (sort === \"wishlistDesc\") {\n      return b.wishlistCount - a.wishlistCount;\n    }\n    if (sort === \"wishlistAsc\") {\n      return a.wishlistCount - b.wishlistCount;\n    }\n    if (sort === \"ordersDesc\") {\n      return b.ordersCount - a.ordersCount;\n    }\n    if (sort === \"ordersAsc\") {\n      return a.ordersCount - b.ordersCount;\n    }\n  };\n\n  if (Search.loading) {\n    return (\n      <div className=\"d-flex justify-content-center\">\n        <img src={LoadingIcon} alt=\"loading spinner\" height=\"120\" width=\"120\" />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-md-3 mb-3\">\n          <FiltersSection>\n            <DesktopFilterSection\n              style={\n                windowSize < 768\n                  ? isFiltersSectionOpen\n                    ? {\n                        padding: \"10px 15px\",\n                        width: \"55%\",\n                        borderRight: \"1px solid #dbdbdb\",\n                      }\n                    : { padding: \"0\", width: \"0\", borderRight: \"0\" }\n                  : { padding: \"3px\", width: \"auto\" }\n              }\n            >\n              <section style={{ display: \"flex\", alignItems: \"center\" }}>\n                <CloseButton onClick={() => setIsFiltersSectionOpen(false)}>\n                  <FaTimes />\n                </CloseButton>\n                <FilterHeader>Filters</FilterHeader>\n              </section>\n              <MobileSeperator>\n                <hr style={{ margin: \"8px 0\", padding: \"0\" }} />\n              </MobileSeperator>\n              <ProductFilters\n                DefaultProducts={Search.products}\n                Brands={Search.brandsOfResults}\n                Sellers={Search.sellers}\n                Categories={Search.categories}\n                setListProducts={setListProducts}\n                selectedCategory={SUBCATEGORY}\n                Brand={\"none\"}\n                isCategoryPage={true}\n              />\n            </DesktopFilterSection>\n            <FilterButton\n              className=\"default-btn\"\n              onClick={() =>\n                isFiltersSectionOpen\n                  ? setIsFiltersSectionOpen(false)\n                  : setIsFiltersSectionOpen(true)\n              }\n            >\n              <BsFilterRight style={{ fontWeight: \"bold\" }} /> Filters\n            </FilterButton>\n          </FiltersSection>\n        </div>\n        <div className=\"col-md-9\">\n          <ResultsCountSection>\n            <ResultsCount>{category}</ResultsCount>\n            <Select\n              name=\"sort\"\n              id=\"sort\"\n              value={sort}\n              onChange={(e) => setSort(e.target.value)}\n            >\n              <option value=\"default\">Sort By</option>\n              <option value=\"dateDesc\">Date (Newest First)</option>\n              <option value=\"dateAsc\">Date (Oldest First)</option>\n              <option value=\"priceDesc\">Price (Highest First)</option>\n              <option value=\"priceAsc\">Price (Lowest First)</option>\n              <option value=\"ratingDesc\">Rating (Highest First)</option>\n              <option value=\"ratingAsc\">Rating (Lowest First)</option>\n            </Select>\n          </ResultsCountSection>\n          <ProductsContainer>\n            {listProducts.length < 1 ? (\n              <div style={{ textAlign: \"center\" }}>\n                <h2>No Products Found In {category} Category</h2>\n              </div>\n            ) : (\n              <ListProducts\n                DefaultProducts={Search.products}\n                ListedProducts={listProducts}\n              />\n            )}\n          </ProductsContainer>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductsByCategory;\n","/home/guney/RalShop/frontend/src/pages/ProductsBySubCategory.js",[],"/home/guney/RalShop/frontend/src/components/seller/orderList.js",["546","547"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport LoadingIcon from \"../../assets/loading.gif\";\nimport { useSelector } from \"react-redux\";\nimport { BsClipboard } from \"react-icons/bs\";\nimport { CgDetailsMore } from \"react-icons/cg\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { priceConverter } from \"../../utils/helpers\";\nimport Modal from \"../messageBox\";\nimport OrderDetail from \"../orderDetailsModal\";\nimport {\n  denyOrderCancelRequest,\n  cancelOrder,\n  changeOrderStatus,\n} from \"../../redux/actions/sellerActions\";\n\nconst Container = styled.div`\n  margin-left: 15px;\n  border: 1px solid #dbdbdb;\n  background: rgb(253, 253, 253);\n  border-radius: 3px;\n  box-shadow: rgba(0, 0, 0, 0.05) 0px 0px 0px 1px;\n  margin-top: 20px;\n  min-height: 280px;\n\n  @media (max-width: 1200px) {\n    margin-left: 8px;\n  }\n`;\nconst Caption = styled.p`\n  margin-left: 15px;\n  margin-top: 15px;\n  margin-bottom: -5px;\n\n  @media (max-width: 1200px) {\n    margin-left: 8px;\n  }\n`;\nconst CopyButton = styled.button`\n  margin: 0;\n  padding: 0;\n\n  &:focus {\n    outline: 0;\n  }\n`;\nconst ColorPreview = styled.span`\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  cursor: pointer;\n  display: inline-block;\n  margin: 1px;\n  border: 1px solid black;\n  position: relative;\n`;\nconst Select = styled.select`\n  padding: 4px 5px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 100%;\n`;\nconst DetailsButton = styled.button`\n  backgrond: transparent;\n  border: transparent;\n  font-size: 13px;\n\n  &:focus {\n    outline: 0;\n  }\n`;\n\nconst OrderList = ({\n  Orders,\n  onlyShowCancelRequests = false,\n  onlyCancelled = false,\n}) => {\n  const { loading } = useSelector((state) => state.Seller);\n  const [selectedOrder, setSelectedOrder] = useState();\n  const [newStatus, setNewStatus] = useState(\"\");\n  const [isConfirmationModalOpen, setIsConfirmaitonModalOpen] = useState(false);\n  const [isDenyCancelRequestModalOpen, setIsDenyCancelRequestModalOpen] =\n    useState(false);\n  const [isCancelOrderModalOpen, setIsCancelModalOpen] = useState(false);\n  const [statusList, setStatusList] = useState([\n    { value: \"waitingConfirmation\", text: \"Waiting For Seller Confirmation\" },\n    { value: \"confirmed\", text: \"Order Confirmed By Seller\" },\n    { value: \"cancelRequest\", text: \"Customer, Requested To Cancel The Order\" },\n    { value: \"cancelled\", text: \"Order Is Cancelled\" },\n    { value: \"packing\", text: \"Order Is Packing\" },\n    { value: \"shipped\", text: \"Order Is Shipped\" },\n    { value: \"delivered\", text: \"Order Is Delivered\" },\n  ]);\n  const history = useHistory();\n  const [isOrderDetailsOpen, setIsOrderDetailsOpen] = useState(false);\n  const [selectedOrderGroup, setSelectedOrderGroup] = useState([]);\n\n  function Clipboard_CopyTo(value) {\n    var tempInput = document.createElement(\"input\");\n    tempInput.value = value;\n    document.body.appendChild(tempInput);\n    tempInput.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(tempInput);\n  }\n\n  function changeStatus(e, itemId = \"\", groupId) {\n    if (e.target.value === \"cancelled\") {\n      setNewStatus(e.target.value);\n      setSelectedOrder(groupId);\n      setIsCancelModalOpen(true);\n    } else {\n      setNewStatus(e.target.value);\n      setSelectedOrder(groupId);\n      setIsConfirmaitonModalOpen(true);\n    }\n  }\n\n  function handleOrderCancellation(status, groupId) {\n    if (status === \"cancelled\") {\n      setSelectedOrder(groupId);\n      setIsCancelModalOpen(true);\n    }\n    if (status === \"deny\") {\n      setSelectedOrder(groupId);\n      setIsDenyCancelRequestModalOpen(true);\n    }\n  }\n\n  function getOrderDetails(groupId) {\n    setSelectedOrderGroup([\n      ...Orders.filter((item) => item.groupId === groupId),\n    ]);\n    setIsOrderDetailsOpen(true);\n  }\n\n  if (loading) {\n    return (\n      <Container\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <img\n          src={LoadingIcon}\n          alt=\"loading icon spinning\"\n          height=\"100\"\n          width=\"100\"\n        />\n      </Container>\n    );\n  }\n\n  if (Orders.length < 1) {\n    return (\n      <Container\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <p className=\"lead\">You Don't Have Any Orders</p>\n      </Container>\n    );\n  }\n\n  return (\n    <>\n      {isOrderDetailsOpen && (\n        <OrderDetail\n          setIsOrderDetailsModalOpen={setIsOrderDetailsOpen}\n          orderGroup={selectedOrderGroup}\n        />\n      )}\n      {isCancelOrderModalOpen && (\n        <Modal\n          isRedux={true}\n          action={cancelOrder}\n          message={\n            \"If you cancel the order the customer will be refunded. Do you want to cancel this order?\"\n          }\n          setIsModalOpen={setIsCancelModalOpen}\n          header={\"Cancel Order\"}\n          btnText={\"Cancel Order\"}\n          param={selectedOrder}\n        />\n      )}\n      {isDenyCancelRequestModalOpen && (\n        <Modal\n          isRedux={true}\n          action={denyOrderCancelRequest}\n          message={\n            \"If you cancel this request. Order's status will be set to 'Confirmed By Seller'. No body will be refunded. Do you want to cancel?\"\n          }\n          setIsModalOpen={setIsDenyCancelRequestModalOpen}\n          header={\"Deny Cancellation\"}\n          btnText={\"Deny Cancellation\"}\n          param={selectedOrder}\n        />\n      )}\n      {isConfirmationModalOpen && (\n        <Modal\n          isRedux={true}\n          action={changeOrderStatus}\n          message={\n            \"Any status change of order will be sent as mail to the customer. Do you want to change status?\"\n          }\n          setIsModalOpen={setIsConfirmaitonModalOpen}\n          header={\"Change Status\"}\n          btnText={\"Change Status\"}\n          param={selectedOrder}\n          secondParam={newStatus}\n        />\n      )}\n      <Caption>List of {Orders.length} orders</Caption>\n      <Container>\n        <div className=\"table-responsive\">\n          <table className=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\" style={{ minWidth: \"30px\" }}>\n                  ID\n                </th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Image</th>\n                <th scope=\"col\">Price</th>\n                <th scope=\"col\">Brand</th>\n                <th scope=\"col\">Color</th>\n                <th scope=\"col\">Category</th>\n                <th scope=\"col\">Stock</th>\n                <th scope=\"col\">Status</th>\n                <th scope=\"col\" style={{ fontSize: \"12px\" }}>\n                  Order Details\n                </th>\n                <th scope=\"col\">Date</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Orders.map((item, index) => {\n                return (\n                  <tr key={index}>\n                    <td\n                      valign=\"middle\"\n                      style={{ minWidth: \"5px\", fontSize: \"12px\" }}\n                    >\n                      <CopyButton\n                        onClick={() => Clipboard_CopyTo(item.order._id)}\n                      >\n                        <BsClipboard />\n                        <br />\n                        Copy ID\n                      </CopyButton>\n                    </td>\n                    <td\n                      valign=\"middle\"\n                      style={{ fontSize: \"13px\", minWidth: \"200px\" }}\n                      className=\"product-actions-product-name\"\n                    >\n                      <b\n                        className=\"product-actions-product-name\"\n                        onClick={() =>\n                          history.push(\n                            `/product/${item.order.Product.product._id}`\n                          )\n                        }\n                      >\n                        {item.order.Product.product.title}\n                      </b>\n                    </td>\n                    <td>\n                      <img\n                        src={item.order.Product.product.images[0].url}\n                        alt=\"product\"\n                        height=\"80\"\n                        width=\"80\"\n                        style={{\n                          objectFit: \"contain\",\n                          display: \"block\",\n                          margin: \"auto\",\n                        }}\n                      />\n                    </td>\n                    <td valign=\"middle\">\n                      {priceConverter(item.order.Product.product.price)}\n                    </td>\n                    <td valign=\"middle\">{item.order.Product.product.brand}</td>\n                    <td valign=\"middle\">\n                      <ColorPreview\n                        style={{ background: \"#\" + item.order.Product.color }}\n                      />\n                    </td>\n                    <td valign=\"middle\">\n                      {item.order.Product.product.subCategory}\n                    </td>\n                    <td valign=\"middle\">{item.order.Product.product.stock}</td>\n                    <td valign=\"middle\">\n                      {onlyCancelled ? (\n                        item.order.status.toUpperCase()\n                      ) : onlyShowCancelRequests ? (\n                        <Select\n                          value={item.order.status}\n                          onChange={(e) =>\n                            handleOrderCancellation(\n                              e.target.value,\n                              item.groupId\n                            )\n                          }\n                        >\n                          <option value=\"cancelRequest\">\n                            Customer, Requested To Cancel The Order\n                          </option>\n                          <option value=\"cancelled\">Cancel Order</option>\n                          <option value=\"deny\">Deny Cancel Request</option>\n                        </Select>\n                      ) : item.order.status === \"delivered\" ? (\n                        item.order.status.toUpperCase()\n                      ) : (\n                        <Select\n                          value={item.order.status}\n                          onChange={(e) =>\n                            changeStatus(e, item.order._id, item.groupId)\n                          }\n                        >\n                          {statusList.map((status, index) => {\n                            return (\n                              status.value !== \"cancelRequest\" && (\n                                <option key={index} value={status.value}>\n                                  {status.text}\n                                </option>\n                              )\n                            );\n                          })}\n                        </Select>\n                      )}\n                    </td>\n                    <td valign=\"middle\">\n                      <DetailsButton\n                        onClick={() => getOrderDetails(item.groupId)}\n                      >\n                        <CgDetailsMore /> Details\n                      </DetailsButton>\n                    </td>\n                    <td valign=\"middle\">\n                      {moment(item.order.createdAt).format(\"ll\")}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default OrderList;\n","/home/guney/RalShop/frontend/src/pages/seller/cancelRequestOrders.js",["548"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getSellerOrders } from \"../../redux/actions/sellerActions\";\nimport Navbar from \"../../components/seller/productActionsPageNavbar\";\nimport OrderList from \"../../components/seller/orderList\";\nimport Filters from \"../../components/seller/productActionsFilters\";\n\nconst CancelRequestOrders = () => {\n  const { orders } = useSelector((state) => state.Seller);\n  const [listProducts, setListProducts] = useState(orders);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(getSellerOrders()), []);\n  useEffect(\n    () =>\n      setListProducts([\n        ...orders.filter((item) => item.order.status === \"cancelRequest\"),\n      ]),\n    [orders]\n  );\n\n  return (\n    <>\n      <Navbar isOrders={true} isCancelRequestOrdersPage={true} />\n      <Filters\n        setListProducts={setListProducts}\n        listProducts={listProducts}\n        DefaultProducts={orders.filter(\n          (item) => item.order.status === \"cancelRequest\"\n        )}\n        isOrders={true}\n      />\n      <OrderList Orders={listProducts} onlyShowCancelRequests={true} />\n    </>\n  );\n};\n\nexport default CancelRequestOrders;\n","/home/guney/RalShop/frontend/src/components/HomePageCategoriesBox.js",["549"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Electronic from \"../assets/electronic.jpeg\";\nimport Man from \"../assets/man.jpg\";\nimport Home from \"../assets/home.jpeg\";\nimport Kid from \"../assets/kid.jpg\";\nimport Woman from \"../assets/Woman.png\";\nimport Cosmetic from \"../assets/cosmetic.jpeg\";\nimport WatchAndAccessories from \"../assets/watchAndAccessories.jpeg\";\nimport ShoesAndBag from \"../assets/shoesAndBag.jpeg\";\nimport Vehicle from \"../assets/Vehicle.jpeg\";\n\nconst CategoriesContainer = styled.div`\n  background: white;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  overflow-x: auto;\n  padding: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 70%;\n  margin: auto;\n\n  @media (max-width: 1000px) {\n    width: 90%;\n  }\n\n  @media (max-width: 767px) {\n    width: 100%;\n    min-width: 100%;\n  }\n\n  &::-webkit-scrollbar {\n    height: 3px;\n  }\n  &::-webkit-scrollbar-track {\n    background: #dddddd;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: #acaaaa;\n  }\n  &::-webkit-scrollbar-thumb:hover {\n    background: #c2c2c2;\n  }\n`;\nconst CategoryItemSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 11px;\n  text-align: center;\n  white-space: nowrap;\n  margin-left: 7px;\n  cursor: pointer;\n`;\nconst CategoryCircle = styled.div`\n  width: 65px;\n  height: 65px;\n  border-radius: 50%;\n  background: #dedede;\n`;\nconst CategoryImage = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  margin: 0;\n  padding: 0;\n  object-fit: cover;\n`;\n\nconst HomePageCategoriesBox = () => {\n  const history = useHistory();\n  const [categories, setCategories] = useState([\n    { name: \"Woman\", img: Woman, link: \"/category/Woman\" },\n    { name: \"Man\", img: Man, link: \"/category/Man\" },\n    { name: \"Kid\", img: Kid, link: \"/category/Kid\" },\n    { name: \"Home\", img: Home, link: \"/category/Home\" },\n    { name: \"Cosmetic\", img: Cosmetic, link: \"/category/Cosmetic\" },\n    {\n      name: \"Shoes & Bag\",\n      img: ShoesAndBag,\n      link: \"/category/Shoes%20&%20Bag\",\n    },\n    {\n      name: \"Watch & Accessories\",\n      img: WatchAndAccessories,\n      link: \"/category/Watch%20&%20Bag\",\n    },\n    { name: \"Electronic\", img: Electronic, link: \"/category/Electronic\" },\n    { name: \"Vehicle\", img: Vehicle, link: \"/category/Vehicle\" },\n  ]);\n\n  return (\n    <div>\n      <CategoriesContainer>\n        {categories.map((item, index) => {\n          return (\n            <CategoryItemSection\n              key={index}\n              onClick={() => history.push(item.link)}\n            >\n              <CategoryCircle\n                style={\n                  index === categories.length - 1\n                    ? { marginRight: \"10px\", marginLeft: \"7px\" }\n                    : {}\n                }\n              >\n                <CategoryImage src={item.img} alt=\"category item\" />\n              </CategoryCircle>\n              <p\n                style={\n                  index === categories.length - 1\n                    ? { margin: \"0\", marginLeft: \"-10px\" }\n                    : { margin: \"0\" }\n                }\n              >{`${item.name.substring(0, 11)}${\n                item.name.length > 11 ? \"...\" : \"\"\n              }`}</p>\n            </CategoryItemSection>\n          );\n        })}\n      </CategoriesContainer>\n    </div>\n  );\n};\n\nexport default HomePageCategoriesBox;\n","/home/guney/RalShop/frontend/src/components/HomePageOnlyLoggedInUsers.js",["550","551","552","553"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logoutUser } from \"../redux/actions/authActions\";\nimport ModalBox from \"./messageBox\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport NoProfilePhoto from \"../assets/noProfilePic.jpg\";\nimport { MdSettings } from \"react-icons/md\";\nimport { BiLogOut, BiRightArrowAlt } from \"react-icons/bi\";\nimport LoadingIcon from \"../assets/loading.gif\";\nimport { priceConverter } from \"../utils/helpers\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { TiTick, TiCancel } from \"react-icons/ti\";\nimport { FcPackage, FcShipped } from \"react-icons/fc\";\nimport { MdLocalShipping } from \"react-icons/md\";\nimport { getChatrooms, setActiveChatroom } from \"../redux/actions/chatActions\";\nimport Modal from \"./messageBox\";\nimport { MdNotifications } from \"react-icons/md\";\nimport { BiMessageDetail } from \"react-icons/bi\";\nimport { HiDotsVertical } from \"react-icons/hi\";\nimport { getOrders } from \"../redux/actions/orderActions\";\n\nconst ProfileBox = styled.div`\n  background: white;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  padding: 10px;\n  height: 140px;\n`;\nconst Box = styled.div`\n  background: white;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  padding: 10px;\n  height: 290px;\n`;\nconst WishlistBox = styled.div`\n  background: white;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  padding: 10px;\n  height: 140px;\n`;\nconst Row = styled.div`\n  @media (max-width: 500px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\nconst RowItem = styled.div`\n  padding: 4px;\n\n  @media (max-width: 500px) {\n    width: 90%;\n    margin: auto;\n  }\n\n  @media (max-width: 485px) {\n    width: 100%;\n  }\n`;\nconst ProfilePhotoSection = styled.div`\n  height: 100px;\n  width: 100px;\n  object-fit: cover;\n  border-radius: 50%;\n  border: 1px solid #dedede;\n  background: #efefef;\n  margin: auto;\n`;\nconst ProfileImage = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  border-radius: 50%;\n`;\nconst ProfileButton = styled.button`\n  margin: 0;\n  background: none;\n  border: none;\n  padding: 0;\n  font-size: 14px;\n  margin-right: 10px !important;\n  margin-top: -5px;\n\n  &:focus {\n    outline: 0;\n  }\n`;\nconst WishlistTop = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nconst BoxTop = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nconst ArrowButton = styled.button`\n  background: none;\n  border: none;\n  padding: 0;\n  margin: 0;\n  transition: 0.3s;\n  border-radius: 50%;\n\n  &:hover {\n    background: #dedede;\n  }\n\n  &:focus {\n    outline: 0;\n  }\n`;\nconst WishlistInner = styled.div`\n  margin: -10px;\n  margin-top: 2px;\n  height: 90px;\n  overflow-y: hidden;\n  overflow-x: auto;\n  padding-left: 10px;\n  display: flex;\n\n  &::-webkit-scrollbar {\n    height: 4px;\n  }\n  &::-webkit-scrollbar-track {\n    background: #dddddd;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: #acaaaa;\n  }\n  &::-webkit-scrollbar-thumb:hover {\n    background: #c2c2c2;\n  }\n`;\nconst BoxInner = styled.div`\n  margin: -10px;\n  margin-top: 2px;\n  height: 245px;\n  overflow-y: auto;\n  overflow-x: hidden;\n  padding-left: 10px;\n  display: flex;\n\n  &::-webkit-scrollbar {\n    height: 2px;\n    width: 2px;\n  }\n  &::-webkit-scrollbar-track {\n    background: #dddddd;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: #acaaaa;\n  }\n  &::-webkit-scrollbar-thumb:hover {\n    background: #c2c2c2;\n  }\n`;\nconst WishlistImage = styled.img`\n  min-height: 90px;\n  min-width: 140px;\n  object-fit: cover;\n  border-radius: 5px;\n  border-bottom-left-radius: 5px;\n  margin-right: 20px;\n  border: 1px solid #dbdbdb;\n  cursor: pointer;\n`;\nconst OrderBox = styled.div``;\nconst OrderItem = styled.div`\n  width: 82%;\n  margin: auto;\n  padding: 3px 8px;\n  height: 200px;\n  position: relative;\n  @media (max-width: 375px) {\n    width: 98%;\n  }\n  @media (max-width: 1000px) {\n    height: 320px;\n  }\n  @media (max-width: 767px) {\n    width: 94%;\n    height: 265px;\n  }\n  @media (max-width: 500px) {\n    height: 280px;\n  }\n  @media (max-width: 375px) {\n    width: 96%;\n    height: 300px;\n  }\n  @media (max-width: 360px) {\n    height: 320px;\n  }\n`;\nconst OrderItemImage = styled.img`\n  width: 100%;\n  height: 120px;\n  object-fit: contain;\n`;\nconst OrderItemTitle = styled.p`\n  font-size: 14px;\n  color: var(--text-muted);\n  margin-top: 5px;\n  overflow: hidden;\n  break-word: pre;\n  max-height: 85px;\n`;\nconst OrderItemPrice = styled.p`\n  font-size: 15px;\n  font-weight: bold;\n  margin-top: -12px;\n`;\nconst OrderItemColorAndQty = styled.span`\n  display: inline-block;\n  font-size: 13.5px;\n  font-weight: normal;\n  position: relative;\n  bottom: 2px;\n  color: var(--text-muted);\n`;\nconst ColorPreview = styled.span`\n  height: 15px;\n  width: 15px;\n  border-radius: 50%;\n  cursor: pointer;\n  display: inline-block;\n  margin: 1px;\n  border: 1px solid black;\n  position: relative;\n  top: 2.5px;\n  left: 3px;\n`;\nconst OrderRow = styled.div`\n  padding: 3px 8px;\n  overflow: hidden;\n  -webkit-transition: max-height 0.8s;\n  -moz-transition: max-height 0.8s;\n  transition: max-height 0.8s;\n  transition-delay: 0;\n`;\nconst ChatCount = styled.p`\n  font-size: 15.5px;\n  color: var(--text-muted);\n`;\nconst InfoText = styled.p`\n  margin: auto;\n  font-weight: 500;\n  color: var(--text-muted);\n  text-align: center;\n`;\nconst ChatroomBox = styled.div`\n  cursor: pointer;\n  display: flex;\n  transition: 0.2s;\n  padding: 5px;\n  &:hover {\n    background: #e9e9e9;\n  }\n  position: relative;\n`;\nconst CompanyName = styled.p`\n  font-weight: 500;\n`;\nconst FullName = styled.p`\n  margin-top: -20px;\n  color: var(--text-muted);\n  font-size: 15px;\n  font-weight: 400;\n`;\nconst LastMessage = styled.p`\n  color: var(--text-muted);\n  font-weight: 300;\n  margin-top: -15px;\n`;\nconst HomePageOnlyLoggedInUsers = () => {\n  const history = useHistory();\n  const { user } = useSelector((state) => state.Auth);\n  const { inSellerRoute } = useSelector((state) => state.Seller);\n  const { Chat } = useSelector((state) => state);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { products } = useSelector((state) => state.Wishlist);\n  const dispatch = useDispatch();\n  const { orders, loading: isLoading } = useSelector((state) => state.Order);\n  const [notifications, setNotifications] = useState([]);\n\n  useEffect(() => {\n    dispatch(getOrders());\n    dispatch(getChatrooms(inSellerRoute));\n  }, []);\n\n  useEffect(() => {\n    setNotifications(Chat.notifications);\n  }, [Chat.notifications]);\n\n  const activeChat = (roomId, participant) => {\n    dispatch(setActiveChatroom(roomId, participant, inSellerRoute));\n    history.push(\n      inSellerRoute\n        ? `/chat/seller/message/${roomId}`\n        : `/chat/message/${roomId}`\n    );\n  };\n\n  return (\n    <Row className=\"mt-4 row\">\n      {isModalOpen && (\n        <ModalBox\n          isRedux={true}\n          action={logoutUser}\n          message={\"Do you want to logout?\"}\n          setIsModalOpen={setIsModalOpen}\n          header={\"Logout\"}\n          btnText={\"Logout\"}\n        />\n      )}\n      <RowItem className=\"col-lg-4 col-md-5 col-6 mb-2\">\n        {user !== null && (\n          <ProfileBox>\n            <div className=\"row\">\n              <div className=\"col-sm-5 col-6\">\n                <ProfilePhotoSection>\n                  <ProfileImage\n                    src={user.hasPhoto ? user.profilePhoto.url : NoProfilePhoto}\n                    alt=\"profile img\"\n                  />\n                </ProfilePhotoSection>\n              </div>\n              <div className=\"col-sm-7 col-6\">\n                <p>\n                  <b>{user.username}</b>\n                  <p\n                    className=\"m-0 p-0\"\n                    style={{\n                      marginTop: \"-8px\",\n                      color: \"var(--text-muted)\",\n                      fontSize: \"13px\",\n                    }}\n                  >\n                    Member since {moment(user.createdAt).format(\"ll\")}\n                  </p>\n                </p>\n                <ProfileButton\n                  className=\"m-0\"\n                  onClick={() => history.push(\"/account/settings\")}\n                >\n                  <MdSettings\n                    style={{ display: \"inline-block\", marginTop: \"-2px\" }}\n                  />{\" \"}\n                  Settings\n                </ProfileButton>\n                <ProfileButton\n                  className=\"m-0\"\n                  onClick={() => setIsModalOpen(true)}\n                >\n                  <BiLogOut /> Logout\n                </ProfileButton>\n              </div>\n            </div>\n          </ProfileBox>\n        )}\n      </RowItem>\n      <RowItem className=\"col-lg-8 col-md-7 col-6 mb-2\">\n        <WishlistBox>\n          <WishlistTop>\n            <p className=\"m-0\">\n              <b>Wishlist</b>\n            </p>\n\n            <ArrowButton onClick={() => history.push(\"/wishlist\")}>\n              <BiRightArrowAlt\n                style={{ fontSize: \"30px\", fontWeight: \"bolder\" }}\n              />\n            </ArrowButton>\n          </WishlistTop>\n          <WishlistInner\n            style={\n              products.length === 0\n                ? {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }\n                : {}\n            }\n          >\n            {products.length === 0 ? (\n              <div style={{ fontSize: \"18px\", textAlign: \"center\" }}>\n                <p style={{ margin: \"0\" }}>\n                  No products added to your wishlist.\n                </p>\n                <p style={{ margin: \"0\", fontSize: \"16px\" }}>Start Shopping.</p>\n              </div>\n            ) : (\n              products.map((item, index) => {\n                return (\n                  <WishlistImage\n                    key={index}\n                    src={item.images[0].url}\n                    alt=\"wishlist product\"\n                    onClick={() => history.push(`/product/${item._id}`)}\n                  />\n                );\n              })\n            )}\n          </WishlistInner>\n        </WishlistBox>\n      </RowItem>\n      <RowItem className=\"col-lg-8 col-md-8 col-6 mb-2\">\n        <Box>\n          <BoxTop>\n            <p className=\"m-0\">\n              <b>Last Order</b>\n            </p>\n            <ArrowButton onClick={() => history.push(\"/user/orders\")}>\n              <BiRightArrowAlt\n                style={{ fontSize: \"30px\", fontWeight: \"bolder\" }}\n              />\n            </ArrowButton>\n          </BoxTop>\n          <BoxInner\n            style={\n              isLoading || Object.keys(orders).length === 0\n                ? {\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }\n                : {}\n            }\n          >\n            {Object.keys(orders).length === 0 && !isLoading && (\n              <p style={{ fontSize: \"18px\", textAlign: \"center\" }}>\n                You don't have any orders.\n              </p>\n            )}\n            {isLoading ? (\n              <img\n                src={LoadingIcon}\n                alt=\"loading spinner\"\n                height=\"120\"\n                width=\"120\"\n              />\n            ) : (\n              Object.keys(orders).map((order, index) => {\n                if (index === 0) {\n                  return (\n                    <div key={index}>\n                      <OrderBox\n                        style={index === 0 ? { marginTop: \"35px\" } : {}}\n                      >\n                        <OrderRow className=\"row\">\n                          {orders[order][0].order.note && (\n                            <span\n                              style={{\n                                fontSize: \"14px\",\n                                color: \"var(--text-muted)\",\n                              }}\n                            >\n                              <span\n                                style={{ fontSize: \"20px\", color: \"black\" }}\n                              >\n                                <b>\n                                  <MdInfoOutline />\n                                </b>\n                              </span>{\" \"}\n                              {orders[order][0].order.note}\n                            </span>\n                          )}\n                          {orders[order].map((orderItem, idx) => {\n                            return (\n                              <div className=\"col-md-6 p-0 m-0\" key={idx}>\n                                <OrderItem>\n                                  <Link\n                                    to={`/product/${orderItem.order.Product.product._id}`}\n                                  >\n                                    <OrderItemImage\n                                      src={\n                                        orderItem.order.Product.product\n                                          .images[0].url\n                                      }\n                                      alt=\"product\"\n                                    />\n                                  </Link>\n                                  <OrderItemTitle>\n                                    <span\n                                      style={{\n                                        fontWeight: \"bold\",\n                                        color: \"#333\",\n                                      }}\n                                    >\n                                      {orderItem.order.seller.companyName}\n                                    </span>{\" \"}\n                                    {orderItem.order.Product.product.title\n                                      .length > 55\n                                      ? `${orderItem.order.Product.product.title.substring(\n                                          0,\n                                          55\n                                        )}...`\n                                      : orderItem.order.Product.product.title}\n                                  </OrderItemTitle>\n                                  <OrderItemPrice>\n                                    {priceConverter(\n                                      orderItem.order.Product.product.price\n                                    )}{\" \"}\n                                    -{\" \"}\n                                    <OrderItemColorAndQty>\n                                      qty: {orderItem.order.Product.quantity}\n                                    </OrderItemColorAndQty>\n                                    <ColorPreview\n                                      style={{\n                                        background:\n                                          \"#\" + orderItem.order.Product.color,\n                                      }}\n                                    />\n                                  </OrderItemPrice>\n                                  <OrderItemPrice\n                                    style={{\n                                      fontSize: \"14px\",\n                                    }}\n                                  >\n                                    <span\n                                      style={{\n                                        fontWeight: \"normal\",\n                                      }}\n                                    >\n                                      {orderItem.order.status ===\n                                        \"waitingConfirmation\" &&\n                                        \"Waiting confirmation by seller\"}\n                                      {orderItem.order.status ===\n                                        \"cancelRequest\" &&\n                                        \"Waiting confirmation by seller to confirm cancellation\"}\n                                      {orderItem.order.status ===\n                                        \"confirmed\" && (\n                                        <>\n                                          <TiTick\n                                            style={{\n                                              fontSize: \"18px\",\n                                              color: \"black\",\n                                              fontWeight: \"bold\",\n                                            }}\n                                          />{\" \"}\n                                          Order confirmed by the seller\n                                        </>\n                                      )}\n                                      {orderItem.order.status ===\n                                        \"cancelled\" && (\n                                        <>\n                                          <TiCancel\n                                            style={{\n                                              fontSize: \"18px\",\n                                              color: \"red\",\n                                              fontWeight: \"bold\",\n                                            }}\n                                          />{\" \"}\n                                          Order is cancelled\n                                        </>\n                                      )}\n                                      {orderItem.order.status === \"packing\" && (\n                                        <>\n                                          <FcPackage /> Order is packing\n                                        </>\n                                      )}\n                                      {orderItem.order.status === \"shipped\" && (\n                                        <>\n                                          <MdLocalShipping\n                                            style={{\n                                              fontSize: \"18px\",\n                                              fontWeight: \"bold\",\n                                            }}\n                                          />{\" \"}\n                                          Order is shipped\n                                        </>\n                                      )}\n                                      {orderItem.order.status ===\n                                        \"delivered\" && (\n                                        <>\n                                          <FcShipped\n                                            style={{\n                                              fontSize: \"18px\",\n                                              fontWeight: \"bold\",\n                                            }}\n                                          />{\" \"}\n                                          Order is delivered\n                                        </>\n                                      )}\n                                    </span>\n                                  </OrderItemPrice>\n                                </OrderItem>\n                              </div>\n                            );\n                          })}\n                        </OrderRow>\n                      </OrderBox>\n                    </div>\n                  );\n                }\n              })\n            )}\n          </BoxInner>\n        </Box>\n      </RowItem>\n      <RowItem className=\"col-lg-4 col-md-4 col-6\">\n        <Box>\n          <BoxTop>\n            <p className=\"m-0\">\n              <b>Messages</b>{\" \"}\n              {notifications.length > 0 && (\n                <MdNotifications\n                  style={{ color: \"red\", fontWeight: \"bold\", fontSize: \"20px\" }}\n                />\n              )}\n            </p>\n            <ArrowButton onClick={() => history.push(\"/chat\")}>\n              <BiRightArrowAlt\n                style={{ fontSize: \"30px\", fontWeight: \"bolder\" }}\n              />\n            </ArrowButton>\n          </BoxTop>\n          <BoxInner\n            style={\n              Chat.loading || Chat.chatrooms.length === 0\n                ? {\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }\n                : { display: \"block\" }\n            }\n          >\n            {Chat.loading ? (\n              <img\n                src={LoadingIcon}\n                alt=\"loading spinner\"\n                height=\"120\"\n                width=\"120\"\n              />\n            ) : (\n              <>\n                {Chat.chatrooms.length > 0 && (\n                  <ChatCount>{Chat.chatrooms.length} Chats</ChatCount>\n                )}\n                <div className=\"main-area\">\n                  {Chat.chatrooms.length >= 1 &&\n                    Chat.chatrooms.map((room, index) => {\n                      return (\n                        <ChatroomBox\n                          key={index}\n                          className={\n                            notifications.some(\n                              (notif) => notif.chatroom === room.chatroom._id\n                            )\n                              ? \"border-bottom chatroom-highlight\"\n                              : \"border-bottom\"\n                          }\n                          onClick={() =>\n                            activeChat(\n                              room.chatroom._id,\n                              inSellerRoute\n                                ? room.chatroom.creator\n                                : room.chatroom.participant\n                            )\n                          }\n                        >\n                          <section>\n                            <BiMessageDetail\n                              style={{\n                                height: \"30px\",\n                                width: \"30px\",\n                                marginTop: \"50%\",\n                              }}\n                            />\n                            {notifications.some(\n                              (notification) =>\n                                notification.chatroom === room.chatroom._id\n                            ) && (\n                              <MdNotifications\n                                style={{ color: \"#c9222b\", fontSize: \"22px\" }}\n                              />\n                            )}\n                          </section>\n                          <section\n                            style={{ paddingLeft: \"15px\", paddingTop: \"5px\" }}\n                          >\n                            <CompanyName>\n                              {inSellerRoute\n                                ? room.chatroom.creator.username\n                                : room.chatroom.participant.companyName}\n                            </CompanyName>\n                            {!inSellerRoute && (\n                              <FullName>\n                                {room.chatroom.participant.fullname}\n                              </FullName>\n                            )}\n                            {room.lastMessage !== null &&\n                              (room.lastMessage.isPhoto ? (\n                                <LastMessage>A Photo Has Been Sent</LastMessage>\n                              ) : (\n                                <LastMessage>\n                                  {room.lastMessage.body.length > 18\n                                    ? `${room.lastMessage.body.substring(\n                                        0,\n                                        18\n                                      )}...`\n                                    : room.lastMessage.body}\n                                </LastMessage>\n                              ))}\n                          </section>\n                          <HiDotsVertical\n                            style={{\n                              position: \"absolute\",\n                              right: \"0\",\n                              paddingTop: \"5px\",\n                              fontSize: \"24px\",\n                            }}\n                          />\n                        </ChatroomBox>\n                      );\n                    })}\n                </div>\n              </>\n            )}\n            {Chat.chatrooms.length === 0 && !Chat.loading && (\n              <p style={{ fontSize: \"18px\" }}>\n                You didn't send message to any seller\n              </p>\n            )}\n          </BoxInner>\n        </Box>\n      </RowItem>\n    </Row>\n  );\n};\n\nexport default HomePageOnlyLoggedInUsers;\n","/home/guney/RalShop/frontend/src/components/HomePageSection.js",["554"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\n\nconst ShoppingCartBox = styled.div`\n  background: white;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  padding: 10px;\n  height: 155px;\n`;\nconst LastVisitedBox = styled.div`\n  background: white;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  padding: 10px;\n  height: 155px;\n`;\nconst Row = styled.div`\n  @media (max-width: 500px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\nconst RowItem = styled.div`\n  padding: 4px;\n\n  @media (max-width: 500px) {\n    width: 90%;\n    margin: auto;\n  }\n\n  @media (max-width: 485px) {\n    width: 100%;\n  }\n`;\nconst BoxTop = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nconst ArrowButton = styled.button`\n  background: none;\n  border: none;\n  padding: 0;\n  margin: 0;\n  transition: 0.3s;\n  border-radius: 50%;\n\n  &:hover {\n    background: #dedede;\n  }\n\n  &:focus {\n    outline: 0;\n  }\n`;\nconst BoxInner = styled.div`\n  margin: -10px;\n  margin-top: 2px;\n  height: 90px;\n  overflow-y: hidden;\n  overflow-x: auto;\n  padding-left: 10px;\n  display: flex;\n\n  &::-webkit-scrollbar {\n    height: 4px;\n  }\n  &::-webkit-scrollbar-track {\n    background: #dddddd;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: #acaaaa;\n  }\n  &::-webkit-scrollbar-thumb:hover {\n    background: #c2c2c2;\n  }\n`;\nconst BoxImage = styled.img`\n  min-height: 90px;\n  min-with: 150px;\n  max-width: 150px;\n  object-fit: cover;\n  border-radius: 5px;\n  border-bottom-left-radius: 5px;\n  margin-right: 20px;\n  border: 1px solid #dbdbdb;\n  cursor: pointer;\n`;\n\nconst HomePageSection = () => {\n  const history = useHistory();\n  const { products } = useSelector((state) => state.Cart);\n  const [lastVisited, setLastVisited] = useState(\n    JSON.parse(localStorage.getItem(\"lastVisited\")) || []\n  );\n\n  return (\n    <Row className=\"mt-2 row\">\n      <RowItem className=\"col-lg-7 col-sm-6 col-6 mb-2\">\n        <ShoppingCartBox>\n          <BoxTop>\n            <p className=\"m-0\">\n              <b>Shopping Cart</b>\n            </p>\n            <ArrowButton onClick={() => history.push(\"/cart\")}>\n              <BiRightArrowAlt\n                style={{ fontSize: \"30px\", fontWeight: \"bolder\" }}\n              />\n            </ArrowButton>\n          </BoxTop>\n          <BoxInner>\n            {products.map((item, index) => {\n              return (\n                <BoxImage\n                  src={item.image}\n                  alt=\"Shopping cart product\"\n                  key={index}\n                  onClick={() => history.push(`/product/${item.product}`)}\n                />\n              );\n            })}\n          </BoxInner>\n          <p\n            style={{\n              margin: \"0\",\n              marginTop: \"12px\",\n              cursor: \"pointer\",\n              color: \"var(--text-muted)\",\n              fontSize: \"13px\",\n            }}\n            onClick={() => history.push(\"/checkout\")}\n          >\n            End Shopping\n          </p>\n        </ShoppingCartBox>\n      </RowItem>\n      <RowItem className=\"col-lg-5 col-sm-6 col-6\">\n        <LastVisitedBox>\n          <BoxTop>\n            <p className=\"m-0\">\n              <b>Last Visited Products</b>\n            </p>\n          </BoxTop>\n          <BoxInner>\n            {lastVisited.map((item, index) => {\n              return (\n                <BoxImage\n                  src={item.img}\n                  alt=\"Last visited product\"\n                  key={index}\n                  onClick={() => history.push(`/product/${item._id}`)}\n                />\n              );\n            })}\n          </BoxInner>\n        </LastVisitedBox>\n      </RowItem>\n    </Row>\n  );\n};\n\nexport default HomePageSection;\n","/home/guney/RalShop/frontend/src/components/seller/sellerHomePageSection.js",["555"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport { MdLocationOn, MdPerson } from \"react-icons/md\";\nimport { BiLogOut, BiRightArrowAlt, BiMoney } from \"react-icons/bi\";\nimport { BsGraphUp } from \"react-icons/bs\";\nimport { FaUserPlus, FaShoppingCart } from \"react-icons/fa\";\nimport { FiBox } from \"react-icons/fi\";\nimport LoadingIcon from \"../../assets/loading.gif\";\nimport Modal from \"../messageBox\";\nimport { sellerLogout } from \"../../redux/actions/sellerActions\";\nimport { priceConverter } from \"../../utils/helpers\";\n\nconst BoxTop = styled.div`\n  position: relative;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\nconst BoxHeader = styled.h5`\n  @media (max-width: 576px) {\n    font-size: 17px !important;\n  }\n\n  @media (max-width: 372px) {\n    font-size: 16px !important;\n  }\n`;\nconst IconBox = styled.div`\n  background: #333;\n  color: white;\n  border-radius: 50%;\n  height: 30px;\n  width: 30px;\n  font-size: 17px;\n  display: flex;\n  justify-content: center;\n  margin-top: -8px;\n  align-items: center;\n`;\nconst RevenueBox = styled.div`\n  background: white;\n  border-radius: 12px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  padding: 8px;\n  position: relative;\n  height: 165px;\n  margin-top: 15px;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  height: 120px;\n`;\nconst ProductBox = styled.div`\n  background: white;\n  border-radius: 12px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  padding: 8px;\n  position: relative;\n  height: 165px;\n  margin-top: 15px;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  height: 120px;\n`;\nconst ProfileBox = styled.div`\n  background: white;\n  border-radius: 12px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  padding: 8px;\n  position: relative;\n  display: flex;\n\n  overflow: hidden;\n  height: 165px;\n\n  @media (max-width: 460px) {\n    width: 100%;\n  }\n`;\nconst RatingBox = styled.div`\n  height: 90px;\n  width: 90px;\n  border: 5px solid rgb(255, 215, 0);\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-top: 5px;\n  margin: auto;\n`;\nconst ProfileBoxRatingSection = styled.div`\n  position: relative;\n  top: 0px;\n  left: 0;\n  width: 110px;\n`;\nconst ReviewCount = styled.p`\n  margin: 0;\n  margin-top: 3px;\n  font-size: 15px;\n  text-align: center;\n`;\nconst IncreaseText = styled.p`\n  margin: 0;\n  margin-top: -8px;\n  font-size: 15px;\n`;\n\nconst SellerHomePageSections = () => {\n  const { shop } = useSelector((state) => state.Seller);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <>\n      {isModalOpen && (\n        <Modal\n          isRedux={true}\n          action={sellerLogout}\n          message={\"Do you want to logout?\"}\n          setIsModalOpen={setIsModalOpen}\n          header={\"Log out\"}\n          btnText={\"Log out\"}\n        />\n      )}\n      <div className=\"row\">\n        {shop !== null ? (\n          <>\n            <div className=\"col-lg-6 col-md-8 col-sm-8 m-auto col-12\">\n              <ProfileBox>\n                {shop !== null ? (\n                  <>\n                    <ProfileBoxRatingSection>\n                      <RatingBox>\n                        <h3 style={{ fontWeight: \"bold\" }}>\n                          {shop.rating.toFixed(1)}\n                        </h3>\n                        <span> /5</span>\n                      </RatingBox>\n                      <ReviewCount>{shop.reviewCount} reviews</ReviewCount>\n                    </ProfileBoxRatingSection>\n                    <div style={{ marginLeft: \"10px\" }}>\n                      <h2>\n                        {shop.companyName}\n                        <sup style={{ fontSize: \"15px\" }}>{shop.country}</sup>\n                      </h2>\n                      <p\n                        style={{\n                          fontSize: \"14px\",\n                          color: \"var(--text-muted)\",\n                          marginTop: \"-8px\",\n                        }}\n                      >\n                        Seller since {moment(shop.createdAt).format(\"ll\")}\n                      </p>\n                      <p style={{ marginTop: \"-12px\" }}>\n                        <MdPerson style={{ marginTop: \"-2px\" }} />{\" \"}\n                        {shop.fullname}\n                      </p>\n                      <p style={{ marginTop: \"-12px\" }}>\n                        <MdLocationOn style={{ marginTop: \"-2px\" }} />{\" \"}\n                        {`${shop.location.substring(0, 23)} ${\n                          shop.location.length > 23 ? \"...\" : \"\"\n                        }`}\n                      </p>\n\n                      <p\n                        style={{\n                          margin: \"0\",\n                          cursor: \"pointer\",\n                          fontSize: \"14px\",\n                          marginTop: \"-5px\",\n                        }}\n                        onClick={() => setIsModalOpen(true)}\n                      >\n                        <BiLogOut /> Log Out\n                      </p>\n                    </div>\n                  </>\n                ) : (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      width: \"100%\",\n                      height: \"100%\",\n                    }}\n                  >\n                    <img\n                      src={LoadingIcon}\n                      alt=\"loading\"\n                      height=\"100\"\n                      width=\"100\"\n                    />\n                  </div>\n                )}\n              </ProfileBox>\n            </div>\n            <div className=\"col-lg-3 col-sm-6\">\n              <RevenueBox>\n                <BoxTop>\n                  <h4>\n                    <b>Revenue</b>\n                  </h4>\n                  <IconBox>\n                    <BiMoney />\n                  </IconBox>\n                </BoxTop>\n                <h4>{priceConverter(shop.totalPrice)}</h4>\n                <IncreaseText\n                  className={\n                    shop.growthRate[0] === \"-\" ? \"text-danger\" : \"text-success\"\n                  }\n                >\n                  <BsGraphUp /> {shop.growthRate}%{\" \"}\n                  {`${shop.growthRate[0] === \"-\" ? \"Down\" : \"Up\"}`}\n                </IncreaseText>\n              </RevenueBox>\n            </div>\n            <div className=\"col-lg-3 col-sm-6\">\n              <ProductBox>\n                <BoxTop>\n                  <BoxHeader>\n                    <b>Last Month Revenue</b>\n                  </BoxHeader>\n                  <IconBox>\n                    <BiMoney />\n                  </IconBox>\n                </BoxTop>\n                <h4>{priceConverter(shop.lastMonthRevenue)}</h4>\n              </ProductBox>\n            </div>\n            <div className=\"col-lg-3 col-md-4 col-6\">\n              <ProductBox>\n                <BoxTop>\n                  <BoxHeader>\n                    <b>On Sale</b>\n                  </BoxHeader>\n                  <IconBox>\n                    <FiBox />\n                  </IconBox>\n                </BoxTop>\n                <h4>\n                  <b>{shop.productsOnSale}</b>\n                </h4>\n              </ProductBox>\n            </div>\n            <div className=\"col-lg-3 col-md-4 col-6\">\n              <ProductBox>\n                <BoxTop>\n                  <BoxHeader>\n                    <b>Out Of Stock</b>\n                  </BoxHeader>\n                  <IconBox>\n                    <FiBox />\n                  </IconBox>\n                </BoxTop>\n                <h4>\n                  <b>{shop.productsOutOfStock}</b>\n                </h4>\n              </ProductBox>\n            </div>\n            <div className=\"col-lg-3 col-md-4 col-sm-6 col-6\">\n              <ProductBox>\n                <BoxTop>\n                  <BoxHeader>\n                    <b>All Products</b>\n                  </BoxHeader>\n                  <IconBox>\n                    <FiBox />\n                  </IconBox>\n                </BoxTop>\n                <h4>\n                  <b>{shop.allProducts}</b>\n                </h4>\n              </ProductBox>\n            </div>\n            <div className=\"col-lg-3 col-md-4 col-sm-6 col-6\">\n              <ProductBox>\n                <BoxTop>\n                  <BoxHeader>\n                    <b>Waiting Orders</b>\n                  </BoxHeader>\n                  <IconBox>\n                    <FaShoppingCart />\n                  </IconBox>\n                </BoxTop>\n                <h4>\n                  <b>{shop.confirmationRequiredOrders}</b>\n                </h4>\n              </ProductBox>\n            </div>\n            <div className=\"col-lg-3 col-md-4 col-sm-6 col-6\">\n              <ProductBox>\n                <BoxTop>\n                  <BoxHeader>\n                    <b>Cancelled Orders</b>\n                  </BoxHeader>\n                  <IconBox>\n                    <FaShoppingCart />\n                  </IconBox>\n                </BoxTop>\n                <h4>\n                  <b>{shop.cancelledOrders}</b>\n                </h4>\n              </ProductBox>\n            </div>\n            <div className=\"col-lg-3 col-md-4 col-sm-6 col-6\">\n              <ProductBox>\n                <BoxTop>\n                  <BoxHeader>\n                    <b>All Orders</b>\n                  </BoxHeader>\n                  <IconBox>\n                    <FaShoppingCart />\n                  </IconBox>\n                </BoxTop>\n                <h4>\n                  <b>{shop.allOrders}</b>\n                </h4>\n              </ProductBox>\n            </div>\n            <div className=\"col-lg-3 col-md-4 col-sm-6 col-6\">\n              <ProductBox>\n                <BoxTop>\n                  <BoxHeader>\n                    <b>Customers</b>\n                  </BoxHeader>\n                  <IconBox>\n                    <FaUserPlus />\n                  </IconBox>\n                </BoxTop>\n                <h4>\n                  <b>{shop.allCustomers}</b>\n                </h4>\n              </ProductBox>\n            </div>\n          </>\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          >\n            <img src={LoadingIcon} alt=\"loading\" height=\"100\" width=\"100\" />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default SellerHomePageSections;\n","/home/guney/RalShop/frontend/src/components/seller/totalRevenueChart.js",[],"/home/guney/RalShop/frontend/src/components/seller/revenueByMonth.js",["556","557"],"import React, { useState, useEffect } from \"react\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\";\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nconst RevenueByMonthChart = ({ Data = [] }) => {\n  const [chartData, setChartData] = useState([...Data]);\n\n  const chartConfigs = {\n    type: \"column2d\",\n    width: \"100%\",\n    height: \"400\",\n    dataFormat: \"json\",\n    dataSource: {\n      chart: {\n        caption: \"Monthly Income\",\n        xAxisName: \"Date\",\n        yAxisName: \"Money\",\n        theme: \"fusion\",\n      },\n      data: chartData,\n    },\n  };\n\n  return (\n    <>\n      <ReactFC {...chartConfigs} />\n    </>\n  );\n};\n\nexport default RevenueByMonthChart;\n","/home/guney/RalShop/frontend/src/components/seller/OrdersByMonth.js",[],"/home/guney/RalShop/frontend/src/components/seller/StatusesOfOrders.js",[],{"ruleId":"558","replacedBy":"559"},{"ruleId":"560","replacedBy":"561"},{"ruleId":"562","severity":1,"message":"563","line":75,"column":6,"nodeType":"564","endLine":75,"endColumn":38,"suggestions":"565"},{"ruleId":"562","severity":1,"message":"566","line":85,"column":6,"nodeType":"564","endLine":85,"endColumn":40,"suggestions":"567"},{"ruleId":"562","severity":1,"message":"568","line":18,"column":6,"nodeType":"564","endLine":18,"endColumn":8,"suggestions":"569"},{"ruleId":"562","severity":1,"message":"568","line":10,"column":6,"nodeType":"564","endLine":10,"endColumn":8,"suggestions":"570"},{"ruleId":"562","severity":1,"message":"568","line":10,"column":6,"nodeType":"564","endLine":10,"endColumn":8,"suggestions":"571"},{"ruleId":"562","severity":1,"message":"568","line":14,"column":6,"nodeType":"564","endLine":14,"endColumn":8,"suggestions":"572"},{"ruleId":"562","severity":1,"message":"568","line":10,"column":6,"nodeType":"564","endLine":10,"endColumn":8,"suggestions":"573"},{"ruleId":"574","severity":1,"message":"575","line":1,"column":27,"nodeType":"576","messageId":"577","endLine":1,"endColumn":36},{"ruleId":"574","severity":1,"message":"578","line":142,"column":22,"nodeType":"576","messageId":"577","endLine":142,"endColumn":35},{"ruleId":"562","severity":1,"message":"579","line":48,"column":6,"nodeType":"564","endLine":48,"endColumn":19,"suggestions":"580"},{"ruleId":"574","severity":1,"message":"581","line":56,"column":17,"nodeType":"576","messageId":"577","endLine":56,"endColumn":24},{"ruleId":"562","severity":1,"message":"568","line":69,"column":6,"nodeType":"564","endLine":69,"endColumn":8,"suggestions":"582"},{"ruleId":"562","severity":1,"message":"583","line":75,"column":6,"nodeType":"564","endLine":75,"endColumn":13,"suggestions":"584"},{"ruleId":"585","severity":1,"message":"586","line":138,"column":39,"nodeType":"587","messageId":"588","endLine":138,"endColumn":60},{"ruleId":"585","severity":1,"message":"586","line":151,"column":35,"nodeType":"587","messageId":"588","endLine":151,"endColumn":56},{"ruleId":"562","severity":1,"message":"589","line":68,"column":6,"nodeType":"564","endLine":68,"endColumn":22,"suggestions":"590"},{"ruleId":"562","severity":1,"message":"568","line":66,"column":6,"nodeType":"564","endLine":66,"endColumn":12,"suggestions":"591"},{"ruleId":"562","severity":1,"message":"592","line":64,"column":6,"nodeType":"564","endLine":64,"endColumn":8,"suggestions":"593"},{"ruleId":"562","severity":1,"message":"594","line":111,"column":6,"nodeType":"564","endLine":111,"endColumn":19,"suggestions":"595"},{"ruleId":"562","severity":1,"message":"596","line":335,"column":9,"nodeType":"597","endLine":341,"endColumn":4,"suggestions":"598"},{"ruleId":"562","severity":1,"message":"599","line":342,"column":9,"nodeType":"597","endLine":348,"endColumn":4,"suggestions":"600"},{"ruleId":"562","severity":1,"message":"601","line":435,"column":6,"nodeType":"564","endLine":435,"endColumn":12,"suggestions":"602"},{"ruleId":"562","severity":1,"message":"603","line":71,"column":6,"nodeType":"564","endLine":71,"endColumn":15,"suggestions":"604"},{"ruleId":"562","severity":1,"message":"605","line":114,"column":6,"nodeType":"564","endLine":114,"endColumn":27,"suggestions":"606"},{"ruleId":"562","severity":1,"message":"607","line":127,"column":6,"nodeType":"564","endLine":127,"endColumn":32,"suggestions":"608"},{"ruleId":"562","severity":1,"message":"609","line":158,"column":6,"nodeType":"564","endLine":158,"endColumn":18,"suggestions":"610"},{"ruleId":"562","severity":1,"message":"583","line":65,"column":6,"nodeType":"564","endLine":65,"endColumn":12,"suggestions":"611"},{"ruleId":"562","severity":1,"message":"612","line":62,"column":6,"nodeType":"564","endLine":62,"endColumn":8,"suggestions":"613"},{"ruleId":"562","severity":1,"message":"614","line":70,"column":6,"nodeType":"564","endLine":70,"endColumn":12,"suggestions":"615"},{"ruleId":"562","severity":1,"message":"616","line":63,"column":6,"nodeType":"564","endLine":63,"endColumn":24,"suggestions":"617"},{"ruleId":"562","severity":1,"message":"618","line":66,"column":6,"nodeType":"564","endLine":66,"endColumn":8,"suggestions":"619"},{"ruleId":"562","severity":1,"message":"620","line":124,"column":6,"nodeType":"564","endLine":124,"endColumn":19,"suggestions":"621"},{"ruleId":"562","severity":1,"message":"620","line":127,"column":6,"nodeType":"564","endLine":127,"endColumn":19,"suggestions":"622"},{"ruleId":"562","severity":1,"message":"568","line":14,"column":6,"nodeType":"564","endLine":14,"endColumn":8,"suggestions":"623"},{"ruleId":"562","severity":1,"message":"568","line":15,"column":6,"nodeType":"564","endLine":15,"endColumn":8,"suggestions":"624"},{"ruleId":"574","severity":1,"message":"625","line":64,"column":7,"nodeType":"576","messageId":"577","endLine":64,"endColumn":18},{"ruleId":"574","severity":1,"message":"626","line":1,"column":8,"nodeType":"576","messageId":"577","endLine":1,"endColumn":13},{"ruleId":"562","severity":1,"message":"627","line":105,"column":6,"nodeType":"564","endLine":105,"endColumn":8,"suggestions":"628"},{"ruleId":"562","severity":1,"message":"629","line":118,"column":6,"nodeType":"564","endLine":118,"endColumn":18,"suggestions":"630"},{"ruleId":"562","severity":1,"message":"568","line":26,"column":6,"nodeType":"564","endLine":26,"endColumn":8,"suggestions":"631"},{"ruleId":"562","severity":1,"message":"568","line":47,"column":6,"nodeType":"564","endLine":47,"endColumn":23,"suggestions":"632"},{"ruleId":"562","severity":1,"message":"633","line":86,"column":6,"nodeType":"564","endLine":86,"endColumn":8,"suggestions":"634"},{"ruleId":"635","severity":1,"message":"636","line":27,"column":33,"nodeType":"637","messageId":"638","endLine":27,"endColumn":35},{"ruleId":"639","severity":1,"message":"640","line":49,"column":55,"nodeType":"587","messageId":"641","endLine":49,"endColumn":57},{"ruleId":"562","severity":1,"message":"642","line":36,"column":6,"nodeType":"564","endLine":36,"endColumn":15,"suggestions":"643"},{"ruleId":"562","severity":1,"message":"568","line":24,"column":6,"nodeType":"564","endLine":24,"endColumn":8,"suggestions":"644"},{"ruleId":"562","severity":1,"message":"642","line":32,"column":6,"nodeType":"564","endLine":32,"endColumn":43,"suggestions":"645"},{"ruleId":"562","severity":1,"message":"642","line":255,"column":6,"nodeType":"564","endLine":255,"endColumn":14,"suggestions":"646"},{"ruleId":"574","severity":1,"message":"647","line":86,"column":7,"nodeType":"576","messageId":"577","endLine":86,"endColumn":24},{"ruleId":"574","severity":1,"message":"648","line":1,"column":17,"nodeType":"576","messageId":"577","endLine":1,"endColumn":25},{"ruleId":"562","severity":1,"message":"649","line":81,"column":6,"nodeType":"564","endLine":81,"endColumn":8,"suggestions":"650"},{"ruleId":"574","severity":1,"message":"651","line":153,"column":20,"nodeType":"576","messageId":"577","endLine":153,"endColumn":31},{"ruleId":"562","severity":1,"message":"568","line":13,"column":48,"nodeType":"564","endLine":13,"endColumn":50,"suggestions":"652"},{"ruleId":"562","severity":1,"message":"568","line":13,"column":53,"nodeType":"564","endLine":13,"endColumn":55,"suggestions":"653"},{"ruleId":"562","severity":1,"message":"568","line":13,"column":48,"nodeType":"564","endLine":13,"endColumn":50,"suggestions":"654"},{"ruleId":"562","severity":1,"message":"568","line":17,"column":6,"nodeType":"564","endLine":17,"endColumn":8,"suggestions":"655"},{"ruleId":"574","severity":1,"message":"575","line":1,"column":17,"nodeType":"576","messageId":"577","endLine":1,"endColumn":26},{"ruleId":"574","severity":1,"message":"656","line":52,"column":25,"nodeType":"576","messageId":"577","endLine":52,"endColumn":41},{"ruleId":"574","severity":1,"message":"657","line":53,"column":28,"nodeType":"576","messageId":"577","endLine":53,"endColumn":47},{"ruleId":"574","severity":1,"message":"658","line":55,"column":10,"nodeType":"576","messageId":"577","endLine":55,"endColumn":22},{"ruleId":"574","severity":1,"message":"659","line":55,"column":24,"nodeType":"576","messageId":"577","endLine":55,"endColumn":39},{"ruleId":"574","severity":1,"message":"660","line":56,"column":23,"nodeType":"576","messageId":"577","endLine":56,"endColumn":41},{"ruleId":"574","severity":1,"message":"661","line":57,"column":10,"nodeType":"576","messageId":"577","endLine":57,"endColumn":31},{"ruleId":"574","severity":1,"message":"662","line":57,"column":33,"nodeType":"576","messageId":"577","endLine":57,"endColumn":57},{"ruleId":"574","severity":1,"message":"663","line":60,"column":29,"nodeType":"576","messageId":"577","endLine":60,"endColumn":49},{"ruleId":"562","severity":1,"message":"664","line":107,"column":6,"nodeType":"564","endLine":107,"endColumn":16,"suggestions":"665"},{"ruleId":"562","severity":1,"message":"666","line":117,"column":6,"nodeType":"564","endLine":117,"endColumn":23,"suggestions":"667"},{"ruleId":"562","severity":1,"message":"668","line":125,"column":6,"nodeType":"564","endLine":125,"endColumn":22,"suggestions":"669"},{"ruleId":"562","severity":1,"message":"670","line":141,"column":6,"nodeType":"564","endLine":141,"endColumn":16,"suggestions":"671"},{"ruleId":"562","severity":1,"message":"672","line":163,"column":6,"nodeType":"564","endLine":163,"endColumn":19,"suggestions":"673"},{"ruleId":"562","severity":1,"message":"674","line":235,"column":6,"nodeType":"564","endLine":235,"endColumn":12,"suggestions":"675"},{"ruleId":"562","severity":1,"message":"620","line":225,"column":6,"nodeType":"564","endLine":225,"endColumn":19,"suggestions":"676"},{"ruleId":"562","severity":1,"message":"568","line":140,"column":6,"nodeType":"564","endLine":140,"endColumn":13,"suggestions":"677"},{"ruleId":"562","severity":1,"message":"678","line":144,"column":6,"nodeType":"564","endLine":144,"endColumn":12,"suggestions":"679"},{"ruleId":"574","severity":1,"message":"680","line":5,"column":3,"nodeType":"576","messageId":"577","endLine":5,"endColumn":30},{"ruleId":"562","severity":1,"message":"568","line":140,"column":6,"nodeType":"564","endLine":140,"endColumn":16,"suggestions":"681"},{"ruleId":"562","severity":1,"message":"678","line":144,"column":6,"nodeType":"564","endLine":144,"endColumn":12,"suggestions":"682"},{"ruleId":"574","severity":1,"message":"575","line":1,"column":27,"nodeType":"576","messageId":"577","endLine":1,"endColumn":36},{"ruleId":"574","severity":1,"message":"683","line":87,"column":22,"nodeType":"576","messageId":"577","endLine":87,"endColumn":35},{"ruleId":"562","severity":1,"message":"568","line":13,"column":48,"nodeType":"564","endLine":13,"endColumn":50,"suggestions":"684"},{"ruleId":"574","severity":1,"message":"578","line":74,"column":22,"nodeType":"576","messageId":"577","endLine":74,"endColumn":35},{"ruleId":"574","severity":1,"message":"685","line":18,"column":8,"nodeType":"576","messageId":"577","endLine":18,"endColumn":13},{"ruleId":"574","severity":1,"message":"686","line":250,"column":7,"nodeType":"576","messageId":"577","endLine":250,"endColumn":15},{"ruleId":"562","severity":1,"message":"612","line":294,"column":6,"nodeType":"564","endLine":294,"endColumn":8,"suggestions":"687"},{"ruleId":"635","severity":1,"message":"688","line":449,"column":54,"nodeType":"637","messageId":"689","endLine":449,"endColumn":56},{"ruleId":"574","severity":1,"message":"690","line":97,"column":23,"nodeType":"576","messageId":"577","endLine":97,"endColumn":37},{"ruleId":"574","severity":1,"message":"691","line":6,"column":20,"nodeType":"576","messageId":"577","endLine":6,"endColumn":35},{"ruleId":"574","severity":1,"message":"575","line":1,"column":27,"nodeType":"576","messageId":"577","endLine":1,"endColumn":36},{"ruleId":"574","severity":1,"message":"692","line":10,"column":21,"nodeType":"576","messageId":"577","endLine":10,"endColumn":33},"no-native-reassign",["693"],"no-negated-in-lhs",["694"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Cart.products', 'intervalId', and 'startInterval'. Either include them or remove the dependency array.","ArrayExpression",["695"],"React Hook useEffect has missing dependencies: 'intervalId' and 'startInterval'. Either include them or remove the dependency array.",["696"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["697"],["698"],["699"],["700"],["701"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setCategories' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Wishlist.products'. Either include it or remove the dependency array.",["702"],"'profile' is assigned a value but never used.",["703"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["704"],"no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","React Hook useEffect has a missing dependency: 'emailOrUsername'. Either include it or remove the dependency array.",["705"],["706"],"React Hook useEffect has missing dependencies: 'User.forgotPassword.confirmationCode' and 'dispatch'. Either include them or remove the dependency array.",["707"],"React Hook useEffect has a missing dependency: 'Cart.products'. Either include it or remove the dependency array.",["708"],"The 'next' function makes the dependencies of useEffect Hook (at line 387) change on every render. To fix this, wrap the definition of 'next' in its own useCallback() Hook.","VariableDeclarator",["709"],"The 'prev' function makes the dependencies of useEffect Hook (at line 387) change on every render. To fix this, wrap the definition of 'prev' in its own useCallback() Hook.",["710"],"React Hook useEffect has a missing dependency: 'reviews'. Either include it or remove the dependency array.",["711"],"React Hook useEffect has a missing dependency: 'roomId'. Either include it or remove the dependency array.",["712"],"React Hook useEffect has missing dependencies: 'Auth.user._id', 'Seller.shop.id', 'dispatch', 'inSellerRoute', 'receiveUserData', and 'roomId'. Either include them or remove the dependency array.",["713"],"React Hook useEffect has missing dependencies: 'Auth.user._id', 'Seller.shop.id', and 'inSellerRoute'. Either include them or remove the dependency array.",["714"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["715"],["716"],"React Hook useEffect has missing dependencies: 'dispatch' and 'inSellerRoute'. Either include them or remove the dependency array.",["717"],"React Hook useEffect has a missing dependency: 'activeChat'. Either include it or remove the dependency array.",["718"],"React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.",["719"],"React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["720"],"React Hook useEffect has a missing dependency: 'location.length'. Either include it or remove the dependency array.",["721"],["722"],["723"],["724"],"'tokenConfig' is assigned a value but never used.","'react' is defined but never used.","React Hook useEffect has a missing dependency: 'setIsModalActive'. Either include it or remove the dependency array. If 'setIsModalActive' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["725"],"React Hook useEffect has missing dependencies: 'isButtonClicked' and 'setIsModalActive'. Either include them or remove the dependency array. If 'setIsModalActive' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["726"],["727"],["728"],"React Hook useEffect has missing dependencies: 'Address.address', 'Address.city', 'Address.country', 'Address.name', 'Address.phoneNumber', 'Address.state', 'Address.surname', 'BillingAddress.address', 'BillingAddress.city', 'BillingAddress.country', 'BillingAddress.email', 'BillingAddress.name', 'BillingAddress.phoneNumber', 'BillingAddress.state', 'BillingAddress.surname', and 'cartProducts'. Either include them or remove the dependency array.",["729"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","React Hook useEffect has a missing dependency: 'setIsEmpty'. Either include it or remove the dependency array. If 'setIsEmpty' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["730"],["731"],["732"],["733"],"'sellerTokenConfig' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'ratedSellers.length' and 'setIsEmpty'. Either include them or remove the dependency array. If 'setIsEmpty' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["734"],"'setSellerId' is assigned a value but never used.",["735"],["736"],["737"],["738"],"'setIsProductList' is assigned a value but never used.","'setIsProductActions' is assigned a value but never used.","'isAddProduct' is assigned a value but never used.","'setIsAddProduct' is assigned a value but never used.","'setIsAllOrdersPage' is assigned a value but never used.","'isCancelRequestOrders' is assigned a value but never used.","'setIsCancelRequestOrders' is assigned a value but never used.","'setIsCancelledOrders' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'DefaultProducts', 'isOrders', 'listProducts', and 'setListProducts'. Either include them or remove the dependency array. If 'setListProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["739"],"React Hook useEffect has a missing dependency: 'isOrders'. Either include it or remove the dependency array.",["740"],"React Hook useEffect has missing dependencies: 'DefaultProducts' and 'setListProducts'. Either include them or remove the dependency array. If 'setListProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["741"],"React Hook useEffect has missing dependencies: 'DefaultProducts', 'isOrders', 'setListProducts', 'sortOrders', and 'sortProducts'. Either include them or remove the dependency array. If 'setListProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["742"],"React Hook useEffect has missing dependencies: 'DefaultProducts', 'category', 'isOrders', 'listProducts', and 'setListProducts'. Either include them or remove the dependency array. If 'setListProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["743"],"React Hook useEffect has missing dependencies: 'isOrders', 'listProducts', 'setListProducts', 'sortOrders', and 'sortProducts'. Either include them or remove the dependency array. If 'setListProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["744"],["745"],["746"],"React Hook useEffect has missing dependencies: 'listProducts' and 'sortProducts'. Either include them or remove the dependency array. You can also do a functional update 'setListProducts(l => ...)' if you only need 'listProducts' in the 'setListProducts' call.",["747"],"'GET_PRODUCTS_BY_SUBCATEGORY' is defined but never used.",["748"],["749"],"'setStatusList' is assigned a value but never used.",["750"],"'Modal' is defined but never used.","'InfoText' is assigned a value but never used.",["751"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'setLastVisited' is assigned a value but never used.","'BiRightArrowAlt' is defined but never used.","'setChartData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"752","fix":"753"},{"desc":"754","fix":"755"},{"desc":"756","fix":"757"},{"desc":"756","fix":"758"},{"desc":"756","fix":"759"},{"desc":"756","fix":"760"},{"desc":"756","fix":"761"},{"desc":"762","fix":"763"},{"desc":"756","fix":"764"},{"desc":"765","fix":"766"},{"desc":"767","fix":"768"},{"desc":"769","fix":"770"},{"desc":"771","fix":"772"},{"desc":"773","fix":"774"},{"desc":"775","fix":"776"},{"desc":"777","fix":"778"},{"desc":"779","fix":"780"},{"desc":"781","fix":"782"},{"desc":"783","fix":"784"},{"desc":"785","fix":"786"},{"desc":"787","fix":"788"},{"desc":"789","fix":"790"},{"desc":"791","fix":"792"},{"desc":"793","fix":"794"},{"desc":"795","fix":"796"},{"desc":"797","fix":"798"},{"desc":"799","fix":"800"},{"desc":"799","fix":"801"},{"desc":"756","fix":"802"},{"desc":"756","fix":"803"},{"desc":"804","fix":"805"},{"desc":"806","fix":"807"},{"desc":"756","fix":"808"},{"desc":"809","fix":"810"},{"desc":"811","fix":"812"},{"desc":"813","fix":"814"},{"desc":"756","fix":"815"},{"desc":"816","fix":"817"},{"desc":"818","fix":"819"},{"desc":"820","fix":"821"},{"desc":"756","fix":"822"},{"desc":"756","fix":"823"},{"desc":"756","fix":"824"},{"desc":"756","fix":"825"},{"desc":"826","fix":"827"},{"desc":"828","fix":"829"},{"desc":"830","fix":"831"},{"desc":"832","fix":"833"},{"desc":"834","fix":"835"},{"desc":"836","fix":"837"},{"desc":"799","fix":"838"},{"desc":"839","fix":"840"},{"desc":"841","fix":"842"},{"desc":"843","fix":"844"},{"desc":"841","fix":"845"},{"desc":"756","fix":"846"},{"desc":"791","fix":"847"},"Update the dependencies array to be: [dispatch, User.isAuthenticated, Cart.products, startInterval, intervalId]",{"range":"848","text":"849"},"Update the dependencies array to be: [dispatch, Seller.isAuthenticated, startInterval, intervalId]",{"range":"850","text":"851"},"Update the dependencies array to be: [dispatch]",{"range":"852","text":"853"},{"range":"854","text":"853"},{"range":"855","text":"853"},{"range":"856","text":"853"},{"range":"857","text":"853"},"Update the dependencies array to be: [Wishlist.products, searchQuery]",{"range":"858","text":"859"},{"range":"860","text":"853"},"Update the dependencies array to be: [history, param]",{"range":"861","text":"862"},"Update the dependencies array to be: [User, dispatch, emailOrUsername]",{"range":"863","text":"864"},"Update the dependencies array to be: [User, dispatch]",{"range":"865","text":"866"},"Update the dependencies array to be: [User.forgotPassword.confirmationCode, dispatch]",{"range":"867","text":"868"},"Update the dependencies array to be: [Cart.products, searchQuery]",{"range":"869","text":"870"},"Wrap the definition of 'next' in its own useCallback() Hook.",{"range":"871","text":"872"},"Wrap the definition of 'prev' in its own useCallback() Hook.",{"range":"873","text":"874"},"Update the dependencies array to be: [reviews, sort]",{"range":"875","text":"876"},"Update the dependencies array to be: [history, roomId]",{"range":"877","text":"878"},"Update the dependencies array to be: [Auth.user._id, Seller.shop.id, dispatch, inSellerRoute, isParticipantLoaded, receiveUserData, roomId]",{"range":"879","text":"880"},"Update the dependencies array to be: [Auth.user._id, Chat.activeChat.messages, Seller.shop.id, inSellerRoute]",{"range":"881","text":"882"},"Update the dependencies array to be: [Chat.error, dispatch, history]",{"range":"883","text":"884"},"Update the dependencies array to be: [Cart, history]",{"range":"885","text":"886"},"Update the dependencies array to be: [dispatch, inSellerRoute]",{"range":"887","text":"888"},"Update the dependencies array to be: [Chat, activeChat]",{"range":"889","text":"890"},"Update the dependencies array to be: [Seller, dispatch, email]",{"range":"891","text":"892"},"Update the dependencies array to be: [dispatch, token]",{"range":"893","text":"894"},"Update the dependencies array to be: [map, center, location.length]",{"range":"895","text":"896"},{"range":"897","text":"896"},{"range":"898","text":"853"},{"range":"899","text":"853"},"Update the dependencies array to be: [setIsModalActive]",{"range":"900","text":"901"},"Update the dependencies array to be: [isButtonClicked, lastAction, setIsModalActive]",{"range":"902","text":"903"},{"range":"904","text":"853"},"Update the dependencies array to be: [dispatch, selectedAddress]",{"range":"905","text":"906"},"Update the dependencies array to be: [Address.address, Address.city, Address.country, Address.name, Address.phoneNumber, Address.state, Address.surname, BillingAddress.address, BillingAddress.city, BillingAddress.country, BillingAddress.email, BillingAddress.name, BillingAddress.phoneNumber, BillingAddress.state, BillingAddress.surname, cartProducts]",{"range":"907","text":"908"},"Update the dependencies array to be: [reviews, setIsEmpty]",{"range":"909","text":"910"},{"range":"911","text":"853"},"Update the dependencies array to be: [deliveryAddresses, billingAddresses, setIsEmpty]",{"range":"912","text":"913"},"Update the dependencies array to be: [orders, setIsEmpty]",{"range":"914","text":"915"},"Update the dependencies array to be: [ratedSellers.length, setIsEmpty]",{"range":"916","text":"917"},{"range":"918","text":"853"},{"range":"919","text":"853"},{"range":"920","text":"853"},{"range":"921","text":"853"},"Update the dependencies array to be: [DefaultProducts, isOrders, listProducts, searchID, setListProducts]",{"range":"922","text":"923"},"Update the dependencies array to be: [DefaultProducts, isOrders]",{"range":"924","text":"925"},"Update the dependencies array to be: [DefaultProducts, setListProducts, showOutOfStock]",{"range":"926","text":"927"},"Update the dependencies array to be: [DefaultProducts, category, isOrders, setListProducts, sortOrders, sortProducts]",{"range":"928","text":"929"},"Update the dependencies array to be: [DefaultProducts, category, isOrders, listProducts, searchQuery, setListProducts]",{"range":"930","text":"931"},"Update the dependencies array to be: [isOrders, listProducts, setListProducts, sort, sortOrders, sortProducts]",{"range":"932","text":"933"},{"range":"934","text":"896"},"Update the dependencies array to be: [dispatch, query]",{"range":"935","text":"936"},"Update the dependencies array to be: [listProducts, sort, sortProducts]",{"range":"937","text":"938"},"Update the dependencies array to be: [category, dispatch]",{"range":"939","text":"940"},{"range":"941","text":"938"},{"range":"942","text":"853"},{"range":"943","text":"888"},[3415,3447],"[dispatch, User.isAuthenticated, Cart.products, startInterval, intervalId]",[3663,3697],"[dispatch, Seller.isAuthenticated, startInterval, intervalId]",[467,469],"[dispatch]",[372,374],[372,374],[398,400],[345,347],[1504,1517],"[Wishlist.products, searchQuery]",[2357,2359],[2448,2455],"[history, param]",[1682,1698],"[User, dispatch, emailOrUsername]",[1573,1579],"[User, dispatch]",[1446,1448],"[User.forgotPassword.confirmationCode, dispatch]",[2963,2976],"[Cart.products, searchQuery]",[8911,9033],"useCallback(() => {\n    if (index >= Product.images.length - 1) {\n      setIndex(0);\n    } else {\n      setIndex(index + 1);\n    }\n  })",[9050,9172],"useCallback(() => {\n    if (index <= 0) {\n      setIndex(Product.images.length - 1);\n    } else {\n      setIndex(index - 1);\n    }\n  })",[11445,11451],"[reviews, sort]",[2226,2235],"[history, roomId]",[3571,3592],"[Auth.user._id, Seller.shop.id, dispatch, inSellerRoute, isParticipantLoaded, receiveUserData, roomId]",[3957,3983],"[Auth.user._id, Chat.activeChat.messages, Seller.shop.id, inSellerRoute]",[5215,5227],"[Chat.error, dispatch, history]",[1791,1797],"[Cart, history]",[1586,1588],"[dispatch, inSellerRoute]",[1771,1777],"[Chat, activeChat]",[1521,1539],"[Seller, dispatch, email]",[1545,1547],"[dispatch, token]",[3281,3294],"[map, center, location.length]",[3305,3318],[378,380],[404,406],[2729,2731],"[setIsModalActive]",[3074,3086],"[isButtonClicked, lastAction, setIsModalActive]",[897,899],[1456,1473],"[dispatch, selectedAddress]",[3024,3026],"[Address.address, Address.city, Address.country, Address.name, Address.phoneNumber, Address.state, Address.surname, BillingAddress.address, BillingAddress.city, BillingAddress.country, BillingAddress.email, BillingAddress.name, BillingAddress.phoneNumber, BillingAddress.state, BillingAddress.surname, cartProducts]",[1033,1042],"[reviews, setIsEmpty]",[868,870],[1038,1075],"[deliveryAddresses, billingAddresses, setIsEmpty]",[5955,5963],"[orders, setIsEmpty]",[2105,2107],"[ratedSellers.length, setIsEmpty]",[608,610],[642,644],[614,616],[715,717],[2511,2521],"[DefaultProducts, isOrders, listProducts, searchID, setListProducts]",[2789,2806],"[DefaultProducts, isOrders]",[2999,3015],"[DefaultProducts, setListProducts, showOutOfStock]",[3444,3454],"[DefaultProducts, category, isOrders, setListProducts, sortOrders, sortProducts]",[4035,4048],"[DefaultProducts, category, isOrders, listProducts, searchQuery, setListProducts]",[6073,6079],"[isOrders, listProducts, setListProducts, sort, sortOrders, sortProducts]",[5359,5372],[3058,3065],"[dispatch, query]",[3169,3175],"[listProducts, sort, sortProducts]",[3152,3162],"[category, dispatch]",[3266,3272],[614,616],[6564,6566]]
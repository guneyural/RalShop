[{"/home/guney/ralShop/frontend/src/index.js":"1","/home/guney/ralShop/frontend/src/app.js":"2","/home/guney/ralShop/frontend/src/pages/NotFound.js":"3","/home/guney/ralShop/frontend/src/pages/Home.js":"4","/home/guney/ralShop/frontend/src/pages/AuthPage.js":"5","/home/guney/ralShop/frontend/src/components/navbar.js":"6","/home/guney/ralShop/frontend/src/data/category.js":"7","/home/guney/ralShop/frontend/src/components/footer.js":"8","/home/guney/ralShop/frontend/src/redux/store.js":"9","/home/guney/ralShop/frontend/src/redux/reducers/index.js":"10","/home/guney/ralShop/frontend/src/redux/reducers/authReducer.js":"11","/home/guney/ralShop/frontend/src/redux/actions/types.js":"12","/home/guney/ralShop/frontend/src/redux/actions/authActions.js":"13","/home/guney/ralShop/frontend/src/redux/reducers/errorReducer.js":"14","/home/guney/ralShop/frontend/src/redux/actions/errorActions.js":"15","/home/guney/ralShop/frontend/src/pages/wishlistPage.js":"16","/home/guney/ralShop/frontend/src/privateRoutes/privateRoute.js":"17","/home/guney/ralShop/frontend/src/privateRoutes/privateLogin.js":"18","/home/guney/ralShop/frontend/src/pages/ProfilePage.js":"19","/home/guney/ralShop/frontend/src/components/messageBox.js":"20","/home/guney/ralShop/frontend/src/pages/ProfileSettings.js":"21","/home/guney/ralShop/frontend/src/components/profileSettings.js":"22","/home/guney/ralShop/frontend/src/components/passwordSettings.js":"23","/home/guney/ralShop/frontend/src/pages/ForgotPasswordPage.js":"24","/home/guney/ralShop/frontend/src/pages/ForgotPasswordCodePage.js":"25","/home/guney/ralShop/frontend/src/privateRoutes/passwordResetRoutes.js":"26","/home/guney/ralShop/frontend/src/privateRoutes/changePasswordRoute.js":"27","/home/guney/ralShop/frontend/src/pages/changePasswordPage.js":"28","/home/guney/ralShop/frontend/src/pages/seller/registerPage.js":"29","/home/guney/ralShop/frontend/src/data/countries.js":"30","/home/guney/ralShop/frontend/src/redux/reducers/sellerReducer.js":"31","/home/guney/ralShop/frontend/src/redux/actions/sellerActions.js":"32","/home/guney/ralShop/frontend/src/pages/seller/loginPage.js":"33","/home/guney/ralShop/frontend/src/pages/seller/sellerHomePage.js":"34","/home/guney/ralShop/frontend/src/pages/seller/ForgotPasswordSendEmailPage.js":"35","/home/guney/ralShop/frontend/src/pages/seller/changePasswordPage.js":"36","/home/guney/ralShop/frontend/src/privateRoutes/sellerChangePasswordPage.js":"37","/home/guney/ralShop/frontend/src/privateRoutes/sellerRoutes.js":"38","/home/guney/ralShop/frontend/src/privateRoutes/NormalRoute.js":"39","/home/guney/ralShop/frontend/src/components/sellerNavbar.js":"40","/home/guney/ralShop/frontend/src/pages/seller/SellerProfilePage.js":"41","/home/guney/ralShop/frontend/src/pages/seller/AddProductPage.js":"42","/home/guney/ralShop/frontend/src/utils/helpers.js":"43","/home/guney/ralShop/frontend/src/redux/reducers/productReducer.js":"44","/home/guney/ralShop/frontend/src/redux/actions/productActions.js":"45","/home/guney/ralShop/frontend/src/pages/ProductPage.js":"46","/home/guney/ralShop/frontend/src/components/fullscreenImage.js":"47","/home/guney/ralShop/frontend/src/components/ProductDescription.js":"48","/home/guney/ralShop/frontend/src/components/ProductLocation.js":"49","/home/guney/ralShop/frontend/src/redux/reducers/productReviewReducer.js":"50","/home/guney/ralShop/frontend/src/redux/actions/productReviewActions.js":"51"},{"size":585,"mtime":1614620360207,"results":"52","hashOfConfig":"53"},{"size":5800,"mtime":1614809575977,"results":"54","hashOfConfig":"53"},{"size":310,"mtime":1612114148551,"results":"55","hashOfConfig":"53"},{"size":2575,"mtime":1614810337416,"results":"56","hashOfConfig":"53"},{"size":5780,"mtime":1613147876688,"results":"57","hashOfConfig":"53"},{"size":9109,"mtime":1614809831755,"results":"58","hashOfConfig":"53"},{"size":1035,"mtime":1612195740509,"results":"59","hashOfConfig":"53"},{"size":1304,"mtime":1612371792048,"results":"60","hashOfConfig":"53"},{"size":399,"mtime":1612998799107,"results":"61","hashOfConfig":"53"},{"size":382,"mtime":1615664898929,"results":"62","hashOfConfig":"53"},{"size":6714,"mtime":1613147547365,"results":"63","hashOfConfig":"53"},{"size":2364,"mtime":1615664904469,"results":"64","hashOfConfig":"53"},{"size":5790,"mtime":1613067338173,"results":"65","hashOfConfig":"53"},{"size":453,"mtime":1612452823713,"results":"66","hashOfConfig":"53"},{"size":233,"mtime":1612452542899,"results":"67","hashOfConfig":"53"},{"size":118,"mtime":1612458497418,"results":"68","hashOfConfig":"53"},{"size":679,"mtime":1613407342193,"results":"69","hashOfConfig":"53"},{"size":704,"mtime":1613407374465,"results":"70","hashOfConfig":"53"},{"size":3733,"mtime":1612820192341,"results":"71","hashOfConfig":"53"},{"size":1158,"mtime":1615998348848,"results":"72","hashOfConfig":"53"},{"size":1144,"mtime":1612741230348,"results":"73","hashOfConfig":"53"},{"size":7153,"mtime":1614809941467,"results":"74","hashOfConfig":"53"},{"size":4117,"mtime":1612814474446,"results":"75","hashOfConfig":"53"},{"size":3706,"mtime":1613147283863,"results":"76","hashOfConfig":"53"},{"size":4066,"mtime":1613147298087,"results":"77","hashOfConfig":"53"},{"size":690,"mtime":1613407421998,"results":"78","hashOfConfig":"53"},{"size":849,"mtime":1613407460758,"results":"79","hashOfConfig":"53"},{"size":5050,"mtime":1614810387621,"results":"80","hashOfConfig":"53"},{"size":13504,"mtime":1613324550843,"results":"81","hashOfConfig":"53"},{"size":9540,"mtime":1613144784042,"results":"82","hashOfConfig":"53"},{"size":3842,"mtime":1613576057893,"results":"83","hashOfConfig":"53"},{"size":3523,"mtime":1613575848067,"results":"84","hashOfConfig":"53"},{"size":4002,"mtime":1613346243373,"results":"85","hashOfConfig":"53"},{"size":634,"mtime":1613494848204,"results":"86","hashOfConfig":"53"},{"size":3750,"mtime":1613334309656,"results":"87","hashOfConfig":"53"},{"size":5158,"mtime":1613345488049,"results":"88","hashOfConfig":"53"},{"size":711,"mtime":1613407257208,"results":"89","hashOfConfig":"53"},{"size":633,"mtime":1613407177351,"results":"90","hashOfConfig":"53"},{"size":457,"mtime":1613407937868,"results":"91","hashOfConfig":"53"},{"size":7856,"mtime":1614810181758,"results":"92","hashOfConfig":"53"},{"size":5464,"mtime":1613575792823,"results":"93","hashOfConfig":"53"},{"size":13459,"mtime":1614707714151,"results":"94","hashOfConfig":"53"},{"size":216,"mtime":1613680948833,"results":"95","hashOfConfig":"53"},{"size":1058,"mtime":1614529928792,"results":"96","hashOfConfig":"53"},{"size":1504,"mtime":1614535178325,"results":"97","hashOfConfig":"53"},{"size":32681,"mtime":1616071649675,"results":"98","hashOfConfig":"53"},{"size":3221,"mtime":1614809674578,"results":"99","hashOfConfig":"53"},{"size":530,"mtime":1614796747432,"results":"100","hashOfConfig":"53"},{"size":1152,"mtime":1614797925527,"results":"101","hashOfConfig":"53"},{"size":1472,"mtime":1616010854792,"results":"102","hashOfConfig":"53"},{"size":2108,"mtime":1616010835648,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1o6b8lo",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"106"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"106"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"106"},"/home/guney/ralShop/frontend/src/index.js",[],["225","226"],"/home/guney/ralShop/frontend/src/app.js",[],"/home/guney/ralShop/frontend/src/pages/NotFound.js",[],"/home/guney/ralShop/frontend/src/pages/Home.js",[],"/home/guney/ralShop/frontend/src/pages/AuthPage.js",[],"/home/guney/ralShop/frontend/src/components/navbar.js",[],"/home/guney/ralShop/frontend/src/data/category.js",[],"/home/guney/ralShop/frontend/src/components/footer.js",[],"/home/guney/ralShop/frontend/src/redux/store.js",[],"/home/guney/ralShop/frontend/src/redux/reducers/index.js",[],"/home/guney/ralShop/frontend/src/redux/reducers/authReducer.js",[],"/home/guney/ralShop/frontend/src/redux/actions/types.js",[],"/home/guney/ralShop/frontend/src/redux/actions/authActions.js",[],"/home/guney/ralShop/frontend/src/redux/reducers/errorReducer.js",[],"/home/guney/ralShop/frontend/src/redux/actions/errorActions.js",[],"/home/guney/ralShop/frontend/src/pages/wishlistPage.js",[],"/home/guney/ralShop/frontend/src/privateRoutes/privateRoute.js",["227"],"import React, { useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { notSellerRoute } from \"../redux/actions/sellerActions\";\n\nconst PrivateRoute = ({ component: Component, auth, isSeller, ...rest }) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(notSellerRoute());\n  }, []);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth === true ? (\n          <Component {...props} />\n        ) : isSeller ? (\n          <Redirect to=\"/seller/login\" />\n        ) : (\n          <Redirect to=\"/auth\" />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","/home/guney/ralShop/frontend/src/privateRoutes/privateLogin.js",["228"],"import React, { useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { notSellerRoute } from \"../redux/actions/sellerActions\";\n\nconst PrivateLogin = ({ component: Component, auth, isSeller, ...rest }) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(notSellerRoute());\n  }, []);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth === true ? (\n          isSeller ? (\n            <Redirect to=\"/seller/home\" />\n          ) : (\n            <Redirect to=\"/\" />\n          )\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateLogin;\n","/home/guney/ralShop/frontend/src/pages/ProfilePage.js",[],"/home/guney/ralShop/frontend/src/components/messageBox.js",[],"/home/guney/ralShop/frontend/src/pages/ProfileSettings.js",[],"/home/guney/ralShop/frontend/src/components/profileSettings.js",[],"/home/guney/ralShop/frontend/src/components/passwordSettings.js",[],"/home/guney/ralShop/frontend/src/pages/ForgotPasswordPage.js",["229"],"import React, { useState, useEffect } from \"react\";\nimport { AiOutlineLock } from \"react-icons/ai\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { sendForgotPasswordEmail } from \"../redux/actions/authActions\";\nimport { Link } from \"react-router-dom\";\n\nconst CenterDiv = styled.div`\n  margin-top: 30px;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst CenterBox = styled.div`\n  border: 1px solid #c2c2c2;\n  background: white;\n  margin: auto;\n  padding: 10px 40px;\n  width: 400px;\n  box-shadow: 2px 2px 10px #dedede;\n  position: relative;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst InputField = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #fafafa;\n  border: 1px solid #c2c2c2;\n  width: 100%;\n`;\n\nconst SectionBottom = styled.section`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background: #efefef;\n  border-top: 1px solid #c2c2c2;\n  font-weight: 500;\n  text-align: center;\n  padding: 7px;\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst ForgotPassword = () => {\n  const [emailOrUsername, setEmailOrUsername] = useState(\"\");\n  const User = useSelector((state) => state.Auth);\n  const dispatch = useDispatch();\n\n  const sendCode = (e) => {\n    e.preventDefault();\n    dispatch(sendForgotPasswordEmail(emailOrUsername));\n  };\n\n  useEffect(() => {\n    if (User.forgotPassword.isPasswordReset) {\n      window.location.href = `${window.origin}/account/forgot_password/confirmation`;\n      localStorage.setItem(\"password_reset\", true);\n      if (emailOrUsername !== \"\")\n        localStorage.setItem(\"emailOrUsername\", emailOrUsername);\n    }\n  }, [User, dispatch]);\n\n  return (\n    <CenterDiv>\n      <CenterBox>\n        <AiOutlineLock\n          style={{ display: \"grid\", margin: \"auto\", fontSize: \"5rem\" }}\n        />\n        <h2 style={{ textAlign: \"center\" }}>Forgot Password?</h2>\n        <p\n          style={{\n            color: \"var(--text-muted)\",\n            textAlign: \"center\",\n            fontSize: \"15px\",\n          }}\n        >\n          Enter your email or username and we'll send you a code to get your\n          account back.\n        </p>\n        <form style={{ margin: \"auto\" }} onSubmit={(e) => sendCode(e)}>\n          <InputField\n            type=\"text\"\n            name=\"emailOrUsername\"\n            id=\"emailOrUsername\"\n            aria-label=\"email or username input\"\n            value={emailOrUsername}\n            placeholder=\"Email or Username\"\n            onChange={(e) => setEmailOrUsername(e.target.value)}\n          />\n          <button\n            className=\"default-btn mt-3 w-100\"\n            disabled={emailOrUsername.length < 1 || User.loading ? true : false}\n          >\n            {User.loading ? \"Loading...\" : \"Send Login Code\"}\n          </button>\n          {User.forgotPassword.sendEmailSuccess === false && (\n            <span className=\"text-danger\">Account Does Not Exist.</span>\n          )}\n          {User.forgotPassword.sendEmailSuccess && (\n            <span className=\"text-success\">Email Has Been Sent.</span>\n          )}\n        </form>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"var(--text-muted)\",\n            fontSize: \"14px\",\n            fontWeight: \"500\",\n            paddingTop: \"30px\",\n            paddingBottom: \"40px\",\n          }}\n        >\n          OR\n        </p>\n        <SectionBottom>\n          <Link\n            to=\"/auth\"\n            style={{ color: \"var(--primary-text)\", textDecoration: \"none\" }}\n          >\n            Back To Login Page\n          </Link>\n        </SectionBottom>\n      </CenterBox>\n    </CenterDiv>\n  );\n};\n\nexport default ForgotPassword;\n","/home/guney/ralShop/frontend/src/pages/ForgotPasswordCodePage.js",["230"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  cancelForgotPassword,\n  confirmPasswordResetCode,\n} from \"../redux/actions/authActions\";\nimport { AiOutlineMail } from \"react-icons/ai\";\n\nconst CenterDiv = styled.div`\n  margin-top: 30px;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst CenterBox = styled.div`\n  border: 1px solid #c2c2c2;\n  background: white;\n  margin: auto;\n  padding: 10px 40px;\n  width: 400px;\n  box-shadow: 2px 2px 10px #dedede;\n  position: relative;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst InputField = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #fafafa;\n  border: 1px solid #c2c2c2;\n  width: 100%;\n`;\n\nconst SectionBottom = styled.section`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background: #efefef;\n  border-top: 1px solid #c2c2c2;\n  font-weight: 500;\n  text-align: center;\n  padding: 7px;\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst PasswordConfirmation = () => {\n  const [passwordCode, setPasswordCode] = useState(\"\");\n  const dispatch = useDispatch();\n  const User = useSelector((state) => state.Auth);\n\n  useEffect(() => {\n    if (User.forgotPassword.confirmationCodeTries === 0) {\n      dispatch(cancelForgotPassword());\n      window.location.href = `${window.origin}/auth`;\n    }\n    if (User.forgotPassword.confirmationCodeSuccess) {\n      window.location.href = `${window.origin}/account/forgot_password/change_password`;\n    }\n  }, [User]);\n\n  const confirmCode = (e) => {\n    e.preventDefault();\n    dispatch(confirmPasswordResetCode(passwordCode));\n  };\n\n  const cancelProcess = () => {\n    dispatch(cancelForgotPassword());\n    window.location.href = `${window.origin}/auth`;\n  };\n\n  return (\n    <CenterDiv>\n      <CenterBox>\n        <AiOutlineMail\n          style={{ display: \"grid\", margin: \"auto\", fontSize: \"5rem\" }}\n        />\n        <h2 style={{ textAlign: \"center\" }}>Confirmation Code</h2>\n        <p\n          style={{\n            color: \"var(--text-muted)\",\n            textAlign: \"center\",\n            fontSize: \"15px\",\n          }}\n        >\n          Enter the confirmation code we sent to your mail. If you didn't get\n          mail click cancel.\n        </p>\n        <form style={{ margin: \"auto\" }} onSubmit={(e) => confirmCode(e)}>\n          <InputField\n            type=\"text\"\n            name=\"passwordCode\"\n            id=\"passwordCode\"\n            aria-label=\"confirmation code input\"\n            value={passwordCode}\n            placeholder=\"Confirmation Code\"\n            onChange={(e) => setPasswordCode(e.target.value)}\n          />\n          <button\n            className=\"default-btn mt-3 w-100\"\n            disabled={\n              passwordCode.length < 8 || User.loading || passwordCode.length > 8\n                ? true\n                : false\n            }\n          >\n            {User.loading ? \"Loading...\" : \"Confirm Code\"}\n          </button>\n          {User.forgotPassword.confirmationCodeSuccess === false && (\n            <span className=\"text-danger\">\n              Codes don't match or time expired. Click cancel to take the code\n              or try again.\n            </span>\n          )}\n          {User.forgotPassword.confirmationCodeSuccess && (\n            <span className=\"text-success\">Codes matched. Proceeding...</span>\n          )}\n        </form>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"var(--text-muted)\",\n            fontSize: \"14px\",\n            fontWeight: \"500\",\n            paddingTop: \"30px\",\n            paddingBottom: \"40px\",\n          }}\n        >\n          OR\n        </p>\n        <SectionBottom>\n          <span\n            to=\"/auth\"\n            style={{ color: \"var(--primary-text)\", textDecoration: \"none\" }}\n            onClick={() => cancelProcess()}\n          >\n            Cancel\n          </span>\n        </SectionBottom>\n      </CenterBox>\n    </CenterDiv>\n  );\n};\n\nexport default PasswordConfirmation;\n","/home/guney/ralShop/frontend/src/privateRoutes/passwordResetRoutes.js",["231"],"import React, { useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { notSellerRoute } from \"../redux/actions/sellerActions\";\n\nconst PasswordResetRoute = ({\n  component: Component,\n  isPasswordReset,\n  isAuthenticated,\n  ...rest\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(notSellerRoute());\n  }, []);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isPasswordReset === false || isAuthenticated === true ? (\n          <Redirect to=\"/auth\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PasswordResetRoute;\n","/home/guney/ralShop/frontend/src/privateRoutes/changePasswordRoute.js",["232"],"import React, { useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { notSellerRoute } from \"../redux/actions/sellerActions\";\n\nconst ChangePasswordRoute = ({\n  component: Component,\n  isPasswordReset,\n  confirmationCode,\n  confirmationSuccess,\n  emailOrUsername,\n  isAuthenticated,\n  ...rest\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(notSellerRoute());\n  }, []);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !isPasswordReset ||\n        !confirmationSuccess ||\n        isAuthenticated ||\n        emailOrUsername === null ||\n        confirmationCode === null ? (\n          <Redirect to=\"/auth\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default ChangePasswordRoute;\n","/home/guney/ralShop/frontend/src/pages/changePasswordPage.js",["233"],"import React, { useState, useEffect } from \"react\";\nimport { CgPassword } from \"react-icons/cg\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  changePassword,\n  confirmPasswordResetCode,\n} from \"../redux/actions/authActions\";\n\nconst CenterDiv = styled.div`\n  margin-top: 30px;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst CenterBox = styled.div`\n  border: 1px solid #c2c2c2;\n  background: white;\n  margin: auto;\n  padding: 10px 40px;\n  width: 400px;\n  box-shadow: 2px 2px 10px #dedede;\n  position: relative;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst InputField = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #fafafa;\n  border: 1px solid #c2c2c2;\n  width: 100%;\n`;\n\nconst SectionBottom = styled.section`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background: #efefef;\n  border-top: 1px solid #c2c2c2;\n  font-weight: 500;\n  text-align: center;\n  padding: 7px;\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst ChangePassword = () => {\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [err, setErr] = useState(false);\n  const User = useSelector((state) => state.Auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      confirmPasswordResetCode(User.forgotPassword.confirmationCode, true)\n    );\n  }, []);\n\n  useEffect(() => {\n    if (User.forgotPassword.confirmationCodeSuccess === false) {\n      window.location.href = `${window.origin}/auth`;\n    }\n    if (User.forgotPassword.changePasswordSuccess === false) {\n      setTimeout(() => {\n        window.location.href = `${window.origin}`;\n      }, 1000);\n    }\n  }, [User]);\n\n  useEffect(() => {\n    if (newPassword.length > 6 && confirmPassword.length > 6) {\n      if (newPassword !== confirmPassword) {\n        setErr(\"Passwords don't match.\");\n      } else {\n        setErr(false);\n      }\n    } else {\n      if (newPassword.length > 0 && confirmPassword.length > 0) {\n        setErr(\"Password must be at least 6 characters.\");\n      } else {\n        setErr(false);\n      }\n    }\n  }, [newPassword, confirmPassword]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    dispatch(\n      changePassword(\n        User.forgotPassword.emailOrUsername,\n        User.forgotPassword.confirmationCode,\n        newPassword,\n        confirmPassword\n      )\n    );\n  };\n\n  const cancelForgotPassword = () => {\n    dispatch(cancelForgotPassword());\n    window.location.href = `${window.origin}/auth`;\n  };\n\n  return (\n    <CenterDiv>\n      <CenterBox>\n        <CgPassword\n          style={{ display: \"grid\", margin: \"auto\", fontSize: \"5rem\" }}\n        />\n        <h2 style={{ textAlign: \"center\" }}>New Password</h2>\n        <p\n          style={{\n            color: \"var(--text-muted)\",\n            textAlign: \"center\",\n            fontSize: \"15px\",\n          }}\n        >\n          Enter your new password and confirm it. Passwor must be more than 6\n          characters.\n        </p>\n        <form style={{ margin: \"auto\" }} onSubmit={(e) => handleSubmit(e)}>\n          <InputField\n            type=\"password\"\n            name=\"newPassword\"\n            id=\"newPassword\"\n            value={newPassword}\n            aria-label=\"New password input\"\n            placeholder=\"Enter your new password\"\n            onChange={(e) => setNewPassword(e.target.value)}\n          />\n          <InputField\n            type=\"password\"\n            name=\"confirmPassword\"\n            id=\"confirmPassword\"\n            value={confirmPassword}\n            aria-label=\"Confirm new password input\"\n            className=\"mt-3\"\n            placeholder=\"Confirm your new password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n          <button\n            className=\"default-btn mt-5 w-100\"\n            disabled={\n              newPassword.length < 6 || newPassword.length < 6 || User.loading\n                ? true\n                : false\n            }\n          >\n            {User.loading ? \"Loading...\" : \"Change Password\"}\n          </button>\n          {err && <span className=\"text-danger\">{err}</span>}\n          {User.forgotPassword.changePasswordSuccess === true && (\n            <span className=\"text-success\">\n              Password Changed. Now You Can Login.\n            </span>\n          )}\n        </form>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"var(--text-muted)\",\n            fontSize: \"14px\",\n            fontWeight: \"500\",\n            paddingTop: \"30px\",\n            paddingBottom: \"40px\",\n          }}\n        >\n          OR\n        </p>\n        <SectionBottom>\n          <span\n            to=\"/auth\"\n            style={{ color: \"var(--primary-text)\", textDecoration: \"none\" }}\n            onClick={() => cancelForgotPassword()}\n          >\n            Cancel\n          </span>\n        </SectionBottom>\n      </CenterBox>\n    </CenterDiv>\n  );\n};\n\nexport default ChangePassword;\n","/home/guney/ralShop/frontend/src/pages/seller/registerPage.js",["234"],"import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport RegisterPhoto from \"../../assets/registerPhoto.svg\";\nimport { categories } from \"../../data/category\";\nimport { countries } from \"../../data/countries\";\nimport mapboxgl from \"mapbox-gl\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { sellerRegister } from \"../../redux/actions/sellerActions\";\nimport { Link } from \"react-router-dom\";\n\nconst PageHeader = styled.h1`\n  font-weight: 300;\n  text-align: center;\n`;\nconst BrandName = styled.h1`\n  font-weight: 300;\n  font-size: 42px;\n`;\n\nconst Muted = styled.span`\n  color: var(--text-muted);\n`;\nconst Labels = styled.label`\n  font-weight: 500;\n`;\nconst InputField = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 90%;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nconst TextField = styled.textarea`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n`;\nconst Select = styled.select`\n  padding: 4px 5px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 90%;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nconst Colorful = styled.span`\n  color: #346eeb;\n  font-weight: 500;\n  cursor: pointer;\n`;\n\nconst RegisterPage = () => {\n  const [fullname, setFullname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [links, setLinks] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [map, setMap] = useState(null);\n  const [results, setResults] = useState([]);\n  const [notFound, setNotFound] = useState(null);\n  const [center, setCenter] = useState([35, 39]);\n  const mapContainer = useRef(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n  const Seller = useSelector((state) => state.Seller);\n\n  useEffect(() => {\n    if (location.length > 0) {\n      if (results !== []) {\n        document\n          .querySelector(\".location-search-results\")\n          .classList.add(\"active\");\n      }\n    } else {\n      document\n        .querySelector(\".location-search-results\")\n        .classList.remove(\"active\");\n    }\n    if (notFound) {\n      setIsLoading(false);\n      document\n        .querySelector(\".location-search-results\")\n        .classList.remove(\"active\");\n    }\n  }, [location, results, notFound]);\n\n  useEffect(() => {\n    const initializeMap = ({ setMap, mapContainer }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        center,\n        zoom: 5,\n      });\n      map.on(\"load\", () => {\n        setMap(map);\n        map.resize();\n      });\n    };\n\n    if (!map) {\n      initializeMap({ setMap, mapContainer });\n    }\n\n    if (map !== null && location.length > 0) {\n      map.flyTo({\n        center,\n        essential: true,\n        zoom: 12,\n      });\n    }\n  }, [map, center]);\n\n  const changeLocation = (placeName, coordinate) => {\n    setLocation(placeName);\n    setCenter(coordinate);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const splittedLinks = links.split(\" \");\n    dispatch(\n      sellerRegister({\n        fullname,\n        email,\n        country,\n        phoneNumber,\n        category,\n        companyName,\n        location,\n        coordinate: center,\n        links: splittedLinks,\n        password,\n      })\n    );\n  };\n\n  const displayResults = () => {\n    if (notFound !== null && notFound === false)\n      document\n        .querySelector(\".location-search-results\")\n        .classList.add(\"active\");\n  };\n\n  const removeResults = () => {\n    setTimeout(() => {\n      document\n        .querySelector(\".location-search-results\")\n        .classList.remove(\"active\");\n    }, 100);\n  };\n\n  const searchAddress = (e) => {\n    setLocation(e.target.value);\n    setIsLoading(true);\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${location}.json?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`\n      )\n      .then((res) => res.data)\n      .then((data) => {\n        setResults(data.features);\n        setIsLoading(false);\n        setNotFound(false);\n      })\n      .catch((err) => {\n        setResults([]);\n        setNotFound(true);\n      });\n  };\n\n  return (\n    <div>\n      <PageHeader>Register As Seller</PageHeader>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-md-8\">\n          <p style={{ marginTop: \"-10px\" }}>Become a seller in UralShop</p>\n          <form onSubmit={(e) => handleSubmit(e)}>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"form-section\">\n                  <Labels htmlFor=\"fullname\">Fullname</Labels>\n                  <InputField\n                    type=\"text\"\n                    name=\"fullname\"\n                    id=\"fullname\"\n                    aria-label=\"fullname\"\n                    placeholder=\"fullname\"\n                    value={fullname}\n                    onChange={(e) => setFullname(e.target.value)}\n                    required\n                  />\n                </div>\n                <div className=\"form-section\">\n                  <Labels htmlFor=\"email\">Email</Labels>\n                  <InputField\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    aria-label=\"email\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                  />\n                </div>\n                <div className=\"form-section\">\n                  <Labels htmlFor=\"country\">Country</Labels>\n                  <Select\n                    name=\"country\"\n                    id=\"country\"\n                    onChange={(e) => setCountry(e.target.value)}\n                    required\n                  >\n                    <option value=\"\">Select Your Country</option>\n                    {countries.map((item, idx) => {\n                      return (\n                        <option\n                          value={item.code}\n                          key={idx}\n                        >{`${item.code} - ${item.name}`}</option>\n                      );\n                    })}\n                  </Select>\n                </div>\n                <div className=\"form-section\">\n                  <Labels htmlFor=\"category\">Category</Labels>\n                  <Select\n                    name=\"category\"\n                    id=\"category\"\n                    onChange={(e) => setCategory(e.target.value)}\n                    required\n                  >\n                    <option value=\"\">Select Category</option>\n                    {categories.map((item, idx) => {\n                      return (\n                        <option value={item} key={idx}>\n                          {item}\n                        </option>\n                      );\n                    })}\n                  </Select>\n                  <div className=\"form-text\">Select your main category</div>\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-section\">\n                  <Labels htmlFor=\"phonenumber\">Phone Number</Labels>\n                  <InputField\n                    type=\"text\"\n                    name=\"phonenumber\"\n                    id=\"phonenumber\"\n                    aria-label=\"phonenumber\"\n                    placeholder=\"Phone Number\"\n                    value={phoneNumber}\n                    onChange={(e) => setPhoneNumber(e.target.value)}\n                    required\n                  />\n                  <div className=\"form-text\">Enter company phone number</div>\n                </div>\n                <div className=\"form-section\">\n                  <Labels htmlFor=\"companyName\">Company Name</Labels>\n                  <InputField\n                    type=\"text\"\n                    name=\"companyName\"\n                    id=\"companyName\"\n                    aria-label=\"company name\"\n                    placeholder=\"Company Name\"\n                    value={companyName}\n                    onChange={(e) => setCompanyName(e.target.value)}\n                    required\n                  />\n                </div>\n                <div className=\"form-section\">\n                  <Labels htmlFor=\"location\">Location</Labels>\n                  <InputField\n                    type=\"text\"\n                    name=\"location\"\n                    id=\"location\"\n                    aria-label=\"location\"\n                    placeholder=\"Location\"\n                    value={location}\n                    onFocus={() => displayResults()}\n                    onChange={(e) => searchAddress(e)}\n                    onBlur={() => removeResults()}\n                    autoComplete=\"off\"\n                    required\n                  />\n                  <div className=\"location-search-results\">\n                    {isLoading ? (\n                      \"Loading...\"\n                    ) : (\n                      <div>\n                        {results.map((item, idx) => {\n                          return (\n                            <section\n                              className=\"location-result mb-1\"\n                              key={idx}\n                              onClick={() =>\n                                changeLocation(\n                                  item.place_name,\n                                  item.geometry.coordinates\n                                )\n                              }\n                            >\n                              <span>{item.text}</span>\n                              <br />\n                              <span style={{ fontSize: \"13px\" }}>\n                                {`${item.place_name.substring(0, 32)}...`}\n                              </span>\n                            </section>\n                          );\n                        })}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-text\">\n                    Enter headquarters of your company\n                  </div>\n                  <div className=\"form-text text-danger\">\n                    {notFound && \"No address found\"}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              ref={(el) => (mapContainer.current = el)}\n              style={{ height: \"300px\" }}\n            />\n            <Labels htmlFor=\"links\" className=\"mt-4\">\n              Enter The Links Of Your Shop If You Have\n            </Labels>\n            <div className=\"form-section\">\n              <TextField\n                name=\"links\"\n                id=\"links\"\n                cols=\"10\"\n                rows=\"5\"\n                style={{ color: \"#0d6efd\", textDecoration: \"underline\" }}\n                placeholder=\"If you sell products on different websites or if your company have website, enter links of them. Seperate links with space. If you don't have link to enter leave it blank.\"\n                onChange={(e) => setLinks(e.target.value)}\n              >\n                {links}\n              </TextField>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"form-section\">\n                  <Labels htmlFor=\"password\">Password</Labels>\n                  <InputField\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    value={password}\n                    placeholder=\"Password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                  />\n                </div>\n                <button\n                  className=\"default-btn seller\"\n                  disabled={Seller.loading ? true : false}\n                >\n                  {Seller.loading ? \"Loading...\" : \"Register As Seller\"}\n                </button>\n                <p className=\"mt-2\">\n                  Already a seller?{\" \"}\n                  <Link to=\"/seller/login\">\n                    <Colorful style={{ textDecoration: \"underline\" }}>\n                      Login as seller\n                    </Colorful>\n                  </Link>\n                </p>\n              </div>\n              {Seller.error.message !== null && (\n                <span className=\"text-danger\">\n                  {Seller.error.message !== \"Login To See The Content.\" &&\n                    Seller.error.message}\n                </span>\n              )}\n            </div>\n          </form>\n        </div>\n        <div className=\"col-md-4 register-page-col\">\n          <img\n            src={RegisterPhoto}\n            alt=\"online shopping\"\n            style={{ width: \"100%\" }}\n          />\n          <section style={{ textAlign: \"center\" }}>\n            <BrandName>UralShop</BrandName>\n            <Muted>Güney Ural @ 2021</Muted>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","/home/guney/ralShop/frontend/src/data/countries.js",[],"/home/guney/ralShop/frontend/src/redux/reducers/sellerReducer.js",[],"/home/guney/ralShop/frontend/src/redux/actions/sellerActions.js",[],"/home/guney/ralShop/frontend/src/pages/seller/loginPage.js",[],"/home/guney/ralShop/frontend/src/pages/seller/sellerHomePage.js",[],"/home/guney/ralShop/frontend/src/pages/seller/ForgotPasswordSendEmailPage.js",["235"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { AiOutlineLock } from \"react-icons/ai\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { sendForgotPasswordEmail } from \"../../redux/actions/sellerActions\";\n\nconst CenterDiv = styled.div`\n  margin-top: 30px;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst CenterBox = styled.div`\n  border: 1px solid #c2c2c2;\n  background: white;\n  margin: auto;\n  padding: 10px 40px;\n  width: 400px;\n  box-shadow: 2px 2px 10px #dedede;\n  position: relative;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst InputField = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #fafafa;\n  border: 1px solid #c2c2c2;\n  width: 100%;\n`;\n\nconst SectionBottom = styled.section`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background: #efefef;\n  border-top: 1px solid #c2c2c2;\n  font-weight: 500;\n  text-align: center;\n  padding: 7px;\n  :hover {\n    text-decoration: underline;\n  }\n`;\nconst ForgotPasswordSendEmailPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const Seller = useSelector((state) => state.Seller);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (\n      Seller.forgotPassword.isPasswordReset &&\n      Seller.forgotPassword.sendEmailSuccess\n    ) {\n      localStorage.setItem(\"seller_password_reset\", true);\n      if (email !== \"\") localStorage.setItem(\"seller_email\", email);\n    }\n  }, [Seller, dispatch]);\n\n  const sendCode = (e) => {\n    e.preventDefault();\n    dispatch(sendForgotPasswordEmail(email, window.origin));\n  };\n\n  return (\n    <CenterDiv>\n      <CenterBox>\n        <AiOutlineLock\n          style={{ display: \"grid\", margin: \"auto\", fontSize: \"5rem\" }}\n        />\n        <h2 style={{ textAlign: \"center\" }}>Forgot Password?</h2>\n        <p\n          style={{\n            color: \"var(--text-muted)\",\n            textAlign: \"center\",\n            fontSize: \"15px\",\n          }}\n        >\n          Enter your email and we'll send you a code to get your account back.\n        </p>\n        <form style={{ margin: \"auto\" }} onSubmit={(e) => sendCode(e)}>\n          <InputField\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            aria-label=\"email input\"\n            value={email}\n            placeholder=\"Email\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <button\n            className=\"default-btn mt-3 w-100\"\n            disabled={email.length < 1 || Seller.loading ? true : false}\n          >\n            {Seller.loading ? \"Loading...\" : \"Send Login Link\"}\n          </button>\n          {Seller.error.message ? (\n            <span className=\"text-danger\">\n              {Seller.error.message !== \"Login To See The Content.\" &&\n                Seller.error.message}\n            </span>\n          ) : (\n            Seller.forgotPassword.sendEmailSuccess && (\n              <span className=\"text-success\">\n                Email Sent. Click the link we sent to your mail.\n              </span>\n            )\n          )}\n        </form>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"var(--text-muted)\",\n            fontSize: \"14px\",\n            fontWeight: \"500\",\n            paddingTop: \"30px\",\n            paddingBottom: \"40px\",\n          }}\n        >\n          OR\n        </p>\n        <SectionBottom>\n          <Link\n            to=\"/seller/login\"\n            style={{ color: \"var(--primary-text)\", textDecoration: \"none\" }}\n          >\n            Back To Login Page\n          </Link>\n        </SectionBottom>\n      </CenterBox>\n    </CenterDiv>\n  );\n};\n\nexport default ForgotPasswordSendEmailPage;\n","/home/guney/ralShop/frontend/src/pages/seller/changePasswordPage.js",["236"],"import React, { useEffect, useState } from \"react\";\nimport { CgPassword } from \"react-icons/cg\";\nimport styled from \"styled-components\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  confirmPasswordResetToken,\n  resetPassword,\n} from \"../../redux/actions/sellerActions\";\n\nconst CenterDiv = styled.div`\n  margin-top: 30px;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst CenterBox = styled.div`\n  border: 1px solid #c2c2c2;\n  background: white;\n  margin: auto;\n  padding: 10px 40px;\n  width: 400px;\n  box-shadow: 2px 2px 10px #dedede;\n  position: relative;\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n`;\n\nconst InputField = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #fafafa;\n  border: 1px solid #c2c2c2;\n  width: 100%;\n`;\n\nconst SectionBottom = styled.section`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background: #efefef;\n  border-top: 1px solid #c2c2c2;\n  font-weight: 500;\n  text-align: center;\n  padding: 7px;\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst ChangePasswordPage = () => {\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [err, setErr] = useState(null);\n  const { token } = useParams();\n  const dispatch = useDispatch();\n  const Seller = useSelector((state) => state.Seller);\n\n  useEffect(() => {\n    dispatch(\n      confirmPasswordResetToken(localStorage.getItem(\"seller_email\"), token)\n    );\n  }, []);\n\n  useEffect(() => {\n    if (\n      !localStorage.getItem(\"seller_email\") ||\n      !localStorage.getItem(\"seller_password_reset\")\n    ) {\n      window.location = window.origin + \"/seller/login\";\n    }\n    if (Seller.forgotPassword.checkToken === false) {\n      window.location = window.origin + \"/seller/login\";\n    }\n    if (Seller.forgotPassword.resetPasswordError === false) {\n      window.location = window.origin + \"/seller/login\";\n    }\n  }, [Seller]);\n\n  useEffect(() => {\n    if (newPassword.length > 6 && confirmPassword.length > 6) {\n      if (newPassword !== confirmPassword) {\n        setErr(\"Passwords don't match.\");\n      } else {\n        setErr(false);\n      }\n    } else {\n      if (newPassword.length > 0 && confirmPassword.length > 0) {\n        setErr(\"Password must be at least 6 characters.\");\n      } else {\n        setErr(false);\n      }\n    }\n  }, [newPassword, confirmPassword]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      resetPassword(\n        newPassword,\n        confirmPassword,\n        localStorage.getItem(\"seller_email\"),\n        token\n      )\n    );\n  };\n\n  return (\n    <CenterDiv>\n      <CenterBox>\n        <CgPassword\n          style={{ display: \"grid\", margin: \"auto\", fontSize: \"5rem\" }}\n        />\n        <h2 style={{ textAlign: \"center\" }}>New Password</h2>\n        <p\n          style={{\n            color: \"var(--text-muted)\",\n            textAlign: \"center\",\n            fontSize: \"15px\",\n          }}\n        >\n          Enter your new password and confirm it. Passwor must be more than 6\n          characters.\n        </p>\n        <form style={{ margin: \"auto\" }} onSubmit={(e) => handleSubmit(e)}>\n          <InputField\n            type=\"password\"\n            name=\"newPassword\"\n            id=\"newPassword\"\n            value={newPassword}\n            aria-label=\"New password input\"\n            placeholder=\"Enter your new password\"\n            onChange={(e) => setNewPassword(e.target.value)}\n          />\n          <InputField\n            type=\"password\"\n            name=\"confirmPassword\"\n            id=\"confirmPassword\"\n            value={confirmPassword}\n            aria-label=\"Confirm new password input\"\n            className=\"mt-3\"\n            placeholder=\"Confirm your new password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n          <button\n            className=\"default-btn mt-5 w-100\"\n            disabled={\n              newPassword.length < 6 || newPassword.length < 6 || Seller.loading\n                ? true\n                : false\n            }\n          >\n            {Seller.loading ? \"Loading...\" : \"Change Password\"}\n          </button>\n          {err && <span className=\"text-danger\">{err}</span>}\n          {Seller.forgotPassword.resetPasswordError && (\n            <span className=\"text-danger\">\n              An error occured while resetting the password. Try again or try to\n              get new passwor reset link.\n            </span>\n          )}\n        </form>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"var(--text-muted)\",\n            fontSize: \"14px\",\n            fontWeight: \"500\",\n            paddingTop: \"30px\",\n            paddingBottom: \"40px\",\n          }}\n        >\n          OR\n        </p>\n        <SectionBottom>\n          <Link\n            to=\"/seller/login\"\n            style={{ color: \"var(--primary-text)\", textDecoration: \"none\" }}\n          >\n            Back To Login Page\n          </Link>\n        </SectionBottom>\n      </CenterBox>\n    </CenterDiv>\n  );\n};\n\nexport default ChangePasswordPage;\n","/home/guney/ralShop/frontend/src/privateRoutes/sellerChangePasswordPage.js",["237"],"import React, { useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { notSellerRoute } from \"../redux/actions/sellerActions\";\n\nconst SellerChangePasswordPage = ({\n  component: Component,\n  isResetPasswordSuccess,\n  ...rest\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(notSellerRoute());\n  }, []);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isResetPasswordSuccess === true || isResetPasswordSuccess === null ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/seller/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default SellerChangePasswordPage;\n","/home/guney/ralShop/frontend/src/privateRoutes/sellerRoutes.js",["238"],"import React, { useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { sellerRoute } from \"../redux/actions/sellerActions\";\n\nconst SellerRoute = ({\n  component: Component,\n  isSellerAuthenticated,\n  ...rest\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(sellerRoute());\n  }, []);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isSellerAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/seller/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default SellerRoute;\n","/home/guney/ralShop/frontend/src/privateRoutes/NormalRoute.js",["239"],"import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { notSellerRoute } from \"../redux/actions/sellerActions\";\n\nconst SellerRoute = ({ component: Component, ...rest }) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(notSellerRoute());\n  }, []);\n  return <Route {...rest} render={(props) => <Component {...props} />} />;\n};\n\nexport default SellerRoute;\n","/home/guney/ralShop/frontend/src/components/sellerNavbar.js",[],"/home/guney/ralShop/frontend/src/pages/seller/SellerProfilePage.js",[],"/home/guney/ralShop/frontend/src/pages/seller/AddProductPage.js",["240"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { categories, subCategories } from \"../../data/category\";\nimport LoadingIcon from \"../../assets/loading.gif\";\nimport styled from \"styled-components\";\nimport { CompactPicker } from \"react-color\";\nimport JoditEditor from \"jodit-react\";\nimport mapboxgl from \"mapbox-gl\";\nimport axios from \"axios\";\nimport { priceConverter } from \"../../utils/helpers\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createProduct } from \"../../redux/actions/productActions\";\nimport { Redirect } from \"react-router-dom\";\n\nconst PageHeader = styled.h1`\n  font-weight: 300;\n  text-align: center;\n`;\nconst Labels = styled.label`\n  font-weight: 500;\n`;\nconst InputField = styled.input`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nconst Select = styled.select`\n  padding: 4px 5px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n  width: 90%;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nconst RemoveIcon = styled.span`\n  color: white;\n  font-size: 20px;\n  font-weight: bold;\n  position: absolute;\n  bottom: -6px;\n  left: 3px;\n  text-shadow: -1px -1px black;\n  visibility: hidden;\n`;\nconst ColorPreview = styled.div`\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  cursor: pointer;\n  display: inline-block;\n  margin: 1px;\n  border: 1px solid black;\n  position: relative;\n  &:hover {\n    ${RemoveIcon} {\n      visibility: visible;\n    }\n  }\n`;\n\nconst ColorOptions = styled.div`\n  margin-left: 20px;\n  @media (max-width: 512px) {\n    margin-left: 0;\n  }\n`;\n\nconst AddProductPage = () => {\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [subCategory, setSubCategory] = useState(\"\");\n  const [colors, setColors] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const editor = useRef(null);\n  const [map, setMap] = useState(null);\n  const [results, setResults] = useState([]);\n  const [notFound, setNotFound] = useState(null);\n  const [center, setCenter] = useState([35, 39]);\n  const mapContainer = useRef(null);\n  const [price, setPrice] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [stock, setStock] = useState(0);\n  const config = {\n    readonly: false,\n  };\n  const Product = useSelector((state) => state.Product);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const initializeMap = ({ setMap, mapContainer }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        center,\n        zoom: 5,\n      });\n      map.on(\"load\", () => {\n        setMap(map);\n        map.resize();\n      });\n    };\n\n    if (!map) {\n      initializeMap({ setMap, mapContainer });\n    }\n\n    if (map !== null && location.length > 0) {\n      map.flyTo({\n        center,\n        essential: true,\n        zoom: 12,\n      });\n    }\n  }, [map, center]);\n\n  useEffect(() => {\n    if (location.length > 0) {\n      if (results !== []) {\n        document\n          .querySelector(\".location-search-results\")\n          .classList.add(\"active\");\n      }\n    } else {\n      document\n        .querySelector(\".location-search-results\")\n        .classList.remove(\"active\");\n    }\n    if (notFound) {\n      setIsLoading(false);\n      document\n        .querySelector(\".location-search-results\")\n        .classList.remove(\"active\");\n    }\n  }, [location, results, notFound]);\n\n  const displayResults = () => {\n    if (notFound !== null && notFound === false)\n      document\n        .querySelector(\".location-search-results\")\n        .classList.add(\"active\");\n  };\n\n  const removeResults = () => {\n    setTimeout(() => {\n      document\n        .querySelector(\".location-search-results\")\n        .classList.remove(\"active\");\n    }, 100);\n  };\n\n  const changeLocation = (placeName, coordinate) => {\n    setLocation(placeName);\n    setCenter(coordinate);\n  };\n\n  const searchAddress = (e) => {\n    setLocation(e.target.value);\n    setIsLoading(true);\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${location}.json?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`\n      )\n      .then((res) => res.data)\n      .then((data) => {\n        setResults(data.features);\n        setIsLoading(false);\n        setNotFound(false);\n      })\n      .catch((err) => {\n        setResults([]);\n        setNotFound(true);\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let formData = new FormData();\n    const imageFile = document.querySelector(`input[type='file']`);\n    if (imageFile.files) {\n      for (let i = 0; i < imageFile.files.length; i++) {\n        formData.append(\"images\", imageFile.files[i]);\n      }\n    }\n    formData.append(\"title\", name);\n    formData.append(\"price\", price);\n    formData.append(\"description\", description);\n    formData.append(\"stock\", stock);\n    formData.append(\"brand\", brand);\n    formData.append(\"colors\", colors);\n    formData.append(\"location\", location);\n    formData.append(\"coordinate\", center);\n    formData.append(\"category\", category);\n    formData.append(\"subCategory\", subCategory);\n    dispatch(createProduct(formData));\n  };\n\n  const handleChangeComplete = (color) => {\n    setColor(color.hex);\n    setColors((oldColors) => {\n      if (colors.indexOf(color.hex) === -1) {\n        return [color.hex, ...oldColors];\n      } else {\n        return [...oldColors];\n      }\n    });\n  };\n\n  const removeColor = (clr) => {\n    setColors(colors.filter((item) => item !== clr));\n  };\n\n  return (\n    <div>\n      <PageHeader>Add Product</PageHeader>\n      <form onSubmit={(e) => handleSubmit(e)}>\n        <div className=\"form-section\">\n          <Labels htmlFor=\"name\">Product Name</Labels>\n          <InputField\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Product Name\"\n            onBlur={(e) => setName(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-md-4 mb-3\">\n            <Labels htmlFor=\"category\">Select Category</Labels>\n            <Select\n              name=\"category\"\n              id=\"category\"\n              onChange={(e) => setCategory(e.target.value)}\n              required\n            >\n              <option value=\"\">Select Category</option>\n              {categories.map((item, idx) => {\n                return (\n                  <option value={item} key={idx}>\n                    {item}\n                  </option>\n                );\n              })}\n            </Select>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"form-section\">\n              <Labels htmlFor=\"subCategory\">Select Sub Category</Labels>\n              <Select\n                name=\"subCategory\"\n                id=\"subCategory\"\n                onChange={(e) => setSubCategory(e.target.value)}\n                required\n              >\n                <option value=\"\">Select Sub Category</option>\n                {category !== \"\" &&\n                  subCategories[categories.indexOf(category)].map(\n                    (item, idx) => {\n                      return (\n                        <option value={item} key={idx}>\n                          {item}\n                        </option>\n                      );\n                    }\n                  )}\n              </Select>\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"form-section\">\n              <Labels htmlFor=\"stock\">Stock</Labels>\n              <InputField\n                id=\"stock\"\n                type=\"number\"\n                placeholder=\"Stock\"\n                value={stock}\n                onChange={(e) => setStock(e.target.value)}\n                min=\"1\"\n              />\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className=\"form-section\">\n              <Labels htmlFor=\"brand\">Brand Name</Labels>\n              <InputField\n                type=\"text\"\n                name=\"brand\"\n                id=\"brand\"\n                placeholder=\"Brand Name\"\n                onBlur={(e) => setBrand(e.target.value)}\n                required\n              />\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <div className=\"form-section\">\n              <Labels htmlFor=\"price\">Price ({priceConverter(price)})</Labels>\n              <InputField\n                id=\"price\"\n                type=\"number\"\n                placeholder=\"Price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n                min=\"1\"\n              />\n            </div>\n          </div>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            alignItems: \"flex-start\",\n          }}\n        >\n          <div>\n            <Labels htmlFor=\"colorPicker\">\n              Pick Color Options For Product\n            </Labels>\n            <br />\n            <span className=\"form-text\" style={{ marginTop: \"-5px\" }}>\n              Picked colors will be displayed on right.\n            </span>\n            <br />\n            <CompactPicker\n              id=\"colorPicker\"\n              color={color}\n              onChange={(color) => handleChangeComplete(color)}\n            />\n          </div>\n          <ColorOptions>\n            <p style={{ fontWeight: \"500\" }}>Picked Colors:</p>\n            <span\n              style={{ marginTop: \"-15px\", display: \"block\" }}\n              className=\"form-text\"\n            >\n              Colors gets removed on click\n            </span>\n            <br />\n            {colors.length > 0 &&\n              colors.map((clr, idx) => {\n                return (\n                  <ColorPreview\n                    style={{ background: clr }}\n                    onClick={() => removeColor(clr)}\n                    key={idx}\n                    id={`clr${clr.substring(1, clr.length)}`}\n                  >\n                    <RemoveIcon>&times;</RemoveIcon>\n                  </ColorPreview>\n                );\n              })}\n          </ColorOptions>\n        </div>\n        <Labels htmlFor=\"description\" className=\"mt-5\">\n          Description\n        </Labels>\n        <JoditEditor\n          id=\"description\"\n          ref={editor}\n          value={description}\n          config={config}\n          tabIndex={1}\n          onBlur={(newContent) => setDescription(newContent.target.innerHTML)}\n        />\n        <Labels htmlFor=\"images\" className=\"mt-3\">\n          Choose Product Images\n        </Labels>\n        <input className=\"form-control\" type=\"file\" id=\"images\" multiple />\n        <div className=\"form-section mt-3\">\n          <Labels htmlFor=\"location\">Enter Location Of Product</Labels>\n          <InputField\n            type=\"text\"\n            name=\"location\"\n            id=\"location\"\n            aria-label=\"location\"\n            placeholder=\"Location\"\n            value={location}\n            onFocus={() => displayResults()}\n            onChange={(e) => searchAddress(e)}\n            onBlur={() => removeResults()}\n            autoComplete=\"off\"\n            required\n          />\n          <div className=\"location-search-results w-100\">\n            {isLoading ? (\n              \"Loading...\"\n            ) : (\n              <div>\n                {results.map((item, idx) => {\n                  return (\n                    <section\n                      className=\"location-result mb-1\"\n                      key={idx}\n                      onClick={() =>\n                        changeLocation(\n                          item.place_name,\n                          item.geometry.coordinates\n                        )\n                      }\n                    >\n                      <span>{item.text}</span>\n                      <br />\n                      <span style={{ fontSize: \"13px\" }}>\n                        {`${item.place_name.substring(0, 32)}...`}\n                      </span>\n                    </section>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n          <div className=\"form-text text-danger\">\n            {notFound && \"No address found\"}\n          </div>\n          <div\n            ref={(el) => (mapContainer.current = el)}\n            style={{ height: \"300px\" }}\n          />\n        </div>\n        <button className=\"default-btn mt-4\">Create Product</button>\n        {Product.loading && (\n          <>\n            <img src={LoadingIcon} alt=\"loading gif\" height=\"70px\" />\n            <p className=\"text-muted\">This may take a while.</p>\n          </>\n        )}\n        <section className=\"mt-1\">\n          {Product.error.msg !== null && (\n            <p className=\"text-danger\">{Product.error.msg}</p>\n          )}\n          {Object.keys(Product.createdProduct).length > 1 && (\n            <>\n              <p className=\"text-success\">Product Created Successfully.</p>\n              <Redirect to={`/product/${Product.createdProduct._id}`} />\n            </>\n          )}\n        </section>\n      </form>\n    </div>\n  );\n};\n\nexport default AddProductPage;\n","/home/guney/ralShop/frontend/src/utils/helpers.js",[],"/home/guney/ralShop/frontend/src/redux/reducers/productReducer.js",[],"/home/guney/ralShop/frontend/src/redux/actions/productActions.js",["241"],"import {\n  CREATE_PRODUCT,\n  PRODUCT_ERROR,\n  PRODUCT_LOADING,\n  GET_PRODUCT_BY_ID,\n} from \"./types\";\nimport axios from \"axios\";\n\nexport const createProduct = (data) => (dispatch) => {\n  dispatch({ type: PRODUCT_LOADING });\n\n  axios\n    .post(\"/api/product/new\", data, {\n      headers: {\n        \"shop-token\": localStorage.getItem(\"shop-token\"),\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    })\n    .then((res) => res.data)\n    .then((data) => {\n      dispatch({ type: CREATE_PRODUCT, payload: data });\n    })\n    .catch((err) => {\n      dispatch({\n        type: PRODUCT_ERROR,\n        payload: {\n          msg: err.response.data.errorMessage,\n          status: err.response.status,\n        },\n      });\n    });\n};\n\nexport const productLoading = () => {\n  return { type: PRODUCT_LOADING };\n};\n\nexport const getProductById = (id) => (dispatch) => {\n  dispatch({ type: PRODUCT_LOADING });\n\n  axios\n    .get(`/api/product/${id}`)\n    .then((res) => res.data)\n    .then((data) => {\n      dispatch({ type: GET_PRODUCT_BY_ID, payload: data });\n    })\n    .catch((err) => {\n      dispatch({\n        type: PRODUCT_ERROR,\n        payload: {\n          msg: err.response.data.errorMessage,\n          status: err.response.status,\n        },\n      });\n    });\n};\n\nconst tokenConfig = () => {\n  const token = localStorage.getItem(\"shop-token\");\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  if (token) config.headers[\"shop-token\"] = token;\n  return config;\n};\n","/home/guney/ralShop/frontend/src/pages/ProductPage.js",["242","243","244","245","246","247","248","249","250"],"import React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProductById } from \"../redux/actions/productActions\";\nimport NotFound from \"./NotFound\";\nimport LoadingIcon from \"../assets/loading.gif\";\nimport Styled from \"styled-components\";\nimport {\n  AiFillCaretLeft,\n  AiFillCaretRight,\n  AiOutlineMinus,\n  AiOutlinePlus,\n  AiFillEdit,\n} from \"react-icons/ai\";\nimport { HiDotsVertical } from \"react-icons/hi\";\nimport { FaHeart } from \"react-icons/fa\";\nimport FullscreenImage from \"./../components/fullscreenImage\";\nimport { priceConverter } from \"../utils/helpers\";\nimport ReactStars from \"react-rating-stars-component\";\nimport ProductLocation from \"../components/ProductLocation\";\nimport ProductDescription from \"../components/ProductDescription\";\nimport {\n  addReview,\n  getReviews,\n  deleteReview,\n} from \"../redux/actions/productReviewActions\";\nimport NoPhoto from \"../assets/noProfilePic.jpg\";\nimport moment from \"moment\";\nimport { BsStarFill, BsStarHalf, BsStar, BsTrashFill } from \"react-icons/bs\";\nimport MessageBox from \"../components/messageBox\";\n\nconst NavDivider = Styled.span`\n     font-weight:bold;\n     padding-left:5px;\n`;\nconst ProductImages = Styled.div`\n     height: 100%;\n     width: 100%;\n     position: relative;\n     height: 400px;\n`;\nconst ImageBottomSection = Styled.section`\n     display:flex;\n     justify-content:space-between;\n     align-items:center;\n`;\nconst InfoRow = Styled.div`\n  display: flex;\n  justify-content: space-between;\n  width:300px;\n  padding:8px;\n  padding-left:0;\n`;\nconst TickIcon = Styled.span`\n  color: white;\n  font-size: 20px;\n  font-weight: bold;\n  position: absolute;\n  bottom: -6.3px;\n  left: 1px;\n  text-shadow: -1px -1px black;\n  visibility: hidden;\n`;\nconst ColorPreview = Styled.div`\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  cursor: pointer;\n  display: inline-block;\n  margin: 1px;\n  border: 1px solid black;\n  position: relative;\n  &:hover {\n    ${TickIcon} {\n      visibility: visible;\n    }\n  }\n`;\nconst QuantitySection = Styled.section`\n  display:flex;\n  align-items:center;\n`;\nconst QtyButton = Styled.button`\n  background:transparent;\n  border:transparent;\n  padding:2px;\n  font-weight:bold;\n  font-size:20px;\n  &:focus{\n    outline: none;\n  }\n`;\nconst QtyNumber = Styled.span`\n  font-size:20px;\n`;\nconst AddButtons = Styled.div`\n  display:flex;\n  align-items:center;\n`;\nconst TabNav = Styled.nav`\n  display:flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst TabList = Styled.li`\n  display: inline-block;\n  width:100%;\n  text-align:center;\n  font-weight:500;\n  font-size:1.5rem;\n  padding:5px;\n  transition:0.3s;\n  cursor:pointer;\n\n  &:hover{\n    background:#efefef;\n    box-shadow: inset 0 -2px 0 var(--primary-color);\n  }\n`;\nconst StarCount = Styled.p`\n  font-size: 15px;\n  margin-top:15px;\n  color: var(--text-muted);\n  text-decoration:underline;\n`;\nconst StarCountSection = Styled.section`\n  display:flex;\n  position:relative;\n  justify-content:space-between;\n  align-items:center;\n  margin-bottom:-10px;\n  width:80%;\n   @media (max-width: 900px) {\n    width: 100%;\n  }\n`;\nconst TextField = Styled.textarea`\n  padding: 4px 12px;\n  border-radius: 3px;\n  background: #efefef;\n  border: 1px solid #c2c2c2;\n`;\nconst ProfilePicture = Styled.img`\n  height:50px;\n  width:50px;\n  object-fit:cover;\n  border-radius:50%;\n`;\nconst UserInfo = Styled.section`\n  display:flex;\n  flex-direction: column;\n  margin-left: 5px;\n`;\nconst UserSection = Styled.section`\n  display:flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst RatingBar = Styled.div`\n  position:absolute;\n  border-radius: 4px;\n  left: 22%;\n  width: 60%;\n  height: 25px;\n  background: #d9d9d9;\n  transition: 0.3s;\n`;\nconst RatingBarYellow = Styled.section`\n  background: rgb(255, 215, 0);\n  border: 1px solid #b39700;\n  border-radius: 4px;\n  height: 25px;\n  transition: 0.3s;\n`;\n\nconst ProductPage = () => {\n  const { id } = useParams();\n  const { error, loading } = useSelector((state) => state.Product);\n  const Product = useSelector((state) => state.Product.product);\n  const Review = useSelector((state) => state.ProductReview);\n  const User = useSelector((state) => state.Auth);\n  const dispatch = useDispatch();\n  const [index, setIndex] = useState(0);\n  const [tab, setTab] = useState(\"description\");\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [qty, setQty] = useState(1);\n  const [color, setColor] = useState(\"\");\n  const [review, setReview] = useState(\"\");\n  const [rating, setRating] = useState(1);\n  const [reviews, setReviews] = useState([]);\n  const [sort, setSort] = useState(\"default\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [reviewId, setReviewId] = useState(\"\");\n  const [average, setAverage] = useState(0);\n  const fiveStar = {\n    size: 20,\n    value: 5,\n    edit: false,\n  };\n  const fourStar = {\n    size: 20,\n    value: 4,\n    edit: false,\n  };\n  const threeStar = {\n    size: 20,\n    value: 3,\n    edit: false,\n  };\n  const twoStar = {\n    size: 20,\n    value: 2,\n    edit: false,\n  };\n  const oneStar = {\n    size: 20,\n    value: 1,\n    edit: false,\n  };\n  const starRating = {\n    size: 27,\n    count: 5,\n    isHalf: false,\n    value: rating,\n    onChange: (newRating) => {\n      setRating(newRating);\n    },\n  };\n\n  useEffect(() => {\n    dispatch(getProductById(id));\n    dispatch(getReviews(id));\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    const getImage = document.querySelector(\n      `.product-images-section img[data-idx=\"${index}\"]`\n    );\n    document.querySelectorAll(\".product-images-section img\").forEach((item) => {\n      item.classList.remove(\"product-img-active\");\n    });\n    if (getImage) getImage.classList.add(\"product-img-active\");\n  }, [index]);\n\n  useEffect(() => {\n    const getColor = document.querySelector(\".color-circle\");\n    const getColorCircle = document.querySelector(\".color-circle span\");\n    if (getColorCircle) getColorCircle.style.visibility = \"visible\";\n    if (getColor) setColor(getColor.getAttribute(\"id\").substring(3));\n\n    const x = document.querySelector(\".description\");\n    if (x) {\n      x.innerHTML = Product.description;\n      let images = document.querySelectorAll(\".description img\");\n      if (images) {\n        images.forEach((item) => {\n          item.style.width = \"100%\";\n        });\n      }\n    }\n  }, [Product]);\n\n  useEffect(() => {\n    setReviews(Review.productReviews);\n    setAverage(Review.average);\n  }, [Review, average]);\n\n  const tempStars = Array.from({ length: 5 }, (_, index) => {\n    const number = index + 0.5;\n    return (\n      <span key={index} style={{ fontSize: \"24px\" }}>\n        {average > number ? (\n          <BsStarFill style={{ color: \"rgb(255, 215, 0)\" }} />\n        ) : average > index ? (\n          <BsStarHalf style={{ color: \"rgb(255, 215, 0)\" }} />\n        ) : (\n          <BsStar style={{ color: \"rgb(255, 215, 0)\" }} />\n        )}\n      </span>\n    );\n  });\n\n  const setProductColor = (id) => {\n    const getColor = document.querySelectorAll(\".color-circle span\");\n    getColor.forEach((item) => {\n      item.style.visibility = \"visible\";\n    });\n    const getCircle = document.querySelector(`${id} span`);\n    if (getCircle) getCircle.style.visibility = \"visible\";\n    setColor(id.substring(3));\n  };\n\n  const next = () => {\n    if (index >= Product.images.length - 1) {\n      setIndex(0);\n    } else {\n      setIndex(index + 1);\n    }\n  };\n  const prev = () => {\n    if (index <= 0) {\n      setIndex(Product.images.length - 1);\n    } else {\n      setIndex(index - 1);\n    }\n  };\n\n  const createReview = (e) => {\n    e.preventDefault();\n    dispatch(addReview(rating, review, Product._id));\n  };\n\n  const showFullscreen = () => {\n    setIsFullscreen(true);\n    window.scrollTo(0, 0);\n  };\n\n  const increaseQty = () => {\n    if (Product.stock > qty) {\n      setQty(qty + 1);\n    }\n  };\n\n  const decreaseQty = () => {\n    if (qty > 1) {\n      setQty(qty - 1);\n    }\n  };\n\n  useEffect(() => {\n    const listenKeyboard = (e) => {\n      if (e.code === \"ArrowLeft\") {\n        prev();\n      }\n      if (e.code === \"ArrowRight\") {\n        next();\n      }\n    };\n    document.addEventListener(\"keydown\", listenKeyboard);\n    return function removeListener() {\n      document.removeEventListener(\"keydown\", listenKeyboard);\n    };\n  }, [next, prev]);\n\n  useEffect(() => {\n    if (isFullscreen) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"auto\";\n    }\n  }, [isFullscreen]);\n\n  useEffect(() => {\n    const getTab = document.querySelector(`.tab-nav-item[data-tab=\"${tab}\"]`);\n    const getTabs = document.querySelectorAll(\".tab-nav-item\");\n    if (getTabs)\n      getTabs.forEach((item) => item.classList.remove(\"tab-nav-item-active\"));\n    if (getTab) getTab.classList.add(\"tab-nav-item-active\");\n  }, [tab]);\n\n  useEffect(() => {\n    const body = document.querySelector(\"body\");\n    if (isModalOpen) {\n      body.style.overflow = \"hidden\";\n    } else {\n      body.style.overflow = \"auto\";\n    }\n  }, [isModalOpen]);\n\n  const removeReview = (reviewId) => {\n    setReviewId(reviewId);\n    setIsModalOpen(true);\n  };\n\n  if (loading) {\n    return (\n      <img\n        src={LoadingIcon}\n        alt=\"Loading Icon\"\n        height=\"100px\"\n        style={{ display: \"grid\", margin: \"auto\" }}\n      />\n    );\n  }\n  if (error.msg === \"Product Not Found\" || error.msg === \"Enter Valid Id.\") {\n    return <NotFound />;\n  }\n  if (Object.keys(Product).length > 0) {\n    return (\n      <div>\n        {isModalOpen && (\n          <MessageBox\n            isRedux={true}\n            action={deleteReview}\n            message={\"Do You Want To Delete Your Review ?\"}\n            setIsModalOpen={setIsModalOpen}\n            header={\"Delete Review\"}\n            btnText={\"Delete\"}\n            param={reviewId}\n          />\n        )}\n\n        {isFullscreen && (\n          <FullscreenImage\n            setIsFullscreen={setIsFullscreen}\n            images={Product.images && Product.images}\n            index={index}\n            prev={prev}\n            next={next}\n            setIndex={setIndex}\n          />\n        )}\n\n        <nav className=\"breadcrumb\" style={{ fontSize: \"14px\" }}>\n          <ul style={{ listStyleType: \"none\", padding: \"0\" }}>\n            <li style={{ display: \"inline\", textTransform: \"capitalize\" }}>\n              <Link\n                id=\"product-link\"\n                to={`/category/${\n                  Product.category && Product.category.toLowerCase()\n                }`}\n              >\n                {Product.category}\n              </Link>\n            </li>\n            <NavDivider>></NavDivider>\n            <li\n              style={{\n                display: \"inline\",\n                paddingLeft: \"10px\",\n                textTransform: \"capitalize\",\n              }}\n            >\n              <Link\n                id=\"product-link\"\n                to={`/category/${\n                  Product.category &&\n                  Product.subCategory &&\n                  Product.category.toLowerCase()\n                }/${Product.subCategory}`}\n              >\n                {Product.subCategory}\n              </Link>\n            </li>\n            <NavDivider>></NavDivider>\n            <li\n              style={{\n                display: \"inline\",\n                paddingLeft: \"10px\",\n                cursor: \"pointer\",\n                color: \"#0d6efd\",\n              }}\n            >\n              {Product.brand}\n            </li>\n          </ul>\n        </nav>\n        <div className=\"row\" style={{ marginTop: \"-20px\" }}>\n          <h2>{Product.title}</h2>\n          <div className=\"col-md-6\">\n            {Product.images && (\n              <ProductImages>\n                <img\n                  src={Product.images[index].url}\n                  alt=\"product\"\n                  className=\"product-img\"\n                />\n                <AiFillCaretRight\n                  className=\"img-arrows right\"\n                  onClick={() => next()}\n                />\n                <AiFillCaretLeft\n                  className=\"img-arrows left\"\n                  onClick={() => prev()}\n                />\n              </ProductImages>\n            )}\n            <ImageBottomSection>\n              <span className=\"img-index\" style={{ fontSize: \"14px\" }}>\n                {`${index + 1}/${Product.images && Product.images.length}`}{\" \"}\n                Photo\n              </span>\n              <button className=\"btn p-1\" onClick={() => showFullscreen()}>\n                Fullscreen\n              </button>\n            </ImageBottomSection>\n            <section className=\"product-images-section\">\n              {Product.images &&\n                Product.images.map((item, idx) => {\n                  return (\n                    <img\n                      data-idx={idx}\n                      key={idx}\n                      src={item.url}\n                      onClick={() => setIndex(idx)}\n                      className={idx === 0 && \"product-img-active\"}\n                      alt=\"product\"\n                    />\n                  );\n                })}\n            </section>\n          </div>\n          <div className=\"col-md-6 mb-5\">\n            <section\n              style={{ display: \"flex\", justifyContent: \"space-between\" }}\n            >\n              <section>\n                <p className=\"lead\" style={{ fontSize: \"30px\" }}>\n                  <strong>{priceConverter(Product.price)}</strong>\n                </p>\n                <p\n                  className={`${\n                    Product.stock < 1 ? \"text-danger\" : \"text-success\"\n                  }`}\n                  style={{ marginTop: \"-15px\" }}\n                >\n                  <b>{`${Product.stock < 1 ? \"Out Of Stock\" : \"In Stock\"}`}</b>\n                </p>\n                <p\n                  className=\"text-muted\"\n                  style={{ marginTop: \"-15px\", fontSize: \"14px\" }}\n                >\n                  {`${\n                    Product.location.length >= 30\n                      ? `${Product.location.substring(0, 30)}...`\n                      : Product.location\n                  }`}\n                </p>\n              </section>\n              <section>\n                {tempStars}\n                <br />\n                <span\n                  className=\"text-muted\"\n                  style={{\n                    textDecoration: \"underline\",\n                    fontSize: \"14px\",\n                    marginTop: \"-15px\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  <a href=\"#reviews\">{reviews.length} Ratings</a>\n                </span>\n              </section>\n            </section>\n            <hr />\n            <div className=\"seller-section\">\n              <section\n                style={{\n                  background: \"#efefef\",\n                  padding: \"15px\",\n                  paddingBottom: \"5px\",\n                }}\n              >\n                <section\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Link to=\"/\" id=\"product-link\">\n                    <h6 style={{ fontSize: \"18px\" }}>\n                      {Product.shop.companyName}{\" \"}\n                      <div className=\"badge bg-primary\">9.4</div>\n                    </h6>\n                  </Link>\n                  <Link to=\"/\" id=\"product-link\">\n                    Go To Shop\n                  </Link>\n                </section>\n                <p style={{ marginTop: \"-8px\" }}>{Product.shop.fullname}</p>\n                <p style={{ marginTop: \"-10px\" }}>{Product.shop.phoneNumber}</p>\n                <p style={{ marginTop: \"-10px\", marginBottom: \"0px\" }}>\n                  <Link to=\"/\" id=\"product-link\">\n                    Send Message About This Product\n                  </Link>\n                </p>\n              </section>\n            </div>\n            <div className=\"product-info\">\n              <InfoRow>\n                <span>\n                  <b>Brand</b>\n                </span>\n                <span>{Product.brand}</span>\n              </InfoRow>\n              <InfoRow>\n                <b>Color</b>\n                {Product.colors.length > 0 &&\n                  Product.colors.map((clr, idx) => {\n                    return (\n                      <ColorPreview\n                        className=\"color-circle\"\n                        style={{ background: clr }}\n                        onClick={() =>\n                          setProductColor(`clr${clr.substring(1, clr.length)}`)\n                        }\n                        key={idx}\n                        id={`clr${clr.substring(1, clr.length)}`}\n                      >\n                        <TickIcon>&#10003;</TickIcon>\n                      </ColorPreview>\n                    );\n                  })}\n              </InfoRow>\n              <InfoRow>\n                <b>Quantity</b>\n                <QuantitySection>\n                  <QtyButton onClick={() => increaseQty()}>\n                    <AiOutlinePlus />\n                  </QtyButton>\n                  <QtyNumber>{qty}</QtyNumber>\n                  <QtyButton onClick={() => decreaseQty()}>\n                    <AiOutlineMinus />\n                  </QtyButton>\n                </QuantitySection>\n              </InfoRow>\n              <AddButtons>\n                <button\n                  className=\"default-btn w-100 pt-1 pb-1\"\n                  style={{ fontSize: \"18px\" }}\n                  disabled={Product.stock < 1 ? true : false}\n                >\n                  Add To Cart\n                </button>\n                <button\n                  className=\"default-btn pt-1 pb-1\"\n                  style={{ fontSize: \"18px\", borderLeft: \"0\" }}\n                >\n                  <FaHeart />\n                </button>\n              </AddButtons>\n              <div className=\"w-100\" style={{ position: \"relative\" }}>\n                <p\n                  style={{ position: \"absolute\", right: \"0\" }}\n                  className=\"text-muted\"\n                >\n                  In 0 People's Wishlist\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"product-details mt-5\">\n          <TabNav>\n            <ul\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                padding: \"0\",\n                width: \"100%\",\n              }}\n            >\n              <TabList\n                data-tab=\"description\"\n                className=\"tab-nav-item tab-nav-item-active\"\n                onClick={() => setTab(\"description\")}\n              >\n                Description\n              </TabList>\n              <TabList\n                data-tab=\"location-tab\"\n                className=\"tab-nav-item\"\n                onClick={() => setTab(\"location-tab\")}\n              >\n                Location\n              </TabList>\n            </ul>\n          </TabNav>\n          {Product && (\n            <section style={{ background: \"white\" }}>\n              {tab === \"description\" && (\n                <ProductDescription Product={Product} />\n              )}\n              {tab === \"location-tab\" && (\n                <ProductLocation coordinate={Product.coordinate} />\n              )}\n            </section>\n          )}\n        </div>\n        <div className=\"review-section mt-5\" id=\"reviews\">\n          <div className=\"row\">\n            <div className=\"col-md-4 mb-4\">\n              <h4>Customer Reviews</h4>\n              <div\n                style={{\n                  marginTop: \"-15px\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                }}\n              >\n                {tempStars}\n                <p\n                  style={{\n                    textDecoration: \"underline\",\n                    marginTop: \"15px\",\n                    marginLeft: \"5px\",\n                  }}\n                >\n                  {reviews.length} Ratings\n                </p>\n              </div>\n              <h3>\n                {average.toFixed(1)}{\" \"}\n                <span style={{ fontSize: \"22px\" }}>out of 5</span>\n              </h3>\n              <StarCountSection>\n                <StarCount>5 Star</StarCount>\n                <RatingBar>\n                  <RatingBarYellow\n                    style={{\n                      width:\n                        reviews.length > 0\n                          ? Math.round(\n                              ([...reviews.filter((item) => item.rating === 5)]\n                                .length *\n                                100) /\n                                reviews.length\n                            ) + \"%\"\n                          : \"0%\",\n                    }}\n                  />\n                </RatingBar>\n                <StarCount>\n                  %\n                  {reviews.length > 0\n                    ? Math.round(\n                        ([...reviews.filter((item) => item.rating === 5)]\n                          .length *\n                          100) /\n                          reviews.length\n                      )\n                    : \"0\"}{\" \"}\n                </StarCount>\n              </StarCountSection>\n              <StarCountSection>\n                <StarCount>4 Star</StarCount>\n                <RatingBar>\n                  {\" \"}\n                  <RatingBarYellow\n                    style={{\n                      width:\n                        reviews.length > 0\n                          ? Math.round(\n                              ([...reviews.filter((item) => item.rating === 4)]\n                                .length *\n                                100) /\n                                reviews.length\n                            ) + \"%\"\n                          : \"0%\",\n                    }}\n                  />\n                </RatingBar>\n                <StarCount>\n                  %\n                  {reviews.length > 0\n                    ? Math.round(\n                        ([...reviews.filter((item) => item.rating === 4)]\n                          .length *\n                          100) /\n                          reviews.length\n                      )\n                    : \"0\"}{\" \"}\n                </StarCount>\n              </StarCountSection>\n              <StarCountSection>\n                <StarCount>3 Star</StarCount>\n                <RatingBar>\n                  {\" \"}\n                  <RatingBarYellow\n                    style={{\n                      width:\n                        reviews.length > 0\n                          ? Math.round(\n                              ([...reviews.filter((item) => item.rating === 3)]\n                                .length *\n                                100) /\n                                reviews.length\n                            ) + \"%\"\n                          : \"0%\",\n                    }}\n                  />\n                </RatingBar>\n                <StarCount>\n                  %\n                  {reviews.length > 0\n                    ? Math.round(\n                        ([...reviews.filter((item) => item.rating === 3)]\n                          .length *\n                          100) /\n                          reviews.length\n                      )\n                    : \"0\"}{\" \"}\n                </StarCount>\n              </StarCountSection>\n              <StarCountSection>\n                <StarCount>2 Star</StarCount>\n                <RatingBar>\n                  {\" \"}\n                  <RatingBarYellow\n                    style={{\n                      width:\n                        reviews.length > 0\n                          ? Math.round(\n                              ([...reviews.filter((item) => item.rating === 2)]\n                                .length *\n                                100) /\n                                reviews.length\n                            ) + \"%\"\n                          : \"0%\",\n                    }}\n                  />\n                </RatingBar>\n                <StarCount>\n                  %\n                  {reviews.length > 0\n                    ? Math.round(\n                        ([...reviews.filter((item) => item.rating === 2)]\n                          .length *\n                          100) /\n                          reviews.length\n                      )\n                    : \"0\"}{\" \"}\n                </StarCount>\n              </StarCountSection>\n              <StarCountSection>\n                <StarCount>1 Star</StarCount>\n                <RatingBar>\n                  {\" \"}\n                  <RatingBarYellow\n                    style={{\n                      width:\n                        reviews.length > 0\n                          ? Math.round(\n                              ([...reviews.filter((item) => item.rating === 1)]\n                                .length *\n                                100) /\n                                reviews.length\n                            ) + \"%\"\n                          : \"0%\",\n                    }}\n                  />\n                </RatingBar>\n                <StarCount>\n                  %\n                  {reviews.length > 0\n                    ? Math.round(\n                        ([...reviews.filter((item) => item.rating === 1)]\n                          .length *\n                          100) /\n                          reviews.length\n                      )\n                    : \"0\"}{\" \"}\n                </StarCount>\n              </StarCountSection>\n            </div>\n            <div className=\"col-md-8\">\n              <section\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <h1>Reviews</h1>\n                <section>\n                  <label htmlFor=\"sort\">Sort By:</label>{\" \"}\n                  <select\n                    name=\"sort\"\n                    id=\"sort\"\n                    onChange={(e) => setSort(e.target.value)}\n                    className=\"default-btn p-1 sort-dropdown\"\n                    style={{\n                      background: \"#e9e9e9\",\n                      color: \"var(--primary-color)\",\n                      cursor: \"pointer\",\n                    }}\n                    required\n                  >\n                    <option value=\"default\">Default (newest first)</option>\n                    <option value=\"DATE_OLD\">Date (oldest first)</option>\n                    <option value=\"RATING_LOW\">\n                      Rating (lowest rating first)\n                    </option>\n                    <option value=\"RATING_HIGH\">\n                      Rating (highest rating first)\n                    </option>\n                  </select>\n                </section>\n              </section>\n              {User.isAuthenticated && (\n                <section>\n                  <h5>Add Review</h5>\n                  <form\n                    onSubmit={(e) => createReview(e)}\n                    style={{ marginTop: \"-12px\" }}\n                  >\n                    <ReactStars {...starRating} />\n                    <TextField\n                      rows=\"4\"\n                      cols=\"50\"\n                      style={{ width: \"100%\" }}\n                      name=\"review\"\n                      value={review}\n                      onChange={(e) => setReview(e.target.value)}\n                      placeholder=\"Write at least 10 characters long reviews. Good reviews are usually 100 characters or more.\"\n                    ></TextField>\n                    <button className=\"default-btn mt-1\">Add Review</button>\n                  </form>\n                </section>\n              )}\n              <hr />\n              {Review.error.message && (\n                <span className=\"text-danger mb-3\">{Review.error.message}</span>\n              )}\n              {Review.error.status === 429 && (\n                <span className=\"text-danger mb-3\">\n                  Try again later. You reached your limits.\n                </span>\n              )}\n              {Review.loading && (\n                <img\n                  src={LoadingIcon}\n                  alt=\"Loading Icon\"\n                  height=\"80px\"\n                  style={{ display: \"grid\", margin: \"auto\" }}\n                />\n              )}\n              <div className=\"reviews\">\n                {reviews.map((item, id) => {\n                  return (\n                    <div className=\"review-item mb-4\" key={id}>\n                      <UserSection>\n                        <div className=\"d-flex\">\n                          <ProfilePicture\n                            src={\n                              item.user.hasPhoto\n                                ? item.user.profilePhoto.url\n                                : NoPhoto\n                            }\n                            alt=\"profile\"\n                          />\n                          <UserInfo>\n                            <span\n                              className=\"username\"\n                              style={{ fontWeight: \"500\" }}\n                            >\n                              {item.user.username}\n                            </span>\n                            <span\n                              className=\"text-muted\"\n                              style={{ fontSize: \"14px\" }}\n                            >\n                              {moment(item.createdAt).format(\"ll\")}\n                            </span>\n                          </UserInfo>\n                        </div>\n                        {User.user &&\n                          item.user &&\n                          User.user._id === item.user._id && (\n                            <div className=\"review-settings\" tabIndex=\"2\">\n                              <button\n                                style={{\n                                  fontSize: \"20px\",\n                                  background: \"transparent\",\n                                  border: \"transparent\",\n                                }}\n                                className=\"review-settings-btn\"\n                              >\n                                <HiDotsVertical />\n                              </button>\n                              <div className=\"review-settings-list\">\n                                <button onMouseDown={() => {}}>\n                                  <AiFillEdit style={{ color: \"gray\" }} /> Edit\n                                </button>\n                                <button\n                                  onMouseDown={() => removeReview(item._id)}\n                                >\n                                  <BsTrashFill\n                                    style={{\n                                      color: \"gray\",\n                                      marginRight: \"3px\",\n                                    }}\n                                  />\n                                  Delete\n                                </button>\n                              </div>\n                            </div>\n                          )}\n                      </UserSection>\n                      <span>\n                        {[...Array(item.rating)].map((item, index) => {\n                          return (\n                            <BsStarFill\n                              key={index}\n                              style={{\n                                color: \"rgb(255, 215, 0)\",\n                                margin: \"1px\",\n                              }}\n                            />\n                          );\n                        })}\n                        {[...Array(5 - item.rating)].map((item, index) => {\n                          return (\n                            <BsStarFill\n                              key={index}\n                              style={{ margin: \"1px\", color: \"gray\" }}\n                            />\n                          );\n                        })}\n                      </span>\n                      <section className=\"mt-2 review-text\">\n                        {item.text}\n                      </section>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return <></>;\n};\n\nexport default ProductPage;\n","/home/guney/ralShop/frontend/src/components/fullscreenImage.js",[],"/home/guney/ralShop/frontend/src/components/ProductDescription.js",[],"/home/guney/ralShop/frontend/src/components/ProductLocation.js",[],"/home/guney/ralShop/frontend/src/redux/reducers/productReviewReducer.js",["251"],"import {\n  ADD_REVIEW,\n  UPDATE_REVIEW,\n  GET_REVIEWS,\n  DELETE_REVIEW,\n  LOADING,\n  PRODUCT_REVIEW_ERROR,\n} from \"../actions/types\";\n\nconst initialState = {\n  productReviews: [],\n  average: 0,\n  loading: false,\n  error: {\n    message: null,\n    status: null,\n  },\n};\n\nexport const ProductReview = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_REVIEW:\n      return {\n        ...state,\n        productReviews: [action.payload.review, ...state.productReviews],\n        error: { message: null, status: null },\n        loading: false,\n        average: action.payload.average,\n      };\n    case GET_REVIEWS:\n      return {\n        ...state,\n        loading: false,\n        error: { message: null, status: null },\n        productReviews: [...action.payload.reviews],\n        average: action.payload.average,\n      };\n    case PRODUCT_REVIEW_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: {\n          message: action.payload.message,\n          status: action.payload.status,\n        },\n      };\n    case DELETE_REVIEW:\n      return {\n        ...state,\n        loading: false,\n        error: { message: null, status: null },\n        productReviews: [\n          ...state.productReviews.filter(\n            (item) => item._id !== action.payload.id\n          ),\n        ],\n        average: action.payload.average,\n      };\n    case LOADING:\n      return { ...state, loading: true };\n    default:\n      return state;\n  }\n};\n","/home/guney/ralShop/frontend/src/redux/actions/productReviewActions.js",["252"],"import {\n  ADD_REVIEW,\n  UPDATE_REVIEW,\n  GET_REVIEWS,\n  DELETE_REVIEW,\n  LOADING,\n  PRODUCT_REVIEW_ERROR,\n} from \"./types\";\nimport axios from \"axios\";\n\nexport const getReviews = (productId) => (dispatch) => {\n  dispatch({ type: LOADING });\n\n  axios\n    .get(`/api/review/product/${productId}`)\n    .then((res) => res.data)\n    .then((data) => {\n      dispatch({\n        type: GET_REVIEWS,\n        payload: { reviews: data.reviews, average: data.average },\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: PRODUCT_REVIEW_ERROR,\n        payload: {\n          message: err.response.data.errorMessage,\n          status: err.response.status,\n        },\n      });\n    });\n};\n\nexport const addReview = (rating, text, productId) => (dispatch) => {\n  dispatch({ type: LOADING });\n\n  axios\n    .post(\n      `/api/review/product/${productId}/review`,\n      { rating, text },\n      tokenConfig()\n    )\n    .then((res) => res.data)\n    .then((data) => {\n      dispatch({\n        type: ADD_REVIEW,\n        payload: { review: data.review, average: data.average },\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: PRODUCT_REVIEW_ERROR,\n        payload: {\n          message: err.response.data.errorMessage,\n          status: err.response.status,\n        },\n      });\n    });\n};\n\nexport const updateReview = (id, rating, text) => (dispatch) => {};\n\nexport const deleteReview = (id) => (dispatch) => {\n  dispatch({ type: LOADING });\n\n  axios\n    .delete(`/api/review/${id}`, tokenConfig())\n    .then((res) => res.data)\n    .then((data) => {\n      dispatch({ type: DELETE_REVIEW, payload: { id, average: data.average } });\n    })\n    .catch((err) => {\n      dispatch({\n        type: PRODUCT_REVIEW_ERROR,\n        payload: {\n          message: err.response.data.errorMessage,\n          status: err.response.status,\n        },\n      });\n    });\n};\n\nconst tokenConfig = () => {\n  const token = localStorage.getItem(\"user-token\");\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  if (token) config.headers[\"user-token\"] = token;\n  return config;\n};\n",{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","severity":1,"message":"258","line":10,"column":6,"nodeType":"259","endLine":10,"endColumn":8,"suggestions":"260"},{"ruleId":"257","severity":1,"message":"258","line":10,"column":6,"nodeType":"259","endLine":10,"endColumn":8,"suggestions":"261"},{"ruleId":"257","severity":1,"message":"262","line":68,"column":6,"nodeType":"259","endLine":68,"endColumn":22,"suggestions":"263"},{"ruleId":"257","severity":1,"message":"258","line":66,"column":6,"nodeType":"259","endLine":66,"endColumn":12,"suggestions":"264"},{"ruleId":"257","severity":1,"message":"258","line":15,"column":6,"nodeType":"259","endLine":15,"endColumn":8,"suggestions":"265"},{"ruleId":"257","severity":1,"message":"258","line":18,"column":6,"nodeType":"259","endLine":18,"endColumn":8,"suggestions":"266"},{"ruleId":"257","severity":1,"message":"267","line":64,"column":6,"nodeType":"259","endLine":64,"endColumn":8,"suggestions":"268"},{"ruleId":"257","severity":1,"message":"269","line":127,"column":6,"nodeType":"259","endLine":127,"endColumn":19,"suggestions":"270"},{"ruleId":"257","severity":1,"message":"271","line":63,"column":6,"nodeType":"259","endLine":63,"endColumn":24,"suggestions":"272"},{"ruleId":"257","severity":1,"message":"273","line":66,"column":6,"nodeType":"259","endLine":66,"endColumn":8,"suggestions":"274"},{"ruleId":"257","severity":1,"message":"258","line":14,"column":6,"nodeType":"259","endLine":14,"endColumn":8,"suggestions":"275"},{"ruleId":"257","severity":1,"message":"258","line":14,"column":6,"nodeType":"259","endLine":14,"endColumn":8,"suggestions":"276"},{"ruleId":"257","severity":1,"message":"258","line":10,"column":6,"nodeType":"259","endLine":10,"endColumn":8,"suggestions":"277"},{"ruleId":"257","severity":1,"message":"269","line":125,"column":6,"nodeType":"259","endLine":125,"endColumn":19,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":58,"column":7,"nodeType":"281","messageId":"282","endLine":58,"endColumn":18},{"ruleId":"279","severity":1,"message":"283","line":187,"column":10,"nodeType":"281","messageId":"282","endLine":187,"endColumn":15},{"ruleId":"279","severity":1,"message":"284","line":191,"column":10,"nodeType":"281","messageId":"282","endLine":191,"endColumn":14},{"ruleId":"279","severity":1,"message":"285","line":195,"column":9,"nodeType":"281","messageId":"282","endLine":195,"endColumn":17},{"ruleId":"279","severity":1,"message":"286","line":200,"column":9,"nodeType":"281","messageId":"282","endLine":200,"endColumn":17},{"ruleId":"279","severity":1,"message":"287","line":205,"column":9,"nodeType":"281","messageId":"282","endLine":205,"endColumn":18},{"ruleId":"279","severity":1,"message":"288","line":210,"column":9,"nodeType":"281","messageId":"282","endLine":210,"endColumn":16},{"ruleId":"279","severity":1,"message":"289","line":215,"column":9,"nodeType":"281","messageId":"282","endLine":215,"endColumn":16},{"ruleId":"257","severity":1,"message":"290","line":293,"column":9,"nodeType":"291","endLine":299,"endColumn":4,"suggestions":"292"},{"ruleId":"257","severity":1,"message":"293","line":300,"column":9,"nodeType":"291","endLine":306,"endColumn":4,"suggestions":"294"},{"ruleId":"279","severity":1,"message":"295","line":3,"column":3,"nodeType":"281","messageId":"282","endLine":3,"endColumn":16},{"ruleId":"279","severity":1,"message":"295","line":3,"column":3,"nodeType":"281","messageId":"282","endLine":3,"endColumn":16},"no-native-reassign",["296"],"no-negated-in-lhs",["297"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["298"],["299"],"React Hook useEffect has a missing dependency: 'emailOrUsername'. Either include it or remove the dependency array.",["300"],["301"],["302"],["303"],"React Hook useEffect has missing dependencies: 'User.forgotPassword.confirmationCode' and 'dispatch'. Either include them or remove the dependency array.",["304"],"React Hook useEffect has a missing dependency: 'location.length'. Either include it or remove the dependency array.",["305"],"React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.",["306"],"React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["307"],["308"],["309"],["310"],["311"],"no-unused-vars","'tokenConfig' is assigned a value but never used.","Identifier","unusedVar","'color' is assigned a value but never used.","'sort' is assigned a value but never used.","'fiveStar' is assigned a value but never used.","'fourStar' is assigned a value but never used.","'threeStar' is assigned a value but never used.","'twoStar' is assigned a value but never used.","'oneStar' is assigned a value but never used.","The 'next' function makes the dependencies of useEffect Hook (at line 343) change on every render. To fix this, wrap the definition of 'next' in its own useCallback() Hook.","VariableDeclarator",["312"],"The 'prev' function makes the dependencies of useEffect Hook (at line 343) change on every render. To fix this, wrap the definition of 'prev' in its own useCallback() Hook.",["313"],"'UPDATE_REVIEW' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"314","fix":"315"},{"desc":"314","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"314","fix":"321"},{"desc":"314","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"314","fix":"331"},{"desc":"314","fix":"332"},{"desc":"314","fix":"333"},{"desc":"325","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},"Update the dependencies array to be: [dispatch]",{"range":"339","text":"340"},{"range":"341","text":"340"},"Update the dependencies array to be: [User, dispatch, emailOrUsername]",{"range":"342","text":"343"},"Update the dependencies array to be: [User, dispatch]",{"range":"344","text":"345"},{"range":"346","text":"340"},{"range":"347","text":"340"},"Update the dependencies array to be: [User.forgotPassword.confirmationCode, dispatch]",{"range":"348","text":"349"},"Update the dependencies array to be: [map, center, location.length]",{"range":"350","text":"351"},"Update the dependencies array to be: [Seller, dispatch, email]",{"range":"352","text":"353"},"Update the dependencies array to be: [dispatch, token]",{"range":"354","text":"355"},{"range":"356","text":"340"},{"range":"357","text":"340"},{"range":"358","text":"340"},{"range":"359","text":"351"},"Wrap the definition of 'next' in its own useCallback() Hook.",{"range":"360","text":"361"},"Wrap the definition of 'prev' in its own useCallback() Hook.",{"range":"362","text":"363"},[372,374],"[dispatch]",[372,374],[1682,1698],"[User, dispatch, emailOrUsername]",[1573,1579],"[User, dispatch]",[404,406],[467,469],[1446,1448],"[User.forgotPassword.confirmationCode, dispatch]",[3305,3318],"[map, center, location.length]",[1521,1539],"[Seller, dispatch, email]",[1545,1547],"[dispatch, token]",[398,400],[378,380],[345,347],[3205,3218],[7373,7495],"useCallback(() => {\n    if (index >= Product.images.length - 1) {\n      setIndex(0);\n    } else {\n      setIndex(index + 1);\n    }\n  })",[7512,7634],"useCallback(() => {\n    if (index <= 0) {\n      setIndex(Product.images.length - 1);\n    } else {\n      setIndex(index - 1);\n    }\n  })"]